Index: COMIX/Amplitude/Amplitude.H
===================================================================
--- COMIX/Amplitude/Amplitude.H	(revision 27859)
+++ COMIX/Amplitude/Amplitude.H	(working copy)
@@ -191,6 +191,7 @@
 		    const size_t &minntc,const size_t &maxntc,
 		    const std::string &name);
 
+    void ResetJ();
     void ResetZero();
 
     bool Evaluate(const Int_Vector &chirs);
Index: METOOLS/Explicit/C_Object.H
===================================================================
--- METOOLS/Explicit/C_Object.H	(revision 27859)
+++ METOOLS/Explicit/C_Object.H	(working copy)
@@ -9,9 +9,7 @@
   class CObject {
   protected:
 
-    int m_c[2];
-
-    size_t m_h, m_s;
+    int m_c[2], m_h, m_s;
 
   public:
 
@@ -37,11 +35,11 @@
 
     inline int operator()(const int i) const { return m_c[i]; }
 
-    inline void SetH(const size_t &h) { m_h=h; }
-    inline void SetS(const size_t &s) { m_s=s; }
+    inline void SetH(const int &h) { m_h=h; }
+    inline void SetS(const int &s) { m_s=s; }
 
-    inline const size_t &H() const { return m_h; }
-    inline const size_t &S() const { return m_s; }
+    inline const int &H() const { return m_h; }
+    inline const int &S() const { return m_s; }
 
     inline bool operator==(const CObject &o) const
     { return m_c[0]==o.m_c[0] && m_c[1]==o.m_c[1] && m_s==o.m_s; }
Index: METOOLS/Explicit/Color_Calculator.H
===================================================================
--- METOOLS/Explicit/Color_Calculator.H	(revision 27859)
+++ METOOLS/Explicit/Color_Calculator.H	(working copy)
@@ -18,7 +18,7 @@
 
     Complex m_cpl;
 
-    size_t m_stat;
+    int m_stat;
 
     static size_t s_cimin, s_cimax;
 
@@ -47,7 +47,7 @@
 
     inline Complex Coupling() const { return m_cpl; }
 
-    inline size_t Stat() const { return m_stat; }
+    inline int Stat() const { return m_stat; }
 
   };// end of class Color_Calculator
 
Index: METOOLS/Explicit/Vertex.C
===================================================================
--- METOOLS/Explicit/Vertex.C	(revision 27859)
+++ METOOLS/Explicit/Vertex.C	(working copy)
@@ -7,6 +7,8 @@
 #include "ATOOLS/Org/STL_Tools.H"
 #include "ATOOLS/Org/MyStrStream.H"
 #include "ATOOLS/Org/Shell_Tools.H"
+
+#include <algorithm>
 #include <typeinfo>
 
 using namespace METOOLS;
@@ -36,9 +38,11 @@
 
 size_t Vertex::s_vlmode(0);
 
+std::map<std::string,Int_Vector> Vertex::s_h;
+
 Vertex::Vertex(const Vertex_Key &key): 
   p_a(NULL), p_b(NULL), p_c(NULL), p_e(NULL),
-  p_info(key.p_dinfo), p_kin(NULL),
+  p_info(key.p_dinfo), p_kin(NULL), p_h(NULL),
   m_sign(false), m_act(true), 
   m_fperm(0), m_oew(0), m_oqcd(0),
   m_icplfac(1.0)
@@ -161,7 +165,32 @@
 #ifdef DEBUG__BG
   msg_Debugging()<<METHOD<<"() {\n";
 #endif
-  m_h.clear();
+  int nmax(0);
+  std::string id;
+  for (size_t i(0);i<(p_e?3:2);++i) {
+    id+=ToString(J(i)->H().Spins());
+    nmax=Max(nmax,J(i)->Id().back());
+  }
+  for (size_t i(0);i<=nmax;++i)
+    for (size_t j(0);j<(p_e?3:2);++j)
+      if (std::find(J(j)->Id().begin(),
+		    J(j)->Id().end(),i)!=
+	  J(j)->Id().end()) {
+	id+="_"+ToString(j);
+	break;
+      }
+  std::map<std::string,Int_Vector>::iterator hit(s_h.find(id));
+  if (hit!=s_h.end()) {
+    p_h=&hit->second;
+#ifdef DEBUG__BG
+    msg_Debugging()<<"  "<<id<<" mapped to '"<<p_h<<"'\n}\n";
+#endif
+    return;
+  }
+  p_h=&s_h.insert(make_pair(id,Int_Vector())).first->second;
+#ifdef DEBUG__BG
+  msg_Debugging()<<"  "<<id<<" stored in '"<<p_h<<"'\n";
+#endif
   if (p_e) {
     for (size_t i(0);i<p_a->H().N();++i) {
       const Int_Vector &ca(p_a->H()(i));
@@ -184,7 +213,7 @@
 #ifdef DEBUG__BG
 	  msg_Debugging()<<"  "<<ch<<" -> "<<p_c->H()(ch)<<"\n";
 #endif
-	  m_h.push_back(p_c->H()(ch));
+	  p_h->push_back(p_c->H()(ch));
 	}
       }
     }
@@ -203,7 +232,7 @@
 #ifdef DEBUG__BG
 	msg_Debugging()<<"  "<<ch<<" -> "<<p_c->H()(ch)<<"\n";
 #endif
-	m_h.push_back(p_c->H()(ch));
+	p_h->push_back(p_c->H()(ch));
       }
     }
   }
Index: METOOLS/Explicit/Vertex.H
===================================================================
--- METOOLS/Explicit/Vertex.H	(revision 27859)
+++ METOOLS/Explicit/Vertex.H	(working copy)
@@ -25,7 +25,7 @@
     CC_Vector m_cc;
 
     Complex_Vector m_cpl;
-    SizeT_Vector   m_h;
+    Int_Vector     *p_h;
 
     bool   m_sign, m_act, m_zero;
     size_t m_fperm, m_oew, m_oqcd;
@@ -34,6 +34,8 @@
 
     static size_t s_vlmode;
 
+    static std::map<std::string,Int_Vector> s_h;
+
     std::string CVLabel() const;
 
     friend class Lorentz;
@@ -112,7 +114,7 @@
     inline const Complex &Coupling(const size_t &i) const 
     { return m_cpl[i]; }
 
-    inline size_t H(const size_t &i) const { return m_h[i]; }
+    inline size_t H(const size_t &i) const { return (*p_h)[i]; }
 
   };// end of class Vertex
   
