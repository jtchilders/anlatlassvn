#!/bin/bash

make_scons() {
libname="Proc_"$(basename $(pwd))
sources=$(for i in $*; do printf $i | sed "s/^/'/1;s/$/',/1"; done | sed 's/,$//1')
echo "Import('env')
lenv=env.Clone()
proclib = lenv.SharedLibrary('${libname}',[${sources}])
lenv.Install('\${libdir}',proclib)
lenv.Alias('install',['\${libdir}'])" > SConscript
}

procdir="Process/Amegic/*";
test -z "$1" || procdir=$1;

basedir=$PWD;
if test -z "$2"; then
echo "import os
vars = Variables()
vars.Add(PathVariable('libdir','lib path',os.getcwd()+'/Process/Amegic/lib',PathVariable.PathIsDirCreate))
vars.Add('CXX','The C++ Compiler','@CXX@')
vars.Add('CXXFLAGS','The C++ Flags',['-O2'])
env = Environment(variables=vars,CPPPATH=['@INCLUDEDIR@'])
env['ENV']=os.environ
" > SConstruct;
fi;
test "$procdir" = "x" && exit 0;
printf "Processing ("$(echo $procdir/P?_* $procdir/fsr* | wc -w)") ";
for i in $procdir/P?_* $procdir/fsr*; do
  test -d $i || continue;
  cd $i; printf ".";
  make_scons *.C
  subdir=$(printf $PWD | sed 's|'${basedir}'||1;s|/||1')
  if test $2 -eq 1; then
    echo "SConscript('${subdir}/SConscript',exports='env')"  >> $basedir/SConstruct;
  fi
  cd $basedir;
done;
if test $2 -eq 2 && test -d $procdir; then
  cd $procdir; printf ".";
  make_scons $(find . -name \*.C | grep -v fsrchannels)
  subdir=$(printf $PWD | sed 's|'${basedir}'||1;s|/||1')
  echo "SConscript('${subdir}/SConscript',exports='env')"  >> $basedir/SConstruct;
  if test -d fsr*; then
    cd fsr*; printf ".";
    subdir=$(printf $PWD | sed 's|'${basedir}'||1;s|/||1')
    echo "SConscript('${subdir}/SConscript',exports='env')"  >> $basedir/SConstruct;
  fi
  cd $basedir;
fi
echo " done";
