
File: Sherpa.info,  Node: LHC_HJets,  Next: LHC_HTTBar,  Prev: LHC_HInt,  Up: HJets

10.3.2 H+jets production in gluon fusion
----------------------------------------

This is an example setup for inclusive Higgs production through gluon
fusion at hadron colliders. The inclusive process is calculated at
next-to-leading order accuracy matched to the parton shower using the
MC@NLO prescription detailed in [Hoe11] in *note References:: . The next
few higher jet multiplicities, calculated at next-to-leading order as
well, are merged into the inclusive sample using the MEPS@NLO method -
an extension of the CKKW method to NLO - as described in [Hoe12a] in
*note References::  and [Geh12] in *note References:: . Finally, even
higher multiplicities, calculated at leading order, are merged on top
of that. A few things to note are detailed below the example. The
example can be converted a simple MENLOPS setup by setting `LJET:=2',
or an MEPS setup by setting `LJET:=0', to study the effect of
incorporating higher-order matrix elements.

     (run){
       % general settings
       EVENTS 5M; ERROR 0.1;

       % tags and settings for scale definitions
       SP_NLOCT=1; FSF:=1.0; RSF:=1.0; QSF:=1.0;
       SCALES STRICT_METS{FSF*MU_F2}{RSF*MU_R2}{QSF*MU_Q2};

       % tags for process setup
       LJET:=1,2,3; NJET:=3; QCUT:=30.;

       % tags and settings for ME generators
       LOOPGEN0:=Internal;
       LOOPGEN1:=LHOLE;
       SHERPA_LDADD golem_olp;
       LHOLE_CONTRACTFILE OLE_order.olc;
       LHOLE_OLP GoSam;
       ME_SIGNAL_GENERATOR Comix Amegic LOOPGEN0 LOOPGEN1;
       EVENT_GENERATION_MODE Weighted;
       RESULT_DIRECTORY Results.QCUT;

       % model parameters
       MODEL SM+EHC
       YUKAWA[5] 0; YUKAWA[15] 0;
       MASS[25] 125.; WIDTH[25] 0.; STABLE[25] 0;

       % collider setup
       BEAM_1 2212; BEAM_ENERGY_1 4000;
       BEAM_2 2212; BEAM_ENERGY_2 4000;
     }(run);

     (processes){
       Process 93 93 -> 25 93{NJET};
       Order_EW 1; CKKW sqr(QCUT/E_CMS);
       NLO_QCD_Mode MC@NLO {LJET};
       Loop_Generator LOOPGEN0 {1,2};
       Loop_Generator LOOPGEN1 {3};
       ME_Generator Amegic {LJET};
       Enhance_Factor 16 {2};
       Enhance_Factor 128 {3,4};
       RS_Enhance_Factor 10 {2};
       RS_Enhance_Factor 20 {3};
       End process;
     }(processes);

Things to notice:
   * Any setting with the exception of the process and selector
     definitions can be given in the `(run){...}(run)' section of the
     run card.

   * Tags (`FSF', `RSF' and `QSF') have been introduced for easy scale
     variations. Tags are replaced throughout the entire run card by
     their defined value, see *note Tags::.

   * All scales, i.e. the factorisation, renormalisation and resummation
     scales are set to the above defined scale factors times the value
     determined by the METS-clustering algorithm. The scale of the two
     powers of alpha_s in the effective ggH-coupling are fixed to the
     Higgs mass. They can be varied separately by setting `EHC_SCALE2',
     cf. *note EHC::.

   * Tags (`LJET', `NJET' and `QCUT') have been introduced to be used
     in the process setup, defining the multiplicity of the MC@NLO
     subprocesses, the maximal number of extra jets, and the merging
     cut.

   * The `LOOPGEN<i>' tag is used to name the providers of the one-loop
     matrix elements for the respective multiplicities. For the two
     simplemost cases Sherpa can provide it internally. In this case,
     the one-loop-program GoSam is interfaced throught the BLHA
     interface for the H+2jet process.

   * Contrary to the best LO shower setup, for NLO merging the shower is
     setup in a crossing invariant way, employing the very same recoil
     scheme as the MC@NLO emission.

   * As both Comix and Amegic are specified as matrix element generators
     to be used, Amegic has to be specified to be used for all MC@NLO
     multiplicities using `ME_Generator Amegic {LJET}'.

   * `Enhance_Factors' have been introduced to increase the statistical
     quality for processes of higher multiplicity, cf. *note
     Enhance_Factor::.

   * `RS_Enhance_Factors' have been introduced to increase the
     statistical quality for the non-resummed parts of the MC@NLO
     processes the respective multiplicity, cf. *note
     RS_Enhance_Factor::.

   * To change the example to production at the Tevatron simply change
     the beam settings to   BEAM_1  2212; BEAM_ENERGY_1 980;
       BEAM_2 -2212; BEAM_ENERGY_2 980;

   * To enable the Higgs to decay to a pair of photons, for example, the
     hard decays can be envoked. To this end simply add the following
     to your run section   % settings for hard decays
       HARD_DECAYS On;
       STORE_DECAY_RESULTS 1;
       HDH_ONLY_DECAY {25,22,22}
      For details on the hard decay handling and how to enable specific
     decay modes see *note Hard decays::.


File: Sherpa.info,  Node: LHC_HTTBar,  Prev: LHC_HJets,  Up: HJets

10.3.3 Associated t anti-t H production at the LHC
--------------------------------------------------

This set-up illustrates the interface to an external loop matrix element
generator as well as the possibility of specifying hard decays for
particles emerging from the hard interaction. The process generated is
the production of a Higgs boson in association with a top quark pair
from two light partons in the initial state. Each top quark decays into
an (anti-)bottom quark and a W boson. The W bosons in turn decay to
either quarks or leptons.

     (run){
       # generator parameters
       EVENTS 0; LGEN:=TTH;
       ME_SIGNAL_GENERATOR Amegic LGEN;
       HARD_DECAYS 1; HARD_MASS_SMEARING 0;
       STABLE[6] 0; STABLE[24] 0;
       WIDTH[25] 0; WIDTH[6] 0;
       MI_HANDLER None;
       # physics parameters
       BEAM_1 2212; BEAM_ENERGY_1 7000;
       BEAM_2 2212; BEAM_ENERGY_2 7000;
       SCALES VAR{sqr(175+125/2)};
       PDF_LIBRARY LHAPDFSherpa;
       PDF_SET MSTW2008lo68cl.LHgrid;
       USE_PDF_ALPHAS 1;
     }(run);

     (processes){
       Process 93 93 -> 25 6 -6;
       NLO_QCD_Mode 3; NLO_QCD_Part BVIRS;
       Loop_Generator LGEN;
       Order_EW 1;
       End process;
     }(processes);

Things to notice:
   * The matrix elements are interfaced from [Rei01] in *note
     References:: ,   [Rei01a] in *note References:: , [Daw02] in *note
     References:: , [Daw03] in *note References:: .    The shared
     library necessary for running this setup is built using   scons.

   * The top quarks are stable in the hard matrix elements.    They are
     decayed using the internal decay module, indicated by   the
     settings `HARD_DECAYS 1' and `STABLE[6] 0; STABLE[24] 0'.

   * LHAPDF is used   (see *note ISR Parameters::) with the
     parametrization of the strong coupling   taken from LHAPDF itself
     as indicated by `USE_PDF_ALPHAS 1'   (see *note SM::).


File: Sherpa.info,  Node: TopsJets,  Next: FONLO,  Prev: HJets,  Up: Examples

10.4 Top quark (pair) + jets production
=======================================

* Menu:

* Tops in MC@NLO::
* Tops plus Jets in MEPS::
* Tops plus W in MC@NLO::


File: Sherpa.info,  Node: Tops in MC@NLO,  Next: Tops plus Jets in MEPS,  Up: TopsJets

10.4.1 Simulation of top quark pair production using MC@NLO methods
-------------------------------------------------------------------

     (run){
       EVENTS 10000;
       LJET:=2; NJET:=0; QCUT:=20;
       # Generator parameters
       LGEN:=OpenLoops;
       ME_SIGNAL_GENERATOR Comix Amegic LGEN;
       # Physics parameters
       BEAM_1 2212; BEAM_ENERGY_1 4000;
       BEAM_2 2212; BEAM_ENERGY_2 4000;
       CORE_SCALE QCD;
       WIDTH[6] 0;
     }(run);

     (processes){
       Process 93 93 -> 6 -6 93{NJET};
       NLO_QCD_Mode MC@NLO;
       NLO_QCD_Part BVIRS {LJET};
       ME_Generator Amegic {LJET};
       Loop_Generator LGEN;
       CKKW sqr(QCUT/E_CMS);
       Order_EW 0;
       End process;
     }(processes);

Things to notice:
   * We use OpenLoops to compute the virtual corrections
     [Cas11] in *note References:: .

   * We match matrix elements and parton showers using the MC@NLO
     technique for massive particles, as described in [Hoe13] in *note
     References:: .

   * The scale is defined as in Appendix C of [Hoe13] in *note
     References:: .


File: Sherpa.info,  Node: Tops plus Jets in MEPS,  Next: Tops plus W in MC@NLO,  Prev: Tops in MC@NLO,  Up: TopsJets

10.4.2 Simulation of top quark pair production in association with jets using MEPS methods
------------------------------------------------------------------------------------------

     (run){
       EVENTS 10000;
       NJET:=2; QCUT:=20;
       BEAM_1 2212; BEAM_ENERGY_1 4000;
       BEAM_2 2212; BEAM_ENERGY_2 4000;
       WIDTH[6] 0; STABLE[6] 0;
       STABLE[24] 0;
       HARD_DECAYS 1;
       HARD_SPIN_CORRELATIONS 1;
       CORE_SCALE QCD;
     }(run);

     (processes){
       Process 93 93 -> 6 -6 93{NJET};
       Order_EW 0; CKKW sqr(QCUT/E_CMS);
       End process;
     }(processes);

Things to notice:
   * We enable top decays through the internal decay module using
     `HARD_DECAYS 1' and `HARD_SPIN_CORRELATIONS 1'.


File: Sherpa.info,  Node: Tops plus W in MC@NLO,  Prev: Tops plus Jets in MEPS,  Up: TopsJets

10.4.3 Production of a top quark pair in association with a W-boson
-------------------------------------------------------------------

     (run){
       EVENTS=10000
       EVENT_GENERATION_MODE=Weighted

       BEAM_1=2212; BEAM_ENERGY_1=4000;
       BEAM_2=2212; BEAM_ENERGY_2=4000;

       SCF:=1.0; QF:=1.0
       LGEN:=OpenLoops

       ME_SIGNAL_GENERATOR=Comix Amegic LGEN
       SCALES=METS{SCF*MU_F2}{SCF*MU_R2}{QF*MU_Q2}

       HARD_DECAYS=On
       STABLE[6]=0; STABLE[24]=0
       WIDTH[6]=0; WIDTH[24]=0
       HDH_NO_DECAY={24,2,-1}|{24,4,-3}|{24,16,-15}
       HARD_SPIN_CORRELATIONS=1

       # technical parameters
       EXCLUSIVE_CLUSTER_MODE=1
       AMEGIC_DEFAULT_GAUGE=10
     }(run);

     (processes){
       Process 93 93 -> 6 -6 24;
       NLO_QCD_Mode MC@NLO;
       ME_Generator Amegic;
       Loop_Generator LGEN;
       Order_EW 1;
       End process;
     }(processes);

Things to notice:
   * Hard decays are enabled through `HARD_DECAYS=On' and spin
     correlations are switched on through `HARD_SPIN_CORRELATIONS=1'

   * Top quarks and W bosons are set unstable through `STABLE[6]=0'
     `STABLE[24]=0'. As they are final states in the hard matrix
     elements, their width is set to zero using `WIDTH[6]=0' and
     `WIDTH[24]=0'.

   * Certain decay channels are disabled using
     `HDH_NO_DECAY={24,2,-1}|{24,4,-3}|{24,16,-15}'


File: Sherpa.info,  Node: FONLO,  Next: SoftQCD,  Prev: TopsJets,  Up: Examples

10.5 Fixed-order next-to-leading order calculations
===================================================

* Menu:

* NTuple production::


File: Sherpa.info,  Node: NTuple production,  Up: FONLO

10.5.1 Production of NTuples
----------------------------

Root NTuples are a convenient way to store the result of cumbersome
fixed-order calculations in order to perform multiple analyses.  This
example shows how to generate such NTuples and reweighted them in order
to change factorisation and renormalisation scales.  Note that in order
to use this setup, Sherpa must be configured with option
`--enable-root=/path/to/root', see *note Event output formats::.  If
Sherpa has not been configured with Rivet analysis support, please
disable the analysis using `-a0' on the command line, see *note Command
line::.

When using NTuples, one needs to bear in mind that every calculation
involving jets in the final state is exclusive in the sense that a lower
cutoff on the jet transverse momenta must be imposed.  It is therefore
necessary to check whether the event sample stored in the NTuple is
sufficiently inclusive before using it. Similar remarks apply when
photons are present in the NLO calculation or when cuts on leptons have
been applied at generation level to increase efficiency.  Every NTuple
should therefore be accompanied by an appropriate documentation.

This example will generate NTuples for the process pp->lvj, where l is
an electron or positron, and v is an electron (anti-)neutrino.  We
identify parton-level jets using the anti-k_T algorithm with R=0.4
[Cac08] in *note References:: . We require the transverse momentum of
these jets to be larger than 20 GeV. No other cuts are applied at
generation level.

     (run){
       EVENTS 100k;
       EVENT_GENERATION_MODE W;
       LGEN:=BlackHat; ME_SIGNAL_GENERATOR Amegic LGEN;
       ### Analysis (please configure with --enable-rivet & --enable-hepmc2)
       ANALYSIS Rivet; ANALYSIS_OUTPUT Analysis/HTp/BVI/;
       ### NTuple output (please configure with '--enable-root')
       EVENT_OUTPUT Root[NTuple_B-like];

       BEAM_1 2212; BEAM_ENERGY_1 3500;
       BEAM_2 2212; BEAM_ENERGY_2 3500;
       SCF:=1; ### default scale factor
       SCALES VAR{SCF*sqr(sqrt(H_T2)-PPerp(p[2])-PPerp(p[3])+MPerp(p[2]+p[3]))};
       EW_SCHEME 0; WIDTH_SCHEME Fixed; # sin\theta_w -> 0.23
       DIPOLE_ALPHA 0.03;
       MASSIVE[13] 1; MASSIVE[15] 1;
     }(run);
     (processes){
       ### The Born piece
       Process 93 93 -> 90 91 93;
       NLO_QCD_Mode 1; NLO_QCD_Part B;
       Order_EW 2;
       End process;
       ### The virtual piece
       Process 93 93 -> 90 91 93;
       NLO_QCD_Mode 1; NLO_QCD_Part V;
       Loop_Generator LGEN;
       Order_EW 2;
       End process;
       ### The integrated subtraction piece
       Process 93 93 -> 90 91 93;
       NLO_QCD_Mode 1; NLO_QCD_Part I;
       Order_EW 2;
       End process;
     }(processes);
     (selector){
       FastjetFinder antikt 1 20 0 0.4;
     }(selector);

     (analysis){
       BEGIN_RIVET {
         -a ATLAS_2012_I1083318;
         USE_HEPMC_SHORT 1;
         IGNOREBEAMS 1;
       } END_RIVET;
     }(analysis);

Things to notice:
   * NTuple production is enabled by `EVENT_OUTPUT Root[NTuple_B-like]',
      see *note Event output formats::.

   * The scale used is defined as in [Ber09a] in *note References:: .

   * `EW_SCHEME 0; WIDTH_SCHEME Fixed;' are used to set   the value of
     the weak mixing angle to 0.23,   consistent with EW precision
     measurements.

   * `DIPOLE_ALPHA 0.03' is used to limit the active phase space of
     dipole subtractions.

   * `MASSIVE[13] 1; MASSIVE[15] 1;' are used to limit the number of
     active lepton flavours to electron and positron.

   * The option `USE_HEPMC_SHORT 1' is used in the Rivet analysis
     section as the events produced by Sherpa are not at particle level.

10.5.1.1 NTuple production
..........................

Start Sherpa using the command line
  Sherpa -f Run.B-like.dat
 Sherpa will first create source code for its matrix-element
calculations.  This process will stop with a message instructing you to
compile.  Do so by running
  ./makelibs -j4
 Launch Sherpa again, using
  Sherpa -f Run.B-like.dat
 Sherpa will then compute the Born, virtual and integrated subtraction
contribution to the NLO cross section and generate events. These events
are analyzed using the Rivet library and stored in a Root NTuple file
called `NTuple_B-like.root'.  We will use this NTuple later to compute
an NLO uncertainty band.

The real-emission contribution, including subtraction terms, to the NLO
cross section is computed using
  Sherpa -f Run.R-like.dat
 Events are generated, analyzed by Rivet and stored in the Root NTuple
file `NTuple_R-like.root'.

The two analyses of events with Born-like and real-emission-like
kinematics need to be merged, which can be achieved using scripts like
`aidaadd'.  The result can then be plotted and displayed.

10.5.1.2 Usage of NTuples in Sherpa
...................................

Next we will compute the NLO uncertainty band using Sherpa.  To this
end, we make use of the Root NTuples generated in the previous steps.
Note that the setup files for reweighting are almost identical to those
for generating the NTuples. We have simply replaced `EVENT_OUTPUT' by
`EVENT_INPUT'.

First we re-evaluate the events with the scale increased by a factor 2:
  Sherpa -f Reweight.B-like.dat
  Sherpa -f Reweight.R-like.dat
 Then we re-evaluate the events with the scale decreased by a factor 2:
  Sherpa -f Reweight.B-like.dat SCF:=0.25 -A Analysis/025HTp/BVI
  Sherpa -f Reweight.R-like.dat SCF:=0.25 -A Analysis/025HTp/RS
 The two contributions can again be combined using `aidaadd'.


File: Sherpa.info,  Node: SoftQCD,  Next: APIexamples,  Prev: FONLO,  Up: Examples

10.6 Soft QCD: Minimum Bias and Cross Sections
==============================================

* Menu:

* Calculation of inclusive cross sections::
* Simulation of Minimum Bias events::


File: Sherpa.info,  Node: Calculation of inclusive cross sections,  Next: Simulation of Minimum Bias events,  Up: SoftQCD

10.6.1 Calculation of inclusive cross sections
----------------------------------------------

     (run){
       OUTPUT              = 2
       EVENT_TYPE          = MinimumBias
       SOFT_COLLISIONS     = Shrimps
       Shrimps_Mode        = Xsecs
     }(run)

     (beam){
       BEAM_1 =  2212; BEAM_ENERGY_1 = 450.;
       BEAM_2 =  2212; BEAM_ENERGY_2 = 450.;
     }(beam)

     (me){
       ME_SIGNAL_GENERATOR = None
     }(me)

Things to notice:
   * Inclusive cross sections (total, inelastic, low-mass
     single-diffractive,       low-mass double-diffractive, elastic)
     and the elastic slope are       calculated for varying c.m.
     energies in pp collisions

   * The results are written to the file
     InclusiveQuantities/xsecs_total.dat       and to the screen.  The
     directory will automatically be created in the       path from
     where Sherpa is run.

   * The parameters of the model are not very well tuned.


File: Sherpa.info,  Node: Simulation of Minimum Bias events,  Prev: Calculation of inclusive cross sections,  Up: SoftQCD

10.6.2 Simulation of Minimum Bias events
----------------------------------------

     run){
       EVENTS              = 1000000
       OUTPUT              = 2
       EVENT_TYPE          = MinimumBias
       SOFT_COLLISIONS     = Shrimps
       Shrimps_Mode        = Inelastic

       ANALYSIS            = Rivet

       ANALYSIS_OUTPUT     = Shrimps.7TeV
       MAX_PROPER_LIFETIME = 10.
     }(run)

     (beam){
       BEAM_1 =  2212; BEAM_ENERGY_1 = 3500.;
       BEAM_2 =  2212; BEAM_ENERGY_2 = 3500.;
     }(beam)

     (analysis){
       BEGIN_RIVET {
       -a DIFFMASS ATLAS_2010_S8918562 ATLAS_2010_S8894728 ATLAS_2011_S8994773 ATLAS_2012_I1084540 TOTEM_2012_DNDETA ATLAS_2011_I919017 CMS_2011_S8978280 CMS_2011_S9120041 CMS_2011_S9215166 #CMS_2010_S8547297 CMS_2010_S8656010 CMS_2011_S8884919 CMS_QCD_10_024
       } END_RIVET
     }(analysis)

     (me){
       ME_SIGNAL_GENERATOR = None
     }(me)

Things to notice:
   * The SHRiMPS model is not properly tuned yet - all parameters are
     set       to very natural values, such as for example 1.0 GeV for
     infrared       parameters.

   * Eleastic scattering and low-mass diffraction are not included.

   * A large number of Minimum Bias-type analyses is enabled.


File: Sherpa.info,  Node: APIexamples,  Prev: SoftQCD,  Up: Examples

10.7 Using the Python interface
===============================

* Menu:

* ME2::
* Events::
* MPIEvents::


File: Sherpa.info,  Node: ME2,  Next: Events,  Up: APIexamples

10.7.1 Computing matrix elements for idividual phase space points
-----------------------------------------------------------------

Sherpa's Python interface (see *note Python Interface::) can be used to
compute matrix elemtents for individual phase space points. For
processes with coloured external particles this is so far only
supported by AMEGIC++.  COMIX can be used however if all external
particles are colourless.

All information about the incoming and outgoing flavours and momenta of
a process are stored in a 'cluster amplitude'. For each incoming and
outgoing particle, a 'leg' must be added to the cluster amplitude using
the 'CreateLegFromPyVec4D' method. This method accepts a 'Vec4D' object
that represents the four-momentum of the corresponding particle as the
first argument. The second argument represents it's flavour.  Note that
both momenta and flavours must be reversed for legs that correspond to
incoming particles. A Flavour can be reversed by setting the second
argument of it's constructor to '1'. The first argument is the pdg-ID
of the particle. `Sherpa.Flavour(11,1)' represents an anti-electron,
for example. Note that the value returned by the 'Differential' method
of the process needs to be multiplied by a factor of two times the
center of mass energy squared.

If AMEGIC++ is used as the matrix element generator, executing the
script will result in AMEGIC++ writing out libraries and exiting.
After compiling the libraries using `./makelibs', the script must be
executed again in order to obtain the matrix element. On some systems,
this might result in a termination with errors of the form
Library_Loader::LoadLibrary(): ./Process/lib/libProc_P2_2_2_6_24_16_5_0.so: undefined symbol: _ZN6AMEGIC10Basic_Func1XEiii

If this is the case, the library libSherpaMain.so must be preloaded,
which can be achieved on a linux system via setting LD_PRELOAD
accordingly:
export LD_PRELOAD=<prefix>/lib/SHERPA-MC/libSherpaMain.so

In order to prevent Sherpa's initialization routine from integrating
total cross sections, one can pass the command line argument
`INIT_ONLY=1' when executing the script in order to save time.
Alternatively, this argument can be added in the script itself via
`sys.argv.append('INIT_ONLY=1')'.

     #!/usr/bin/env python2
     ## from mpi4py import MPI
     import sys
     sys.path.append('@PYLIBDIR@')
     import Sherpa

     # Add this to the execution arguments to prevent Sherpa from starting to integrate the cross section
     sys.argv.append('INIT_ONLY=2')

     Generator=Sherpa.Sherpa()
     try:
         Generator.InitializeTheRun(len(sys.argv),sys.argv)
         Process=Sherpa.MEProcess(Generator)

         # if MPI.COMM_WORLD.Get_rank()>0:
         #    exit(1)

         # Incoming flavors must be added first!
         Process.AddInFlav(11);
         Process.AddInFlav(-11);
         Process.AddOutFlav(1);
         Process.AddOutFlav(-1);
         Process.Initialize();

         if Process.HasColorIntegrator():
             Process.GenerateColorPoint();

         # First argument corresponds to particle index
         # which in turn is determined by the order in which the
         # particles were added
         Process.SetMomentum(0, 45.6,0.,0.,45.6)
         Process.SetMomentum(1, 45.6,0.,0.,-45.6)
         Process.SetMomentum(2, 45.6,0.,45.6,0.)
         Process.SetMomentum(3, 45.6,0.,-45.6,0.)

         print '\nSquared matrix element:'
         print Process.CSMatrixElement()
         print '\n'

     except Sherpa.Exception as exc:
         exit(1)


File: Sherpa.info,  Node: Events,  Next: MPIEvents,  Prev: ME2,  Up: APIexamples

10.7.2 Generate events using scripts
------------------------------------

This example shows how to generate events with Sherpa using a Python
wrapper script. For each event the weight, the number of trials and the
particle information is printed to stdout. This script can be used as a
basis for constructing interfaces to own analysis routines.

     #!/usr/bin/python2
     ## from mpi4py import MPI
     import sys
     sys.path.append('@PYLIBDIR@')
     import Sherpa

     Generator=Sherpa.Sherpa()
     try:
         Generator.InitializeTheRun(len(sys.argv),sys.argv)
         Generator.InitializeTheEventHandler()
         for n in range(1,1+Generator.NumberOfEvents()):
             Generator.GenerateOneEvent()
             blobs=Generator.GetBlobList();
             print "Event",n,"{"
             ## print blobs
             print "  Weight ",blobs.GetFirst(1)["Weight"];
             print "  Trials ",blobs.GetFirst(1)["Trials"];
             for i in range(0,blobs.size()):
                 print "  Blob",i,"{"
                 ## print blobs[i];
                 print "    Incoming particles"
                 for j in range(0,blobs[i].NInP()):
                     part=blobs[i].InPart(j)
                     ## print part
                     s=part.Stat()
                     f=part.Flav()
                     p=part.Momentum()
                     print "     ",j,": ",s,f,p
                 print "    Outgoing particles"
                 for j in range(0,blobs[i].NOutP()):
                     part=blobs[i].OutPart(j)
                     ## print part
                     s=part.Stat()
                     f=part.Flav()
                     p=part.Momentum()
                     print "     ",j,": ",s,f,p
                 print "  } Blob",i
             print "} Event",n
             if ((n%100)==0): print "  Event ",n
         Generator.SummarizeRun()

     except Sherpa.Exception as exc:
         exit(1)


File: Sherpa.info,  Node: MPIEvents,  Prev: Events,  Up: APIexamples

10.7.3 Generate events with MPI using scripts
---------------------------------------------

This example shows how to generate events with Sherpa using a Python
wrapper script and MPI. For each event the weight, the number of trials
and the particle information is send to the MPI master node and written
into a single gzip'ed output file.  Note that you need the mpi4py
module to run this Example. Sherpa must be configured and installed
using `--enable-mpi', see *note MPI parallelization::.

     #!/usr/bin/python2
     from mpi4py import MPI
     import sys
     sys.path.append('@PYLIBDIR@')
     import Sherpa
     import gzip

     class MyParticle:
         def __init__(self,p):
             self.kfc=p.Flav().Kfcode()
             if p.Flav().IsAnti(): self.kfc=-self.kfc
             self.E=p.Momentum()[0]
             self.px=p.Momentum()[1]
             self.py=p.Momentum()[2]
             self.pz=p.Momentum()[3]
         def __str__(self):
             return (str(self.kfc)+" "+str(self.E)+" "
                     +str(self.px)+" "+str(self.py)+" "+str(self.pz))

     Generator=Sherpa.Sherpa()
     try:
         Generator.InitializeTheRun(len(sys.argv),sys.argv)
         Generator.InitializeTheEventHandler()
         comm=MPI.COMM_WORLD
         rank=comm.Get_rank()
         size=comm.Get_size()
         if rank==0:
             outfile=gzip.GzipFile("events.gz",'w')
             for n in range(1,1+Generator.NumberOfEvents()):
                 for t in range(1,size):
                     weight=comm.recv(source=t,tag=t)
                     trials=comm.recv(source=t,tag=2*t)
                     parts=comm.recv(source=t,tag=3*t)
                     outfile.write("E "+str(weight)+" "+str(trials)+"\n")
                     for p in parts:
                         outfile.write(str(p)+"\n")
                 if (n%100)==0: print "  Event",n
             outfile.close()
         else:
             for n in range(1,1+Generator.NumberOfEvents()):
                 Generator.GenerateOneEvent()
                 blobs=Generator.GetBlobList();
                 weight=blobs.GetFirst(1)["Weight"]
                 trials=blobs.GetFirst(1)["Trials"]
                 parts=[]
                 for i in range(0,blobs.size()):
                     for j in range(0,blobs[i].NOutP()):
                         part=blobs[i].OutPart(j)
                         if part.Stat()==1 and part.HasDecBlob()==0:
                             parts.append(MyParticle(part))
                 comm.send(weight,dest=0,tag=rank)
                 comm.send(trials,dest=0,tag=2*rank)
                 comm.send(parts,dest=0,tag=3*rank)
         Generator.SummarizeRun()

     except Sherpa.Exception as exc:
         exit(1)


File: Sherpa.info,  Node: Getting help,  Next: Authors,  Prev: Examples,  Up: Top

11 Getting help
***************

If Sherpa exits abnormally, first check the Sherpa output for hints on
the reason of program abort, and try to figure out what has gone wrong
with the help of the Manual. Note that Sherpa throwing a ‘normal_exit’
exception does not imply any abnormal program termination! When using
AMEGIC++ Sherpa will exit with the message:
        New libraries created. Please compile.
In this case, follow the instructions given in *note Running Sherpa
with AMEGIC++::.

If this does not help, contact the Sherpa team (see the Sherpa Team
section of the website http://www.sherpa-mc.de), providing all
information on your setup. Please include
  1. A complete tarred and gzipped set of the `.dat' files leading to
     the crash. Use the status recovery directory `Status__<date of
     crash>' produced before the program abort.

  2. The command line (including possible parameters) you used to start
     Sherpa.

  3. The installation log file, if available.


File: Sherpa.info,  Node: Authors,  Next: Copying,  Prev: Getting help,  Up: Top

12 Authors
**********

Sherpa was written by the Sherpa Team, see http://www.sherpa-mc.de.


File: Sherpa.info,  Node: Copying,  Next: References,  Prev: Authors,  Up: Top

13 Copying
**********

Sherpa is free software.  You can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation. You should have received a copy of the GNU
General Public License along with the source for Sherpa; see the file
COPYING. If not, write to the Free Software Foundation, 59 Temple
Place, Suite 330, Boston, MA  02111-1307, USA.

Sherpa is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

Sherpa was created during the Marie Curie RTN's HEPTOOLS, MCnet and
LHCphenonet.  The MCnet Guidelines apply, see the file GUIDELINES and
http://www.montecarlonet.org/index.php?p=Publications/Guidelines.

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU General Public License.


File: Sherpa.info,  Node: References,  Next: Index,  Prev: Copying,  Up: Top

Appendix A References
*********************

     [Ale05] S. Alekhin and others, _HERA and the LHC - A workshop on
     the implications of HERA for LHC physics: Proceedings Part A_,
     hep-ph/0601012.

     [Alw07] J. Alwall and others, _Comparative study of various
     algorithms for the merging of parton showers and matrix elements
     in hadronic collisions_, Eur. Phys. J. C53 (2008) 473-500
     [arXiv:0706.2569].

     [Arc08] J. Archibald and T. Gleisberg and S. Hoche and F.  Krauss
     and M. Schonherr and S. Schumann and F.  Siegert and J. C. Winter,
     _Simulation of photon-photon interactions in hadron collisions
     with Sherpa_, Nucl. Phys. 179 (2008) 218-225 .

     [Bah08b] M. Bahr and others, _Herwig++ Physics and Manual_, Eur.
     Phys. J. C58 (2008) 639-707 [arXiv:0803.0883].

     [Bal08] R. D. Ball and others, _A determination of parton
     distributions with faithful uncertainty estimation_, Nucl. Phys.
     B809 (2009) 1-63 [arXiv:0808.1231].

     [Bal09] R. D. Ball and others, _Precision determination of
     electroweak parameters and the strange content of the proton from
     neutrino deep-inelastic scattering_, Nucl. Phys. B823 (2009)
     195-233 [arXiv:0906.1958].

     [Bal92] A. Ballestrero and E. Maina and S. Moretti, _Heavy quarks
     and leptons at e^+e^- colliders_, Nucl. Phys. B415 (1994) 265-292
     [hep-ph/9212246].

     [Bar93] E. Barberio and Z. Wc as, _PHOTOS - a universal monte
     carlo for QED radiative corrections: version 2.0_, Comput. Phys.
     Commun. 79 (1994) 291-308 .

     [Bau88] U. Baur and D. Zeppenfeld, _Probing the WWgamma vertex at
     future hadron colliders_, Nucl. Phys. B308 (1988) 127 .

     [Ber02] Z. Bern and L. J. Dixon and C. Schmidt, _Isolating a light
     Higgs boson from the di-photon background at the LHC_, Phys. Rev.
     D66 (2002) 074018 [hep-ph/0206194].

     [Ber09a] C. F. Berger and Z. Bern and L. J. Dixon and F.
     Febres-Cordero and D. Forde and T. Gleisberg and H. Ita and D. A.
     Kosower and D. Ma^itre, _Next-to-leading order QCD predictions for
     W+3-Jet distributions at hadron colliders_, Phys. Rev. D80 (2009)
     074036 [arXiv:0907.1984].

     [Ber94] F. A. Berends and R. Pittau and R. Kleiss, _All
     electroweak four-fermion processes in electron-positron
     collisions_, Nucl. Phys. B424 (1994) 308 [hep-ph/9404313].

     [Bin10a] T. Binoth and others, _A proposal for a standard
     interface between Monte Carlo tools and one-loop programs_,
     Comput. Phys. Commun. 181 (2010) 1612-1622 [arXiv:1001.1307].

     [Bud74] V. M. Budnev and I. F. Ginzburg and G. V. Meledin and V.
     G. Serbo, _The two photon particle production mechanism. Physical
     problems. Applications. Equivalent photon approximation_, Phys.
     Rept. 15 (1974) 181-281 .

     [Cac08] M. Cacciari and G. P. Salam and G. Soyez, _The Anti-k(t)
     jet clustering algorithm_, JHEP 0804 (2008) 063 [arXiv:0802.1189].

     [Car09] T. Carli and T. Gehrmann and S. Hoche, _Hadronic final
     states in deep-inelastic scattering with Sherpa_, Eur. Phys. J.
     C67 (2010) 73 [arXiv:0912.3715].

     [Cas11] F. Cascioli and P. Maierhofer and S. Pozzorini,
     _Scattering Amplitudes with Open Loops_, Eur.Phys.J. C72 (2012)
     1889 [arXiv:1111.5206].

     [Cat01a] S. Catani and F. Krauss and R. Kuhn and B. R. Webber,
     _QCD matrix elements + parton showers_, JHEP 11 (2001) 063
     [hep-ph/0109231].

     [Cat02] S. Catani and S. Dittmaier and M. H. Seymour and Z.
     Trocsanyi, _The dipole formalism for next-to-leading order QCD
     calculations with massive partons_, Nucl. Phys. B627 (2002)
     189-265 [hep-ph/0201036].

     [Cat96b] S. Catani and M. H. Seymour, _A general algorithm for
     calculating jet cross sections in NLO QCD_, Nucl. Phys. B485
     (1997) 291-419 [hep-ph/9605323].

     [Chr08] N. D. Christensen and C. Duhr, _FeynRules - Feynman rules
     made easy_, Comput. Phys. Commun. 180 (2009) 1614-1641
     [arXiv:0806.4194].

     [Chr09] N. D. Christensen and P. de Aquino and C. Degrande and  C.
     Duhr and B. Fuks and M. Herquet and F. Maltoni and S. Schumann, _A
     comprehensive approach to new physics simulations_, Eur. Phys. J.
     C71 (2011) 1541 [arXiv:0906.2474].

     [Daw02] S. Dawson and L.H. Orr and L. Reina and D. Wackeroth,
     _Associated top quark Higgs boson production at the LHC_,
     Phys.Rev. D67 (2003) 071503 [hep-ph/0211438].

     [Daw03] S. Dawson and C. Jackson and L.H. Orr and L. Reina and  D.
     Wackeroth, _Associated Higgs production with top quarks at the
     large hadron collider: NLO QCD corrections_, Phys.Rev. D68 (2003)
     034022 [hep-ph/0305087].

     [Ded08] A. Dedes and T. Figy and S. Hoche and  F. Krauss and T. E.
     J. Underwood, _Searching for Nambu-Goldstone Bosons at the LHC_,
     JHEP 11 (2008) 036 [arXiv:0807.4666].

     [Dix13] L. J. Dixon and Y. Li, _Bounding the Higgs Boson Width
     Through Interferometry_,     arXiv:1305.3854.

     [Dra00] P. D. Draggiotis and A. van Hameren and R. Kleiss, _SARGE:
     An algorithm for generating QCD-antennas_, Phys. Lett. B483 (2000)
     124-130 [hep-ph/0004047].

     [Duh06] C. Duhr and S. Hoche and F. Maltoni, _Color-dressed
     recursive relations for multi-parton amplitudes_, JHEP 08 (2006)
     062 [hep-ph/0607057].

     [Feb06] F. Febres Cordero and L. Reina and D. Wackeroth, _NLO QCD
     corrections to W boson production with a massive b-quark jet pair
     at the Tevatron p anti-p collider_, Phys.Rev. D74 (2006) 034007
     [hep-ph/0606102].

     [Fie82a] R. D. Field and S. Wolfram, _A QCD model for e^+e^-
     annihilation_, Nucl. Phys. B213 (1983) 65 .

     [Fri98] S. Frixione, _Isolated photons in perturbative QCD_, Phys.
     Lett. B429 (1998) 369-374 [hep-ph/9801442].

     [Gan99] F. Gangemi and G. Montagna and M. Moretti and O. Nicrosini
     and F. Piccinini, _Electroweak physics in six-fermion final states
     at future e^+ e^- colliders_,     hep-ph/0001065.

     [Gao13] J. Gao and M. Guzzi and J. Huston and H. L. Lai and Z.  Li
     and others, _The CT10 NNLO Global Analysis of QCD_,
     arXiv:1302.6246.

     [Geh12] T. Gehrmann and S. Hoche and F. Krauss and  M. Schonherr
     and F. Siegert, _NLO QCD matrix elements + parton showers in
     e^+e^-tohadrons_,     arXiv:1207.5031.

     [Gle03a] T. Gleisberg and F. Krauss and K. T. Matchev and A. S.
     and S. Schumann and G. Soff, _Helicity formalism for spin-2
     particles_, JHEP 09 (2003) 001 [hep-ph/0306182].

     [Gle03b] T. Gleisberg and F. Krauss and C. G. Papadopoulos and  A.
     Schalicke and S. Schumann, _Cross sections for multi-particle
     final states at a linear collider_, Eur. Phys. J. C34 (2004)
     173-180 [hep-ph/0311273].

     [Gle05] T. Gleisberg and F. Krauss and A. Schalicke and S.
     Schumann and J. C. Winter, _Studying W^+ W^- production at the
     Fermilab Tevatron with Sherpa_, Phys. Rev. D72 (2005) 034028
     [hep-ph/0504032].

     [Gle07] T. Gleisberg and F. Krauss, _Automating dipole subtraction
     for QCD NLO calculations_, Eur. Phys. J. C53 (2008) 501-523
     [arXiv:0709.2881].

     [Gle08] T. Gleisberg and S. Hoche, _Comix a new matrix element
     generator_, JHEP 12 (2008) 039 [arXiv:0808.3674].

     [Gle08a] T. Gleisberg and S. Hoche and F. Krauss and R. law
     Matyskiewicz, _How to calculate colourful cross sections
     efficiently_,     arXiv:0808.3672.

     [Gle08b] T. Gleisberg and S. Hoche and F. Krauss and  M. Schonherr
     and S. Schumann and F Siegert and J. Winter, _Event generation
     with Sherpa 1.1_, JHEP 02 (2009) 007 [arXiv:0811.4622].

     [Glu91] M. Gluck and E. Reya and A. Vogt, _Parton structure of the
     photon beyond the leading order_, Phys. Rev. D45 (1992) 3986-3994 .

     [Glu91a] M. Gluck and E. Reya and A. Vogt, _Photonic parton
     distributions_, Phys. Rev. D46 (1992) 1973-1979 .

     [Got82] T. D. Gottschalk, _A realistic model for e^+e^-
     annihilation including parton bremsstrahlung effects_, Nucl. Phys.
     B214 (1983) 201 .

     [Got83] T. D. Gottschalk, _An improved description of
     hadronization in the QCD cluster model for e^+e^- annihilation_,
     Nucl. Phys. B239 (1984) 349 .

     [Got86] T. D. Gottschalk and D. A. Morris, _A new model for
     hadronization and e^+e^- annihilation_, Nucl. Phys. B288 (1987)
     729 .

     [Gou00] G. J. Gounaris and J. Layssac and F. M. Renard, _Off-shell
     structure of the anomalous Z and gamma self- couplings_, Phys.
     Rev. D62 (2000) 073012 [hep-ph/0005269].

     [Hag05] K. Hagiwara and others, _Supersymmetry simulations with
     off-shell effects for the CERN LHC and an ILC_, Phys. Rev. D73
     (2006) 055005 [hep-ph/0512260].

     [Hag86] K. Hagiwara and R. D. Peccei and D. Zeppenfeld and K.
     Hikasa, _Probing the weak boson sector in e^+e^-to W^+W^-_, Nucl.
     Phys. B282 (1987) 253 .

     [Ham02] A. van Hameren and C. G. Papadopoulos, _A hierarchical
     phase space generator for QCD antenna structures_, Eur. Phys. J.
     C25 (2002) 563-574 [hep-ph/0204055].

     [Ham09a] K. Hamilton and P. Richardson and J. Tully, _A modified
     CKKW matrix element merging approach to angular-ordered parton
     showers_, JHEP 11 (2009) 038 [arXiv:0905.3072].

     [Hoc06] S. Hoche and others, _Matching Parton Showers and Matrix
     Elements_,     hep-ph/0602031.

     [Hoe09] S. Hoche and F. Krauss and S. Schumann and  F. Siegert,
     _QCD matrix elements and truncated showers_, JHEP 05 (2009) 053
     [arXiv:0903.1219].

     [Hoe09a] S. Hoche and S. Schumann and F. Siegert, _Hard photon
     production and matrix-element parton-shower merging_, Phys. Rev.
     D81 (2010) 034026 [arXiv:0912.3501].

     [Hoe10] S. Hoche and F. Krauss and M. Schonherr and F. Siegert,
     _NLO matrix elements and truncated showers_, JHEP 08 (2011) 123
     [arXiv:1009.1127].

     [Hoe11] S. Hoche and F. Krauss and M. Schonherr and F.  Siegert,
     _A critical appraisal of NLO+PS matching methods_, JHEP 09 (2012)
     049 [arXiv:1111.1220].

     [Hoe12a] S. Hoche and F. Krauss and M. Schonherr and F.  Siegert,
     _QCD matrix elements + parton showers: The NLO case_,
     arXiv:1207.5030.

     [Hoe12b] S. Hoche and M. Schonherr, _Uncertainties in NLO + parton
     shower matched simulations of inclusive jet and dijet production_,
        arXiv:1208.2815.

     [Hoe13] S. Hoeche and J. Huang and G. Luisoni and  M. Schoenherr
     and J. Winter, _Zero and one jet combined NLO analysis of the top
     quark forward-backward asymmetry_,     arXiv:1306.2703.

     [Hou87a] W. S. Hou and A. Soni and H. Steger, _Charmless Decays of
     Bottom Mesons and a Fourth Generation_, Phys. Rev. Lett. 59 (1987)
     1521 .

     [Jad93] S. Jadach and Z. Was and R. Decker and J. H. Kuhn, _The
     tau decay library TAUOLA: Version 2.4_, Comput. Phys. Commun. 76
     (1993) 361-380 .

     [Kan00] A. Kanaki and C. G. Papadopoulos, _HELAC: A package to
     compute electroweak helicity amplitudes_, Comput. Phys. Commun.
     132 (2000) 306-315 [hep-ph/0002082].

     [Kle85] R. Kleiss and W. J. Stirling, _Spinor techniques for
     calculating pbarpto W^pm/Z^0+jets_, Nucl. Phys. B262 (1985)
     235-262 .

     [Kle85a] R. Kleiss and W. J. Stirling and S. D. Ellis, _A new
     Monte Carlo treatment of multiparticle phase space at high
     energies_, Comput. Phys. Commun. 40 (1986) 359 .

     [Kle94] R. Kleiss and R. Pittau, _Weight optimization in
     multichannel Monte Carlo_, Comput. Phys. Commun. 83 (1994) 141-146
     [hep-ph/9405257].

     [Kra01] F. Krauss and R. Kuhn and G. Soff, _AMEGIC++ 1.0: A Matrix
     Element Generator In C++_, JHEP 02 (2002) 044 [hep-ph/0109036].

     [Kra02] F. Krauss, _Matrix elements and parton showers in hadronic
     interactions_, JHEP 0208 (2002) 015 [hep-ph/0205283].

     [Kra04] F. Krauss and A. Schalicke and S. Schumann and G.  Soff,
     _Simulating W/Z + jets production at the Tevatron_, Phys. Rev. D70
     (2004) 114009 [hep-ph/0409106].

     [Kra05] F. Krauss and A. Schalicke and S. Schumann and G.  Soff,
     _Simulating W/Z + jets production at the CERN LHC_, Phys. Rev. D72
     (2005) 054017 [hep-ph/0503280].

     [Kra05a] F. Krauss and A. Schalicke and G. Soff, _APACIC++ 2.0: A
     PArton Cascade In C++_, Comput. Phys. Commun. 174 (2006) 876-902
     [hep-ph/0503087].

     [Kra10] F. Krauss and T. Laubrich and F. Siegert, _Simulation of
     hadron decays in Sherpa_,     .

     [Lai10] H. L. Lai and M. Guzzi and J. Huston and Z. Li and P. M.
     Nadolsky and others, _New parton distributions for collider
     physics_, Phys.Rev. D82 (2010) 074024 [arXiv:1007.2241].

     [Lan01] D. J. Lange, _The EvtGen particle decay simulation
     package_, Nucl. Instrum. Meth. A462 (2001) 152-155 .

     [Lav05] N. Lavesson and L. Lonnblad, _W+jets matrix elements and
     the dipole cascade_, JHEP 07 (2005) 054 [hep-ph/0503293].

     [Lav08] N. Lavesson and L. Lonnblad, _Extending CKKW-merging to
     one-loop matrix elements_, JHEP 12 (2008) 070 [arXiv:0811.2912].

     [Lep80] G. P. Lepage, _VEGAS - An Adaptive Multi-dimensional
     Integration Program_,     .

     [Lon01] L. Lonnblad, _Correcting the colour-dipole cascade model
     with fixed order matrix elements_, JHEP 05 (2002) 046
     [hep-ph/0112284].

     [Lon11] L. Lonnblad and S. Prestel, _Matching Tree-Level Matrix
     Elements with Interleaved Showers_, JHEP 03 (2012) 019
     [arXiv:1109.4829].

     [Lon12a] L. Lonnblad and S. Prestel, _Merging Multi-leg NLO Matrix
     Elements with Parton Showers_,     arXiv:1211.7278.

     [Lon12b] L. Lonnblad and S. Prestel, _Unitarising Matrix Element +
     Parton Shower merging_,     arXiv:1211.4827.

     [Lon92] L. Lonnblad, _Ariadne version 4: A program for simulation
     of QCD cascades implementing the colour dipole model_, Comput.
     Phys. Commun. 71 (1992) 15-31 .

     [Mal02a] F. Maltoni and T. Stelzer, _MadEvent: automatic event
     generation with MadGraph_, JHEP 02 (2003) 027 [hep-ph/0208156].

     [Man01] M. L. Mangano and M. Moretti and R. Pittau, _Multijet
     matrix elements and shower evolution in hadronic collisions: W
     bbarb+n-jets as a case study_, Nucl. Phys. B632 (2002) 343-362
     [hep-ph/0108069].

     [Man02] M. L. Mangano and M. Moretti and F. Piccinini and R.
     Pittau and A. D. Polosa, _ALPGEN a generator for hard multiparton
     processes in hadronic collisions_, JHEP 07 (2003) 001
     [hep-ph/0206293].

     [Man06] M. L. Mangano and M. Moretti and F. Piccinini and M.
     Treccani, _Matching matrix elements and shower evolution for
     top-pair production in hadronic collisions_, JHEP 01 (2007) 013
     [hep-ph/0611129].

     [Mar01] A. D. Martin and R. G. Roberts and W. J. Stirling and  R.
     S. Thorne, _MRST2001: Partons and alpha_s from precise deep
     inelastic scattering and Tevatron jet data_, Eur. Phys. J. C23
     (2002) 73-87 [hep-ph/0110215].

     [Mar04] A. D. Martin and R. G. Roberts and W. J. Stirling and  R.
     S. Thorne, _Parton distributions incorporating QED contributions_,
     Eur. Phys. J. C39 (2005) 155-161 [hep-ph/0411040].

     [Mar09a] A. D. Martin and W. J. Stirling and R. S. Thorne and G.
     Watt, _Parton distributions for the LHC_, Eur. Phys. J. C63 (2009)
     189-295 [arXiv:0901.0002].

     [Mar87] G. Marchesini and B. R. Webber, _Monte Carlo Simulation of
     General Hard Processes with Coherent QCD Radiation_, Nucl. Phys.
     B310 (1988) 461 .

     [Mar99] A. D. Martin and R. G. Roberts and W. J. Stirling and  R.
     S. Thorne, _Parton distributions and the LHC: W and Z production_,
     Eur. Phys. J. C14 (2000) 133-145 [hep-ph/9907231].

     [Nad08] P. M. Nadolsky and others, _Implications of CTEQ global
     analysis for collider observables_, Phys. Rev. D78 (2008) 013004
     [arXiv:0802.0007].

     [Nag03] Z. Nagy, _Next-to-leading order calculation of three-jet
     observables in hadron-hadron collisions_, Phys. Rev. D68 (2003)
     094002 [hep-ph/0307268].

     [Nag05] Z. Nagy and D. E. Soper, _Matching parton showers to NLO
     computations_, JHEP 10 (2005) 024 [hep-ph/0503053].

     [Nag06] Z. Nagy and D. E. Soper, _A new parton shower algorithm:
     Shower evolution matching at leading and next-to-leading order
     level_,     hep-ph/0601021.

     [Pap05] C. G. Papadopoulos and M. Worek, _Multi-parton cross
     sections at hadron colliders_, Eur. Phys. J. C50 (2007) 843-856
     [hep-ph/0512150].

     [Rei01] L. Reina and S. Dawson, _Next-to-leading order results for
     t anti-t h production at the Tevatron_, Phys.Rev.Lett. 87 (2001)
     201804 [hep-ph/0107101].

     [Rei01a] L. Reina and S. Dawson and D. Wackeroth, _QCD corrections
     to associated t anti-t h production at the Tevatron_, Phys.Rev.
     D65 (2002) 053017 [hep-ph/0109066].

     [Ros89] J. Rosiek, _Complete set of Feynman rules for the minimal
     supersymmetric extension of the standard model_, Phys. Rev. D41
     (1990) 3464 .

     [Ros95] J. Rosiek, _Complete set of Feynman rules for the MSSM -
     ERRATUM_,     hep-ph/9511250.

     [Rys09] M. G. Ryskin and A. D. Martin and V. A. Khoze, _Soft
     processes at the LHC I: Multi-component model_, Eur. Phys. J. C60
     (2009) 249-264 [arXiv:0812.2407].

     [Sch05] A. Schalicke and F. Krauss, _Implementing the ME+PS
     merging algorithm_, JHEP 07 (2005) 018 [hep-ph/0503281].

     [Sch07a] S. Schumann and F. Krauss, _A parton shower algorithm
     based on Catani-Seymour dipole factorisation_, JHEP 03 (2008) 038
     [arXiv:0709.1027].

     [Sch08] M. Schonherr and F. Krauss, _Soft photon radiation in
     particle decays in Sherpa_, JHEP 12 (2008) 018 [arXiv:0810.5071].

     [Sjo06] T. Sjostrand and S. Mrenna and P. Skands, _PYTHIA 6.4
     physics and manual_, JHEP 05 (2006) 026 [hep-ph/0603175].

     [Sjo07] T. Sjostrand and S. Mrenna and P. Skands, _A brief
     introduction to PYTHIA 8.1_, Comput. Phys. Commun. 178 (2008)
     852-867 [arXiv:0710.3820].

     [Sjo87] T. Sjostrand and M. van Zijl, _A multiple-interaction
     model for the event structure in hadron collisions_, Phys. Rev.
     D36 (1987) 2019 .

     [Ska03] P. Skands and others, _SUSY Les Houches accord:
     interfacing SUSY spectrum calculators  decay packages and event
     generators_, JHEP 07 (2004) 036 [hep-ph/0311123].

     [Ste94] T. Stelzer and W. F. Long, _Automatic generation of tree
     level helicity amplitudes_, Comput. Phys. Commun. 81 (1994)
     357-371 [hep-ph/9401258].

     [Web83] B. R. Webber, _A QCD model for jet fragmentation including
     soft gluon interference_, Nucl. Phys. B238 (1984) 492 .

     [Wha05] M. R. Whalley and D. Bourilkov and R. C. Group, _The Les
     Houches Accord PDFs (LHAPDF) and LHAGLUE_,     hep-ph/0508110.

     [Win03] J. C. Winter and F. Krauss and G. Soff, _A modified
     cluster-hadronisation model_, Eur. Phys. J. C36 (2004) 381-395
     [hep-ph/0311085].

     [Wol83] L. Wolfenstein, _Parametrization of the Kobayashi-Maskawa
     Matrix_, Phys. Rev. Lett. 51 (1983) 1945 .

     [Yen61] D. R. Yennie and S. C. Frautschi and H. Suura, _The
     Infrared Divergence Phenomena and High-Energy Processes_, Ann.
     Phys. 13 (1961) 379-452 .

     [Zar02] A. F. Zarnecki, _CompAZ: Parametrization of the luminosity
     spectra for the photon collider_, Acta Phys. Polon. B34 (2003)
     2741-2758 [hep-ex/0207021].

     [Bea03] D. M. Beazley, _Automated scientific software scripting
     with SWIG_, Future Generation Computer Systems 19 (2003) 599-609 .


File: Sherpa.info,  Node: Index,  Prev: References,  Up: Top

Appendix B Index
****************

 [index ]
* Menu:

* 1/ALPHAQED(0):                         SM.                  (line   6)
* 1/ALPHAQED(default):                   SM.                  (line   6)
* A:                                     SM.                  (line   6)
* A_14:                                  4thGen.              (line   6)
* A_24:                                  4thGen.              (line   6)
* A_34:                                  4thGen.              (line   6)
* ACTIVE[<id>]:                          Model Parameters.    (line   6)
* ALPHA:                                 THDM.                (line   6)
* ALPHA_4_G_4:                           AGC.                 (line   6)
* ALPHA_5:                               AGC.                 (line   6)
* ALPHAS(default):                       SM.                  (line   6)
* ALPHAS(MZ):                            SM.                  (line   6)
* ANALYSIS:                              ANALYSIS.            (line   6)
* ANALYSIS_OUTPUT <1>:                   HZTool analyses.     (line   6)
* ANALYSIS_OUTPUT <2>:                   Rivet analyses.      (line   6)
* ANALYSIS_OUTPUT:                       ANALYSIS_OUTPUT.     (line   6)
* BARYON_FRACTION:                       Fragmentation.       (line 106)
* BATCH_MODE:                            BATCH_MODE.          (line   6)
* BEAM_1:                                Beam Parameters.     (line   6)
* BEAM_2:                                Beam Parameters.     (line   6)
* BEAM_ENERGY_1:                         Beam Parameters.     (line   6)
* BEAM_ENERGY_2:                         Beam Parameters.     (line   6)
* BEAM_REMNANTS:                         Intrinsic Transverse Momentum.
                                                              (line   6)
* BEAM_SMAX:                             Beam Spectra.        (line   6)
* BEAM_SMIN:                             Beam Spectra.        (line   6)
* BEAM_SPECTRUM_1:                       Beam Spectra.        (line   6)
* BEAM_SPECTRUM_2:                       Beam Spectra.        (line   6)
* beta_0^2:                              Minimum Bias.        (line 129)
* BH_SETTINGS_FILE:                      Loop_Generator.      (line  13)
* BUNCH_1:                               ISR Parameters.      (line   6)
* BUNCH_2:                               ISR Parameters.      (line   6)
* CABIBBO:                               SM.                  (line   6)
* CHECK_BORN:                            Checking the pole cancellation.
                                                              (line   6)
* CHECK_FINITE:                          Checking the pole cancellation.
                                                              (line   6)
* CHECK_POLES:                           Checking the pole cancellation.
                                                              (line   6)
* CHECK_POLES_THRESHOLD:                 Checking the pole cancellation.
                                                              (line   6)
* Chi_S:                                 Minimum Bias.        (line 154)
* CKMORDER:                              SM.                  (line   6)
* COMIX_ME_THREADS:                      Multi-threading.     (line   6)
* COMIX_PS_THREADS:                      Multi-threading.     (line   6)
* CORE_SCALE:                            METS scale setting with multiparton core processes.
                                                              (line   6)
* COUPLING_SCHEME:                       COUPLING_SCHEME.     (line   6)
* COUPLINGS:                             COUPLINGS.           (line   6)
* CSS_EVOLUTION_SCHEME:                  CS Shower options.   (line   6)
* CSS_EW_MODE:                           CS Shower options.   (line   6)
* CSS_FS_AS_FAC:                         CS Shower options.   (line   6)
* CSS_FS_PT2MIN:                         CS Shower options.   (line   6)
* CSS_IS_AS_FAC:                         CS Shower options.   (line   6)
* CSS_IS_PT2MIN:                         CS Shower options.   (line   6)
* CSS_KIN_SCHEME:                        CS Shower options.   (line   6)
* CSS_MASS_THRESHOLD:                    CS Shower options.   (line   6)
* CSS_MAXEM:                             CS Shower options.   (line   6)
* CSS_NOEM:                              CS Shower options.   (line   6)
* CSS_SHOWER_SCALE2_FACTOR:              Scale variations in parton showered and merged samples.
                                                              (line   6)
* DEACTIVATE_GGH:                        EHC.                 (line   6)
* DEACTIVATE_PPH:                        EHC.                 (line   6)
* DECAY_OFFSET:                          Fragmentation.       (line 106)
* DECAY_RESULT_DIRECTORY:                DECAY_RESULT_DIRECTORY.
                                                              (line   6)
* DECAY_TAU_HARD:                        DECAY_TAU_HARD.      (line   6)
* DECAYMODEL:                            Hadron decays.       (line   6)
* DECAYPATH:                             Hadron decays.       (line   6)
* Delphes:                               Event output formats.
                                                              (line   6)
* Delta:                                 Minimum Bias.        (line 129)
* deltaY:                                Minimum Bias.        (line 129)
* DIPOLE_ALPHA:                          Dipole subtraction.  (line   6)
* DIPOLE_AMIN:                           Dipole subtraction.  (line   6)
* DIPOLE_KAPPA:                          Dipole subtraction.  (line   6)
* DIPOLE_NF_GSPLIT:                      Dipole subtraction.  (line   6)
* E_LASER_:                              Beam Spectra.        (line  52)
* EHC_SCALE2:                            EHC.                 (line   6)
* EPA_AlphaQED:                          Beam Spectra.        (line  72)
* EPA_Form_Factor_1:                     Beam Spectra.        (line  72)
* EPA_Form_Factor_2:                     Beam Spectra.        (line  72)
* EPA_ptMin_1:                           Beam Spectra.        (line  72)
* EPA_ptMin_2:                           Beam Spectra.        (line  72)
* EPA_q2Max_1:                           Beam Spectra.        (line  72)
* EPA_q2Max_2:                           Beam Spectra.        (line  72)
* ERROR:                                 ERROR.               (line   6)
* ETA:                                   SM.                  (line   6)
* EVENT_GENERATION_MODE:                 EVENT_GENERATION_MODE.
                                                              (line   6)
* EVENT_INPUT:                           Event output formats.
                                                              (line   6)
* EVENT_OUTPUT:                          Event output formats.
                                                              (line   6)
* EVENT_TYPE <1>:                        Minimum Bias.        (line  90)
* EVENT_TYPE:                            EVENT_TYPE.          (line   6)
* EVENTS:                                EVENTS.              (line   6)
* EVT_FILE_PATH:                         Event output formats.
                                                              (line   6)
* EVT_OUTPUT:                            OUTPUT.              (line   6)
* EW_SCHEME:                             SM.                  (line   6)
* F4_GAMMA:                              AGC.                 (line   6)
* F4_Z:                                  AGC.                 (line   6)
* F5_GAMMA:                              AGC.                 (line   6)
* F5_Z:                                  AGC.                 (line   6)
* FACTORIZATION_SCALE_FACTOR:            Simple scale variations.
                                                              (line   6)
* FeynRules:                             FeynRules.           (line   6)
* FILE_SIZE:                             Event output formats.
                                                              (line   6)
* FINISH_OPTIMIZATION:                   FINISH_OPTIMIZATION. (line   6)
* FINITE_TOP_MASS:                       EHC.                 (line   6)
* FINITE_W_MASS:                         EHC.                 (line   6)
* FR_IDENTFILE:                          FeynRules.           (line   6)
* FR_INTERACTIONS:                       FeynRules.           (line   6)
* FR_PARAMCARD:                          FeynRules.           (line   6)
* FR_PARAMDEF:                           FeynRules.           (line   6)
* FR_PARTICLES:                          FeynRules.           (line   6)
* FRAGMENTATION:                         Fragmentation.       (line   9)
* G1_GAMMA:                              AGC.                 (line   6)
* G1_Z:                                  AGC.                 (line   6)
* G4_GAMMA:                              AGC.                 (line   6)
* G4_Z:                                  AGC.                 (line   6)
* G5_GAMMA:                              AGC.                 (line   6)
* G5_Z:                                  AGC.                 (line   6)
* G_NEWTON:                              ADD.                 (line   6)
* H1_GAMMA:                              AGC.                 (line   6)
* H1_Z:                                  AGC.                 (line   6)
* H2_GAMMA:                              AGC.                 (line   6)
* H2_Z:                                  AGC.                 (line   6)
* H3_GAMMA:                              AGC.                 (line   6)
* H3_Z:                                  AGC.                 (line   6)
* H4_GAMMA:                              AGC.                 (line   6)
* H4_Z:                                  AGC.                 (line   6)
* HARD_DECAYS:                           Hard decays.         (line   6)
* HARD_MASS_SMEARING:                    HARD_MASS_SMEARING.  (line   6)
* HARD_SPIN_CORRELATIONS <1>:            Hadron decays.       (line 217)
* HARD_SPIN_CORRELATIONS:                HARD_SPIN_CORRELATIONS.
                                                              (line   6)
* HDH_BR_WEIGHTS:                        HDH_BR_WEIGHTS.      (line   6)
* HDH_NO_DECAY:                          HDH_NO_DECAY.        (line   6)
* HDH_ONLY_DECAY:                        HDH_ONLY_DECAY.      (line   6)
* HDH_SET_WIDTHS:                        HDH_SET_WIDTHS.      (line   6)
* HEAVY_BARYON_ENHANCEMEMT:              Fragmentation.       (line  52)
* HEPEVT:                                Event output formats.
                                                              (line   6)
* HepMC_GenEvent:                        Event output formats.
                                                              (line   6)
* HepMC_Short:                           Event output formats.
                                                              (line   6)
* HIGGS_INTERFERENCE_MODE:               LHC_HInt.            (line   6)
* HIGGS_INTERFERENCE_ONLY:               LHC_HInt.            (line   6)
* HIGGS_INTERFERENCE_SPIN:               LHC_HInt.            (line   6)
* INTEGRATOR:                            INTEGRATOR.          (line   6)
* ISR_E_ORDER:                           ISR Parameters.      (line   6)
* ISR_E_SCHEME:                          ISR Parameters.      (line   6)
* ISR_SMAX:                              ISR Parameters.      (line   6)
* ISR_SMIN:                              ISR Parameters.      (line   6)
* K_PERP_MEAN_1:                         Intrinsic Transverse Momentum.
                                                              (line   6)
* K_PERP_MEAN_2:                         Intrinsic Transverse Momentum.
                                                              (line   6)
* K_PERP_SIGMA_1:                        Intrinsic Transverse Momentum.
                                                              (line   6)
* K_PERP_SIGMA_2:                        Intrinsic Transverse Momentum.
                                                              (line   6)
* kappa:                                 Minimum Bias.        (line 129)
* KAPPA_GAMMA:                           AGC.                 (line   6)
* KAPPA_Z:                               AGC.                 (line   6)
* KAPPAT_GAMMA:                          AGC.                 (line   6)
* KAPPAT_Z:                              AGC.                 (line   6)
* KFACTOR:                               KFACTOR.             (line   6)
* KK_CONVENTION:                         ADD.                 (line   6)
* KT2_Factor:                            Minimum Bias.        (line 154)
* lambda:                                Minimum Bias.        (line 129)
* LAMBDA:                                SM.                  (line   6)
* Lambda2:                               Minimum Bias.        (line 129)
* LAMBDA_GAMMA:                          AGC.                 (line   6)
* LAMBDA_Z:                              AGC.                 (line   6)
* LAMBDAT_GAMMA:                         AGC.                 (line   6)
* LAMBDAT_Z:                             AGC.                 (line   6)
* LASER_ANGLES:                          Beam Spectra.        (line  52)
* LASER_MODE:                            Beam Spectra.        (line  52)
* LASER_NONLINEARITY:                    Beam Spectra.        (line  52)
* LHEF:                                  Event output formats.
                                                              (line   6)
* LHOLE_BOOST_TO_CMS:                    External one-loop ME.
                                                              (line   6)
* LHOLE_CONTRACTFILE:                    External one-loop ME.
                                                              (line   6)
* LHOLE_IR_REGULARISATION:               External one-loop ME.
                                                              (line   6)
* LHOLE_OLP:                             External one-loop ME.
                                                              (line   6)
* LHOLE_ORDERFILE:                       External one-loop ME.
                                                              (line   6)
* LOG_FILE:                              LOG_FILE.            (line   6)
* Loop_Generator:                        MCFM interface.      (line   6)
* LOOP_ME_INIT:                          Enforcing the renormalization scheme.
                                                              (line   6)
* M_BIND_0:                              Fragmentation.       (line  33)
* M_BIND_1:                              Fragmentation.       (line  33)
* M_BOTTOM:                              Fragmentation.       (line  33)
* M_CHARM:                               Fragmentation.       (line  33)
* M_CUT:                                 ADD.                 (line   6)
* M_DIQUARK_OFFSET:                      Fragmentation.       (line  33)
* M_S:                                   ADD.                 (line   6)
* M_STRANGE:                             Fragmentation.       (line  33)
* M_UP_DOWN:                             Fragmentation.       (line  33)
* MASS[<id>] <1>:                        Hadron decays.       (line   6)
* MASS[<id>]:                            Model Parameters.    (line   6)
* MassExponent_C->HH:                    Fragmentation.       (line 150)
* MASSIVE[<id>]:                         Model Parameters.    (line   6)
* MAX_PROPER_LIFETIME:                   Hadron decays.       (line   6)
* ME_QED:                                ME_QED.              (line   6)
* ME_QED_CLUSTERING:                     ME_QED_CLUSTERING.   (line   6)
* ME_QED_CLUSTERING_THRESHOLD:           ME_QED_CLUSTERING_THRESHOLD.
                                                              (line   6)
* ME_SIGNAL_GENERATOR:                   ME_SIGNAL_GENERATOR. (line   6)
* MEMLEAK_WARNING_THRESHOLD:             RLIMIT_AS.           (line   6)
* MI_HANDLER:                            MI_HANDLER.          (line   6)
* MI_RESULT_DIRECTORY:                   MI_RESULT_DIRECTORY. (line   6)
* MI_RESULT_DIRECTORY_SUFFIX:            MI_RESULT_DIRECTORY_SUFFIX.
                                                              (line   6)
* Mixing_0+:                             Fragmentation.       (line  52)
* Mixing_1-:                             Fragmentation.       (line  52)
* MODEL:                                 Model Parameters.    (line   6)
* MSTJ:                                  Fragmentation.       (line   9)
* MSTP:                                  Fragmentation.       (line   9)
* MSTU:                                  Fragmentation.       (line   9)
* MULTI_WEIGHT_L0R0_DELTA_3/2:           Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R0_N*_1/2:              Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R0_N_1/2:               Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R0_PSEUDOSCALARS:       Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R0_TENSORS2:            Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R0_TENSORS3:            Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R0_TENSORS4:            Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R0_VECTORS:             Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R1_AXIALVECTORS:        Fragmentation.       (line  52)
* MULTI_WEIGHT_L0R1_SCALARS:             Fragmentation.       (line  52)
* MULTI_WEIGHT_L1R0_AXIALVECTORS:        Fragmentation.       (line  52)
* MULTI_WEIGHT_L1R0_DELTA*_3/2:          Fragmentation.       (line  52)
* MULTI_WEIGHT_L1R0_N*_1/2:              Fragmentation.       (line  52)
* MULTI_WEIGHT_L1R0_N*_3/2:              Fragmentation.       (line  52)
* MULTI_WEIGHT_L1R0_SCALARS:             Fragmentation.       (line  52)
* MULTI_WEIGHT_L1R0_TENSORS2:            Fragmentation.       (line  52)
* MULTI_WEIGHT_L2R0_VECTORS:             Fragmentation.       (line  52)
* MULTI_WEIGHT_L3R0_VECTORS:             Fragmentation.       (line  52)
* N_ED:                                  ADD.                 (line   6)
* NUM_ACCURACY:                          NUM_ACCURACY.        (line   6)
* ORDER_ALPHAS:                          SM.                  (line   6)
* OUTPUT:                                OUTPUT.              (line   6)
* OUTPUT_MIXING:                         4thGen.              (line   6)
* OUTPUT_PRECISION:                      Event output formats.
                                                              (line   6)
* P_LASER_:                              Beam Spectra.        (line  52)
* P_{QQ_1}/P_{QQ_0}:                     Fragmentation.       (line 106)
* P_{QS}/P_{QQ}:                         Fragmentation.       (line 106)
* P_{SS}/P_{QQ}:                         Fragmentation.       (line 106)
* PARJ:                                  Fragmentation.       (line   9)
* PARP:                                  Fragmentation.       (line   9)
* PARTICLE_CONTAINER:                    Particle containers. (line  26)
* PARU:                                  Fragmentation.       (line   9)
* PATH:                                  Input structure.     (line   6)
* PDF_LIBRARY:                           ISR Parameters.      (line   6)
* PDF_LIBRARY_1:                         ISR Parameters.      (line   6)
* PDF_LIBRARY_2:                         ISR Parameters.      (line   6)
* PDF_SET:                               ISR Parameters.      (line   6)
* PDF_SET_1:                             ISR Parameters.      (line   6)
* PDF_SET_2:                             ISR Parameters.      (line   6)
* PDF_SET_VERSION:                       ISR Parameters.      (line   6)
* PG_THREADS:                            Multi-threading.     (line   6)
* PHI_2:                                 4thGen.              (line   6)
* PHI_3:                                 4thGen.              (line   6)
* PHI_L2:                                4thGen.              (line   6)
* PHI_L3:                                4thGen.              (line   6)
* PROFILE_FUNCTION:                      PROFILE_FUNCTION.    (line   6)
* PROFILE_PARAMETERS:                    PROFILE_PARAMETERS.  (line   6)
* PSI_ITMAX:                             PSI_ITMAX.           (line   6)
* PSI_ITMIN:                             PSI_ITMIN.           (line   6)
* PSI_NMAX:                              PSI_NMAX.            (line   6)
* PT^2_0:                                Fragmentation.       (line 166)
* PT_MAX:                                Fragmentation.       (line 166)
* Q_0^2:                                 Minimum Bias.        (line 154)
* Q_as^2 <1>:                            Minimum Bias.        (line 154)
* Q_as^2:                                Fragmentation.       (line 166)
* RANDOM_SEED:                           RANDOM_SEED.         (line   6)
* REFERENCE_SCALE:                       REFERENCE_SCALE.     (line   6)
* RENORMALIZATION_SCALE_FACTOR:          Simple scale variations.
                                                              (line   6)
* RESCALE_EXPONENT:                      RESCALE_EXPONENT.    (line   6)
* RescProb:                              Minimum Bias.        (line 154)
* RescProb1:                             Minimum Bias.        (line 154)
* RESOLVE_DECAYS:                        RESOLVE_DECAYS.      (line   6)
* RESULT_DIRECTORY:                      RESULT_DIRECTORY.    (line   6)
* RHO:                                   SM.                  (line   6)
* RLIMIT_AS:                             RLIMIT_AS.           (line   6)
* RLIMIT_BY_CPU:                         RLIMIT_AS.           (line   6)
* Root:                                  Event output formats.
                                                              (line   6)
* RUNDATA:                               Input structure.     (line   6)
* SCALE_MIN:                             SCALE_MIN.           (line   6)
* SCALES:                                SCALES.              (line   6)
* SHERPA_CPP_PATH:                       SHERPA_CPP_PATH.     (line   6)
* SHERPA_LDADD:                          Customization.       (line   6)
* SHERPA_LIB_PATH:                       SHERPA_LIB_PATH.     (line   6)
* SHOW_MODEL_SYNTAX:                     Model Parameters.    (line   6)
* SHOW_PDF_SETS:                         ISR Parameters.      (line   6)
* SHOW_VARIABLE_SYNTAX:                  Universal selector.  (line   6)
* Shrimps_Mode:                          Minimum Bias.        (line  97)
* SIGMA_ND_FACTOR:                       SIGMA_ND_FACTOR.     (line   6)
* SIN2THETAW:                            SM.                  (line   6)
* SINGLET_SUPPRESSION:                   Fragmentation.       (line  52)
* SLHA_INPUT:                            MSSM.                (line   6)
* SOFT_COLLISIONS:                       Minimum Bias.        (line  90)
* SOFT_MASS_SMEARING:                    Hadron decays.       (line   6)
* SOFT_SPIN_CORRELATIONS:                Hadron decays.       (line 217)
* SP_NLOCT:                              Scale variations in parton showered and merged samples.
                                                              (line   6)
* SPECTRUM_FILE_1:                       Beam Spectra.        (line   6)
* SPECTRUM_FILE_2:                       Beam Spectra.        (line   6)
* STABLE[<id>] <1>:                      Hadron decays.       (line   6)
* STABLE[<id>] <2>:                      Hard decays.         (line   6)
* STABLE[<id>]:                          Model Parameters.    (line   6)
* STORE_DECAY_RESULTS:                   STORE_DECAY_RESULTS. (line   6)
* STRANGE_FRACTION:                      Fragmentation.       (line 106)
* TAN(BETA):                             THDM.                (line   6)
* THETA_L14:                             4thGen.              (line   6)
* THETA_L24:                             4thGen.              (line   6)
* THETA_L34:                             4thGen.              (line   6)
* TIMEOUT:                               TIMEOUT.             (line   6)
* TRANSITION_OFFSET:                     Fragmentation.       (line 106)
* TUNE:                                  TUNE.                (line   6)
* UNITARIZATION_M:                       AGC.                 (line   6)
* UNITARIZATION_M3:                      AGC.                 (line   6)
* UNITARIZATION_M4:                      AGC.                 (line   6)
* UNITARIZATION_N:                       AGC.                 (line   6)
* UNITARIZATION_N3:                      AGC.                 (line   6)
* UNITARIZATION_N4:                      AGC.                 (line   6)
* UNITARIZATION_SCALE:                   AGC.                 (line   6)
* UNITARIZATION_SCALE3:                  AGC.                 (line   6)
* UNITARIZATION_SCALE4:                  AGC.                 (line   6)
* USE_PDF_ALPHAS:                        SM.                  (line   6)
* VEGAS:                                 VEGAS.               (line   6)
* VEV:                                   SM.                  (line   6)
* WIDTH[<id>] <1>:                       Hadron decays.       (line   6)
* WIDTH[<id>] <2>:                       HDH_SET_WIDTHS.      (line   6)
* WIDTH[<id>]:                           Model Parameters.    (line   6)
* WIDTH_SCHEME:                          SM.                  (line   6)
* xi:                                    Minimum Bias.        (line 129)
* YFS_IR_CUTOFF:                         YFS_IR_CUTOFF.       (line   6)
* YFS_MODE:                              YFS_MODE.            (line   6)
* YFS_USE_ME:                            YFS_USE_ME.          (line   6)
* YUKAWA[<id>]:                          Model Parameters.    (line   6)
* YUKAWA_MASSES:                         YUKAWA_MASSES.       (line   6)


