      subroutine setreal(p,rflav,amp2)
      implicit none
      include 'nlegborn.h'
      include 'pwhg_flst.h'
      include 'pwhg_math.h'
      include 'pwhg_st.h'
      include 'pwhg_kn.h'
      include 'PhysPars.h'
      include 'coupl.inc'       ! Madgraph common block 
      real * 8 p(0:3,nlegreal)
      integer rflav(nlegreal)
      real * 8 amp2
      logical ini
      data ini/.true./
      save ini
      real * 8 gs2
      real * 8 ans,amp2_n
      real * 8 powheginput
      integer idvecbos
      save idvecbos
      if (ini) then
c     initialize MadGraph couplings
         call initialize
         idvecbos=powheginput('idvecbos')
         ini=.false.
      endif
      gs2 = 4*pi*st_alpha
c      gw = ph_unit_e/ph_sthw
c     Set MADGRAPH Wmass to the W virtuality
      WMASS=kn_masses(3)
      
      if (rflav(1).ne.0.and.rflav(2).ne.0) then
         if (idvecbos.eq.-24) then
c     dub,sub,dcb,scb > W^-bbbg
            if (rflav(1).eq.1.or.rflav(1).eq.3) then
               call SDUB_WMBBBG(p,amp2)
            else
c     ubd,ubs,cbd,cbs > W^-bbbg
               call SUBD_WMBBBG(p,amp2)
            endif
         elseif (idvecbos.eq.24) then
c     udb,cdb,usb,csb > W^+bbbg 
            if (rflav(1).eq.2.or.rflav(1).eq.4) then
               call SUDB_WPBBBG(p,amp2)
            else
c     dbu,dbc,sbu,sbc > W+bbbg
               call SDBU_WPBBBG(p,amp2)
            endif
         endif
         amp2=amp2*ph_CKM_matrix(abs(rflav(1)),abs(rflav(2)))**2
      elseif(
c     gd > W-bbb u,c
     #        (rflav(1).eq.0.and.rflav(2).eq.1).or.
c     gs > W-bbb u,c
     #        (rflav(1).eq.0.and.rflav(2).eq.3)) then
         call SGD_WMBBBU(p,amp2)
         amp2=amp2*ph_CKM_matrix(abs(rflav(2)),abs(rflav(6)))**2
      elseif (
c     dg > W-bbb u,c
     #        (rflav(1).eq.1.and.rflav(2).eq.0).or.
c     sg > W-bbb u,c
     #        (rflav(1).eq.3.and.rflav(2).eq.0)) then
         call SDG_WMBBBU(p,amp2)
         amp2=amp2*ph_CKM_matrix(abs(rflav(1)),abs(rflav(6)))**2
      elseif (
c     gub > W-bbb db,sb
     #        (rflav(1).eq.0.and.rflav(2).eq.-2).or.
c     gcb > W-bbb db,sb
     #        (rflav(1).eq.0.and.rflav(2).eq.-4)) then
         call SGUB_WMBBBDB(p,amp2)
         amp2=amp2*ph_CKM_matrix(abs(rflav(2)),abs(rflav(6)))**2
      elseif (
c     ubg > W-bbb db,sb
     #        (rflav(1).eq.-2.and.rflav(2).eq.0).or.
c     cbg > W-bbb db,sb
     #        (rflav(1).eq.-4.and.rflav(2).eq.0)) then
         call SUBG_WMBBBDB(p,amp2)
         amp2=amp2*ph_CKM_matrix(abs(rflav(1)),abs(rflav(6)))**2
      elseif(
c     gu > W+bbb d,s
     #        (rflav(1).eq.0.and.rflav(2).eq.2).or.
c     gc > W+bbb d,s
     #        (rflav(1).eq.0.and.rflav(2).eq.4)) then
         call SGU_WPBBBD(p,amp2)
         amp2=amp2*ph_CKM_matrix(abs(rflav(2)),abs(rflav(6)))**2
      elseif (
c     ug > W+bbb d,s
     #        (rflav(1).eq.2.and.rflav(2).eq.0).or.
c     cg > W+bbb d,s
     #        (rflav(1).eq.4.and.rflav(2).eq.0)) then
         call SUG_WPBBBD(p,amp2)
         amp2=amp2*ph_CKM_matrix(abs(rflav(1)),abs(rflav(6)))**2
      elseif (
c     gdb > W+bbb ub,cb
     #        (rflav(1).eq.0.and.rflav(2).eq.-1).or.
c     gsb > W+bbb ub,cb
     #        (rflav(1).eq.0.and.rflav(2).eq.-3)) then
         call SGDB_WPBBBUB(p,amp2)
         amp2=amp2*ph_CKM_matrix(abs(rflav(2)),abs(rflav(6)))**2
      elseif (
c     dbg > W+bbb ub,cb
     #        (rflav(1).eq.-1.and.rflav(2).eq.0).or.
c     sbg > W+bbb ub,cb
     #        (rflav(1).eq.-3.and.rflav(2).eq.0)) then
         call SDBG_WPBBBUB(p,amp2)
         amp2=amp2*ph_CKM_matrix(abs(rflav(1)),abs(rflav(6)))**2
      else
         write(*,*) 'wrong calling sequence in setreal'
         write(*,*) 'rflav =',rflav
         call exit(1)
      endif

c STRIP OFF a factor of as/(2pi) !!!!!!
      amp2=amp2*gs2**2*(gw/(gwf(1)*dsqrt(2d0)))**2*8*pi**2
      end

c ----------------  MADGRAPH4 subroutines ------------------------
c
      SUBROUTINE SDUB_WMBBBG(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : d u~ -> w- b b~ g  
C  
C Crossing   1 is d u~ -> w- b b~ g  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 DUB_WMBBBG
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=DUB_WMBBBG(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION DUB_WMBBBG(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : d u~ -> w- b b~ g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  21, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,   -1,    7,   -2/                
C               T[ 4, 1, 6]T[ 2, 5]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /    -1,    8,   -2,    7/                
C               T[ 4, 1]T[ 2, 5, 6]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /     7,   -2,    8,   -1/                
C               T[ 2, 5]T[ 4, 1, 6]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /    -2,    7,   -1,    8/                
C               T[ 4, 1]T[ 2, 5, 6]                                        
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1*IC(1   ),W(1,1   ))        
      CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL VXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL FVOXXX(W(1,2   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVOXXX(W(1,7   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL IOVXXX(W(1,1   ),W(1,9   ),W(1,6   ),GG ,AMP(1   ))             
      CALL FVIXXX(W(1,1   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL FVIXXX(W(1,10  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,2   ),W(1,6   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,1   ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVIXXX(W(1,5   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,13  ),W(1,4   ),W(1,6   ),GG ,AMP(3   ))             
      CALL FVOXXX(W(1,4   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,6   ),GG ,AMP(4   ))             
      CALL IOVXXX(W(1,10  ),W(1,7   ),W(1,6   ),GG ,AMP(5   ))             
      CALL VVVXXX(W(1,6   ),W(1,12  ),W(1,8   ),G ,AMP(6   ))              
      CALL FVOXXX(W(1,2   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL FVOXXX(W(1,15  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,1   ),W(1,16  ),W(1,6   ),GG ,AMP(7   ))             
      CALL FVIXXX(W(1,1   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL FVIXXX(W(1,17  ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,18  ),W(1,2   ),W(1,6   ),GG ,AMP(8   ))             
      CALL JIOXXX(W(1,17  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVIXXX(W(1,5   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,20  ))     
      CALL IOVXXX(W(1,20  ),W(1,4   ),W(1,6   ),GG ,AMP(9   ))             
      CALL FVOXXX(W(1,4   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,6   ),GG ,AMP(10  ))             
      CALL IOVXXX(W(1,17  ),W(1,15  ),W(1,6   ),GG ,AMP(11  ))             
      CALL VVVXXX(W(1,6   ),W(1,19  ),W(1,8   ),G ,AMP(12  ))              
      JAMP(   1) = -AMP(   1)-AMP(   6)-AMP(   7)-AMP(  11)-AMP(  12)
      JAMP(   2) = -AMP(   2)-AMP(   5)+AMP(   6)-AMP(   8)+AMP(  12)
      JAMP(   3) = -AMP(   3)-AMP(   9)
      JAMP(   4) = -AMP(   4)-AMP(  10)
      DUB_WMBBBG = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          DUB_WMBBBG =DUB_WMBBBG+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SUBD_WMBBBG(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u~ d -> w- b b~ g  
C  
C Crossing   1 is u~ d -> w- b b~ g  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 UBD_WMBBBG
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=UBD_WMBBBG(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION UBD_WMBBBG(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u~ d -> w- b b~ g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  21, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,   -1,   -2,    7/                
C               T[ 4, 2]T[ 1, 5, 6]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /    -1,    8,    7,   -2/                
C               T[ 4, 2, 6]T[ 1, 5]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /    -2,    7,    8,   -1/                
C               T[ 1, 5]T[ 4, 2, 6]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /     7,   -2,   -1,    8/                
C               T[ 4, 2]T[ 1, 5, 6]                                        
C ----------
C BEGIN CODE
C ----------
      CALL OXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL VXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL FVIXXX(W(1,2   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVIXXX(W(1,7   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL IOVXXX(W(1,9   ),W(1,1   ),W(1,6   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,1   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL FVOXXX(W(1,10  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,2   ),W(1,11  ),W(1,6   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,7   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVIXXX(W(1,5   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,13  ),W(1,4   ),W(1,6   ),GG ,AMP(3   ))             
      CALL FVOXXX(W(1,4   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,6   ),GG ,AMP(4   ))             
      CALL IOVXXX(W(1,7   ),W(1,10  ),W(1,6   ),GG ,AMP(5   ))             
      CALL VVVXXX(W(1,6   ),W(1,12  ),W(1,8   ),G ,AMP(6   ))              
      CALL FVIXXX(W(1,2   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL FVIXXX(W(1,15  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,16  ),W(1,1   ),W(1,6   ),GG ,AMP(7   ))             
      CALL FVOXXX(W(1,1   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL FVOXXX(W(1,17  ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,2   ),W(1,18  ),W(1,6   ),GG ,AMP(8   ))             
      CALL JIOXXX(W(1,2   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVIXXX(W(1,5   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,20  ))     
      CALL IOVXXX(W(1,20  ),W(1,4   ),W(1,6   ),GG ,AMP(9   ))             
      CALL FVOXXX(W(1,4   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,6   ),GG ,AMP(10  ))             
      CALL IOVXXX(W(1,15  ),W(1,17  ),W(1,6   ),GG ,AMP(11  ))             
      CALL VVVXXX(W(1,6   ),W(1,19  ),W(1,8   ),G ,AMP(12  ))              
      JAMP(   1) = +AMP(   1)-AMP(   6)+AMP(   7)+AMP(  11)-AMP(  12)
      JAMP(   2) = +AMP(   2)+AMP(   5)+AMP(   6)+AMP(   8)+AMP(  12)
      JAMP(   3) = +AMP(   3)+AMP(   9)
      JAMP(   4) = +AMP(   4)+AMP(  10)
      UBD_WMBBBG = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          UBD_WMBBBG =UBD_WMBBBG+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SUDB_WPBBBG(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u d~ -> w+ b b~ g  
C  
C Crossing   1 is u d~ -> w+ b b~ g  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 UDB_WPBBBG
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=UDB_WPBBBG(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION UDB_WPBBBG(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u d~ -> w+ b b~ g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  21, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,   -1,    7,   -2/                
C               T[ 4, 1, 6]T[ 2, 5]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /    -1,    8,   -2,    7/                
C               T[ 4, 1]T[ 2, 5, 6]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /     7,   -2,    8,   -1/                
C               T[ 2, 5]T[ 4, 1, 6]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /    -2,    7,   -1,    8/                
C               T[ 4, 1]T[ 2, 5, 6]                                        
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1*IC(1   ),W(1,1   ))        
      CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL VXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL FVOXXX(W(1,2   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVOXXX(W(1,7   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL IOVXXX(W(1,1   ),W(1,9   ),W(1,6   ),GG ,AMP(1   ))             
      CALL FVIXXX(W(1,1   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL FVIXXX(W(1,10  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,11  ),W(1,2   ),W(1,6   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,1   ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVIXXX(W(1,5   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,13  ),W(1,4   ),W(1,6   ),GG ,AMP(3   ))             
      CALL FVOXXX(W(1,4   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,6   ),GG ,AMP(4   ))             
      CALL IOVXXX(W(1,10  ),W(1,7   ),W(1,6   ),GG ,AMP(5   ))             
      CALL VVVXXX(W(1,6   ),W(1,12  ),W(1,8   ),G ,AMP(6   ))              
      CALL FVOXXX(W(1,2   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL FVOXXX(W(1,15  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,1   ),W(1,16  ),W(1,6   ),GG ,AMP(7   ))             
      CALL FVIXXX(W(1,1   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL FVIXXX(W(1,17  ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,18  ),W(1,2   ),W(1,6   ),GG ,AMP(8   ))             
      CALL JIOXXX(W(1,17  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVIXXX(W(1,5   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,20  ))     
      CALL IOVXXX(W(1,20  ),W(1,4   ),W(1,6   ),GG ,AMP(9   ))             
      CALL FVOXXX(W(1,4   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,6   ),GG ,AMP(10  ))             
      CALL IOVXXX(W(1,17  ),W(1,15  ),W(1,6   ),GG ,AMP(11  ))             
      CALL VVVXXX(W(1,6   ),W(1,19  ),W(1,8   ),G ,AMP(12  ))              
      JAMP(   1) = -AMP(   1)-AMP(   6)-AMP(   7)-AMP(  11)-AMP(  12)
      JAMP(   2) = -AMP(   2)-AMP(   5)+AMP(   6)-AMP(   8)+AMP(  12)
      JAMP(   3) = -AMP(   3)-AMP(   9)
      JAMP(   4) = -AMP(   4)-AMP(  10)
      UDB_WPBBBG = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          UDB_WPBBBG =UDB_WPBBBG+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SDBU_WPBBBG(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : d~ u -> w+ b b~ g  
C  
C Crossing   1 is d~ u -> w+ b b~ g  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 DBU_WPBBBG
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=DBU_WPBBBG(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION DBU_WPBBBG(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : d~ u -> w+ b b~ g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  21, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,   -1,   -2,    7/                
C               T[ 4, 2]T[ 1, 5, 6]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /    -1,    8,    7,   -2/                
C               T[ 4, 2, 6]T[ 1, 5]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /    -2,    7,    8,   -1/                
C               T[ 1, 5]T[ 4, 2, 6]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /     7,   -2,   -1,    8/                
C               T[ 4, 2]T[ 1, 5, 6]                                        
C ----------
C BEGIN CODE
C ----------
      CALL OXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL VXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL FVIXXX(W(1,2   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVIXXX(W(1,7   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL IOVXXX(W(1,9   ),W(1,1   ),W(1,6   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,1   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL FVOXXX(W(1,10  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,2   ),W(1,11  ),W(1,6   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,7   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVIXXX(W(1,5   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,13  ),W(1,4   ),W(1,6   ),GG ,AMP(3   ))             
      CALL FVOXXX(W(1,4   ),W(1,12  ),GG ,BMASS   ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,5   ),W(1,14  ),W(1,6   ),GG ,AMP(4   ))             
      CALL IOVXXX(W(1,7   ),W(1,10  ),W(1,6   ),GG ,AMP(5   ))             
      CALL VVVXXX(W(1,6   ),W(1,12  ),W(1,8   ),G ,AMP(6   ))              
      CALL FVIXXX(W(1,2   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL FVIXXX(W(1,15  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,16  ),W(1,1   ),W(1,6   ),GG ,AMP(7   ))             
      CALL FVOXXX(W(1,1   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL FVOXXX(W(1,17  ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,2   ),W(1,18  ),W(1,6   ),GG ,AMP(8   ))             
      CALL JIOXXX(W(1,2   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVIXXX(W(1,5   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,20  ))     
      CALL IOVXXX(W(1,20  ),W(1,4   ),W(1,6   ),GG ,AMP(9   ))             
      CALL FVOXXX(W(1,4   ),W(1,19  ),GG ,BMASS   ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,5   ),W(1,21  ),W(1,6   ),GG ,AMP(10  ))             
      CALL IOVXXX(W(1,15  ),W(1,17  ),W(1,6   ),GG ,AMP(11  ))             
      CALL VVVXXX(W(1,6   ),W(1,19  ),W(1,8   ),G ,AMP(12  ))              
      JAMP(   1) = +AMP(   1)-AMP(   6)+AMP(   7)+AMP(  11)-AMP(  12)
      JAMP(   2) = +AMP(   2)+AMP(   5)+AMP(   6)+AMP(   8)+AMP(  12)
      JAMP(   3) = +AMP(   3)+AMP(   9)
      JAMP(   4) = +AMP(   4)+AMP(  10)
      DBU_WPBBBG = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          DBU_WPBBBG =DBU_WPBBBG+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SGD_WMBBBU(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g d -> w- b b~ u  
C  
C Crossing   1 is g d -> w- b b~ u  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 GD_WMBBBU
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=GD_WMBBBU(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION GD_WMBBBU(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : g d -> w- b b~ u  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  24, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,    7,   -2,   -1/                
C               T[ 6, 5, 1]T[ 4, 2]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /     7,    8,   -1,   -2/                
C               T[ 4, 2]T[ 6, 5, 1]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /    -2,   -1,    8,    7/                
C               T[ 6, 5]T[ 4, 2, 1]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /    -1,   -2,    7,    8/                
C               T[ 6, 5]T[ 4, 2, 1]                                        
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL FVIXXX(W(1,5   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,7   ))     
      CALL JIOXXX(W(1,7   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVIXXX(W(1,2   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,3   ),GWF ,AMP(1   ))            
      CALL FVIXXX(W(1,2   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,11  ))     
      CALL FVIXXX(W(1,10  ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL IOVXXX(W(1,12  ),W(1,6   ),W(1,1   ),GG ,AMP(3   ))             
      CALL JVVXXX(W(1,11  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,13  ))      
      CALL FVIXXX(W(1,2   ),W(1,13  ),GG ,ZERO    ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,3   ),GWF ,AMP(4   ))            
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,13  ),GG ,AMP(5   ))             
      CALL FVIXXX(W(1,10  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL IOVXXX(W(1,15  ),W(1,6   ),W(1,11  ),GG ,AMP(6   ))             
      CALL FVOXXX(W(1,4   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,16  ))     
      CALL JIOXXX(W(1,5   ),W(1,16  ),GG ,ZERO    ,ZERO    ,W(1,17  ))     
      CALL FVIXXX(W(1,2   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,18  ),W(1,6   ),W(1,3   ),GWF ,AMP(7   ))            
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,17  ),GG ,AMP(8   ))             
      CALL FVIXXX(W(1,2   ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVIXXX(W(1,19  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,20  ),W(1,6   ),W(1,1   ),GG ,AMP(9   ))             
      CALL FVIXXX(W(1,19  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,3   ),GWF ,AMP(10  ))            
      CALL FVIXXX(W(1,2   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL FVIXXX(W(1,22  ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,23  ),W(1,6   ),W(1,3   ),GWF ,AMP(11  ))            
      CALL FVIXXX(W(1,22  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,6   ),W(1,11  ),GG ,AMP(12  ))             
      JAMP(   1) = -AMP(   1)-AMP(   2)+AMP(   5)
      JAMP(   2) = -AMP(   3)+AMP(   4)-AMP(   9)-AMP(  10)
      JAMP(   3) = -AMP(   4)-AMP(   6)-AMP(  11)-AMP(  12)
      JAMP(   4) = -AMP(   5)-AMP(   7)-AMP(   8)
      GD_WMBBBU = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          GD_WMBBBU =GD_WMBBBU+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SDG_WMBBBU(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : d g -> w- b b~ u  
C  
C Crossing   1 is d g -> w- b b~ u  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 DG_WMBBBU
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=DG_WMBBBU(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION DG_WMBBBU(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : d g -> w- b b~ u  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  24, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,    7,   -1,   -2/                
C               T[ 4, 1]T[ 6, 5, 2]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /     7,    8,   -2,   -1/                
C               T[ 6, 5, 2]T[ 4, 1]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /    -1,   -2,    8,    7/                
C               T[ 6, 5]T[ 4, 1, 2]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /    -2,   -1,    7,    8/                
C               T[ 6, 5]T[ 4, 1, 2]                                        
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL FVIXXX(W(1,1   ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVIXXX(W(1,8   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,2   ),GG ,AMP(1   ))             
      CALL FVIXXX(W(1,8   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,3   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,11  ))     
      CALL JIOXXX(W(1,11  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVIXXX(W(1,1   ),W(1,12  ),GG ,ZERO    ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,13  ),W(1,6   ),W(1,3   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,1   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,12  ),GG ,AMP(4   ))             
      CALL FVIXXX(W(1,14  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL IOVXXX(W(1,15  ),W(1,6   ),W(1,2   ),GG ,AMP(5   ))             
      CALL JVVXXX(W(1,7   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,16  ))      
      CALL FVIXXX(W(1,1   ),W(1,16  ),GG ,ZERO    ,ZERO    ,W(1,17  ))     
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,3   ),GWF ,AMP(6   ))            
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,16  ),GG ,AMP(7   ))             
      CALL FVIXXX(W(1,14  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,18  ),W(1,6   ),W(1,7   ),GG ,AMP(8   ))             
      CALL FVOXXX(W(1,4   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,19  ))     
      CALL JIOXXX(W(1,5   ),W(1,19  ),GG ,ZERO    ,ZERO    ,W(1,20  ))     
      CALL FVIXXX(W(1,1   ),W(1,20  ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,3   ),GWF ,AMP(9   ))            
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,20  ),GG ,AMP(10  ))             
      CALL FVIXXX(W(1,1   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL FVIXXX(W(1,22  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,23  ),W(1,6   ),W(1,3   ),GWF ,AMP(11  ))            
      CALL FVIXXX(W(1,22  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,6   ),W(1,7   ),GG ,AMP(12  ))             
      JAMP(   1) = -AMP(   1)-AMP(   2)-AMP(   5)+AMP(   6)
      JAMP(   2) = -AMP(   3)-AMP(   4)+AMP(   7)
      JAMP(   3) = -AMP(   6)-AMP(   8)-AMP(  11)-AMP(  12)
      JAMP(   4) = -AMP(   7)-AMP(   9)-AMP(  10)
      DG_WMBBBU = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          DG_WMBBBU =DG_WMBBBU+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SGUB_WMBBBDB(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g u~ -> w- b b~ d~  
C  
C Crossing   1 is g u~ -> w- b b~ d~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 GUB_WMBBBDB
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=GUB_WMBBBDB(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION GUB_WMBBBDB(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : g u~ -> w- b b~ d~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  24, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,   -2,    7,   -1/                
C               T[ 4, 6]T[ 2, 5, 1]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /    -2,    8,   -1,    7/                
C               T[ 4, 6, 1]T[ 2, 5]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /     7,   -1,    8,   -2/                
C               T[ 4, 6]T[ 2, 5, 1]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /    -1,    7,   -2,    8/                
C               T[ 2, 5]T[ 4, 6, 1]                                        
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL IXXXXX(P(0,6   ),ZERO ,NHEL(6   ),-1*IC(6   ),W(1,6   ))        
      CALL FVIXXX(W(1,5   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,7   ))     
      CALL JIOXXX(W(1,7   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVOXXX(W(1,2   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,3   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,8   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,11  ))     
      CALL FVOXXX(W(1,10  ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL IOVXXX(W(1,6   ),W(1,12  ),W(1,1   ),GG ,AMP(3   ))             
      CALL JVVXXX(W(1,11  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,13  ))      
      CALL FVOXXX(W(1,2   ),W(1,13  ),GG ,ZERO    ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,3   ),GWF ,AMP(4   ))            
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,13  ),GG ,AMP(5   ))             
      CALL FVOXXX(W(1,10  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL IOVXXX(W(1,6   ),W(1,15  ),W(1,11  ),GG ,AMP(6   ))             
      CALL FVOXXX(W(1,4   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,16  ))     
      CALL JIOXXX(W(1,5   ),W(1,16  ),GG ,ZERO    ,ZERO    ,W(1,17  ))     
      CALL FVOXXX(W(1,2   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,6   ),W(1,18  ),W(1,3   ),GWF ,AMP(7   ))            
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,17  ),GG ,AMP(8   ))             
      CALL FVOXXX(W(1,2   ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVOXXX(W(1,19  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,6   ),W(1,20  ),W(1,1   ),GG ,AMP(9   ))             
      CALL FVOXXX(W(1,19  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,6   ),W(1,21  ),W(1,3   ),GWF ,AMP(10  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL FVOXXX(W(1,22  ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,6   ),W(1,23  ),W(1,3   ),GWF ,AMP(11  ))            
      CALL FVOXXX(W(1,22  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,6   ),W(1,24  ),W(1,11  ),GG ,AMP(12  ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)-AMP(   5)
      JAMP(   2) = +AMP(   3)+AMP(   4)+AMP(   9)+AMP(  10)
      JAMP(   3) = -AMP(   4)+AMP(   6)+AMP(  11)+AMP(  12)
      JAMP(   4) = +AMP(   5)+AMP(   7)+AMP(   8)
      GUB_WMBBBDB = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          GUB_WMBBBDB =GUB_WMBBBDB+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SUBG_WMBBBDB(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u~ g -> w- b b~ d~  
C  
C Crossing   1 is u~ g -> w- b b~ d~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 UBG_WMBBBDB
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=UBG_WMBBBDB(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION UBG_WMBBBDB(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u~ g -> w- b b~ d~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  24, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,   -2,   -1,    7/                
C               T[ 4, 6, 2]T[ 1, 5]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /    -2,    8,    7,   -1/                
C               T[ 4, 6]T[ 1, 5, 2]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /    -1,    7,    8,   -2/                
C               T[ 4, 6]T[ 1, 5, 2]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /     7,   -1,   -2,    8/                
C               T[ 1, 5]T[ 4, 6, 2]                                        
C ----------
C BEGIN CODE
C ----------
      CALL OXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL IXXXXX(P(0,6   ),ZERO ,NHEL(6   ),-1*IC(6   ),W(1,6   ))        
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL FVOXXX(W(1,1   ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVOXXX(W(1,8   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,2   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,8   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,3   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,11  ))     
      CALL JIOXXX(W(1,11  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVOXXX(W(1,1   ),W(1,12  ),GG ,ZERO    ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,6   ),W(1,13  ),W(1,3   ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,1   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,12  ),GG ,AMP(4   ))             
      CALL FVOXXX(W(1,14  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL IOVXXX(W(1,6   ),W(1,15  ),W(1,2   ),GG ,AMP(5   ))             
      CALL JVVXXX(W(1,7   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,16  ))      
      CALL FVOXXX(W(1,1   ),W(1,16  ),GG ,ZERO    ,ZERO    ,W(1,17  ))     
      CALL IOVXXX(W(1,6   ),W(1,17  ),W(1,3   ),GWF ,AMP(6   ))            
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,16  ),GG ,AMP(7   ))             
      CALL FVOXXX(W(1,14  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,6   ),W(1,18  ),W(1,7   ),GG ,AMP(8   ))             
      CALL FVOXXX(W(1,4   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,19  ))     
      CALL JIOXXX(W(1,5   ),W(1,19  ),GG ,ZERO    ,ZERO    ,W(1,20  ))     
      CALL FVOXXX(W(1,1   ),W(1,20  ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,6   ),W(1,21  ),W(1,3   ),GWF ,AMP(9   ))            
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,20  ),GG ,AMP(10  ))             
      CALL FVOXXX(W(1,1   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL FVOXXX(W(1,22  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,6   ),W(1,23  ),W(1,3   ),GWF ,AMP(11  ))            
      CALL FVOXXX(W(1,22  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,6   ),W(1,24  ),W(1,7   ),GG ,AMP(12  ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)+AMP(   5)+AMP(   6)
      JAMP(   2) = +AMP(   3)+AMP(   4)-AMP(   7)
      JAMP(   3) = -AMP(   6)+AMP(   8)+AMP(  11)+AMP(  12)
      JAMP(   4) = +AMP(   7)+AMP(   9)+AMP(  10)
      UBG_WMBBBDB = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          UBG_WMBBBDB =UBG_WMBBBDB+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SGU_WPBBBD(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g u -> w+ b b~ d  
C  
C Crossing   1 is g u -> w+ b b~ d  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 GU_WPBBBD
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=GU_WPBBBD(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION GU_WPBBBD(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : g u -> w+ b b~ d  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  24, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,    7,   -2,   -1/                
C               T[ 6, 5, 1]T[ 4, 2]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /     7,    8,   -1,   -2/                
C               T[ 4, 2]T[ 6, 5, 1]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /    -2,   -1,    8,    7/                
C               T[ 6, 5]T[ 4, 2, 1]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /    -1,   -2,    7,    8/                
C               T[ 6, 5]T[ 4, 2, 1]                                        
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL FVIXXX(W(1,5   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,7   ))     
      CALL JIOXXX(W(1,7   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVIXXX(W(1,2   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,3   ),GWF ,AMP(1   ))            
      CALL FVIXXX(W(1,2   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,8   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,11  ))     
      CALL FVIXXX(W(1,10  ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL IOVXXX(W(1,12  ),W(1,6   ),W(1,1   ),GG ,AMP(3   ))             
      CALL JVVXXX(W(1,11  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,13  ))      
      CALL FVIXXX(W(1,2   ),W(1,13  ),GG ,ZERO    ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,3   ),GWF ,AMP(4   ))            
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,13  ),GG ,AMP(5   ))             
      CALL FVIXXX(W(1,10  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL IOVXXX(W(1,15  ),W(1,6   ),W(1,11  ),GG ,AMP(6   ))             
      CALL FVOXXX(W(1,4   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,16  ))     
      CALL JIOXXX(W(1,5   ),W(1,16  ),GG ,ZERO    ,ZERO    ,W(1,17  ))     
      CALL FVIXXX(W(1,2   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,18  ),W(1,6   ),W(1,3   ),GWF ,AMP(7   ))            
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,17  ),GG ,AMP(8   ))             
      CALL FVIXXX(W(1,2   ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVIXXX(W(1,19  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,20  ),W(1,6   ),W(1,1   ),GG ,AMP(9   ))             
      CALL FVIXXX(W(1,19  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,3   ),GWF ,AMP(10  ))            
      CALL FVIXXX(W(1,2   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL FVIXXX(W(1,22  ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,23  ),W(1,6   ),W(1,3   ),GWF ,AMP(11  ))            
      CALL FVIXXX(W(1,22  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,6   ),W(1,11  ),GG ,AMP(12  ))             
      JAMP(   1) = -AMP(   1)-AMP(   2)+AMP(   5)
      JAMP(   2) = -AMP(   3)+AMP(   4)-AMP(   9)-AMP(  10)
      JAMP(   3) = -AMP(   4)-AMP(   6)-AMP(  11)-AMP(  12)
      JAMP(   4) = -AMP(   5)-AMP(   7)-AMP(   8)
      GU_WPBBBD = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          GU_WPBBBD =GU_WPBBBD+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SUG_WPBBBD(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u g -> w+ b b~ d  
C  
C Crossing   1 is u g -> w+ b b~ d  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 UG_WPBBBD
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=UG_WPBBBD(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION UG_WPBBBD(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u g -> w+ b b~ d  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  24, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,    7,   -1,   -2/                
C               T[ 4, 1]T[ 6, 5, 2]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /     7,    8,   -2,   -1/                
C               T[ 6, 5, 2]T[ 4, 1]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /    -1,   -2,    8,    7/                
C               T[ 6, 5]T[ 4, 1, 2]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /    -2,   -1,    7,    8/                
C               T[ 6, 5]T[ 4, 1, 2]                                        
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL OXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL FVIXXX(W(1,1   ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVIXXX(W(1,8   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,9   ),W(1,6   ),W(1,2   ),GG ,AMP(1   ))             
      CALL FVIXXX(W(1,8   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL IOVXXX(W(1,10  ),W(1,6   ),W(1,3   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,11  ))     
      CALL JIOXXX(W(1,11  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVIXXX(W(1,1   ),W(1,12  ),GG ,ZERO    ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,13  ),W(1,6   ),W(1,3   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,1   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,12  ),GG ,AMP(4   ))             
      CALL FVIXXX(W(1,14  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL IOVXXX(W(1,15  ),W(1,6   ),W(1,2   ),GG ,AMP(5   ))             
      CALL JVVXXX(W(1,7   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,16  ))      
      CALL FVIXXX(W(1,1   ),W(1,16  ),GG ,ZERO    ,ZERO    ,W(1,17  ))     
      CALL IOVXXX(W(1,17  ),W(1,6   ),W(1,3   ),GWF ,AMP(6   ))            
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,16  ),GG ,AMP(7   ))             
      CALL FVIXXX(W(1,14  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,18  ),W(1,6   ),W(1,7   ),GG ,AMP(8   ))             
      CALL FVOXXX(W(1,4   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,19  ))     
      CALL JIOXXX(W(1,5   ),W(1,19  ),GG ,ZERO    ,ZERO    ,W(1,20  ))     
      CALL FVIXXX(W(1,1   ),W(1,20  ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,21  ),W(1,6   ),W(1,3   ),GWF ,AMP(9   ))            
      CALL IOVXXX(W(1,14  ),W(1,6   ),W(1,20  ),GG ,AMP(10  ))             
      CALL FVIXXX(W(1,1   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL FVIXXX(W(1,22  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,23  ),W(1,6   ),W(1,3   ),GWF ,AMP(11  ))            
      CALL FVIXXX(W(1,22  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,24  ),W(1,6   ),W(1,7   ),GG ,AMP(12  ))             
      JAMP(   1) = -AMP(   1)-AMP(   2)-AMP(   5)+AMP(   6)
      JAMP(   2) = -AMP(   3)-AMP(   4)+AMP(   7)
      JAMP(   3) = -AMP(   6)-AMP(   8)-AMP(  11)-AMP(  12)
      JAMP(   4) = -AMP(   7)-AMP(   9)-AMP(  10)
      UG_WPBBBD = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          UG_WPBBBD =UG_WPBBBD+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SGDB_WPBBBUB(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g d~ -> w+ b b~ u~  
C  
C Crossing   1 is g d~ -> w+ b b~ u~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 GDB_WPBBBUB
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=GDB_WPBBBUB(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION GDB_WPBBBUB(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : g d~ -> w+ b b~ u~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  24, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,   -2,    7,   -1/                
C               T[ 4, 6]T[ 2, 5, 1]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /    -2,    8,   -1,    7/                
C               T[ 4, 6, 1]T[ 2, 5]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /     7,   -1,    8,   -2/                
C               T[ 4, 6]T[ 2, 5, 1]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /    -1,    7,   -2,    8/                
C               T[ 2, 5]T[ 4, 6, 1]                                        
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL IXXXXX(P(0,6   ),ZERO ,NHEL(6   ),-1*IC(6   ),W(1,6   ))        
      CALL FVIXXX(W(1,5   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,7   ))     
      CALL JIOXXX(W(1,7   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVOXXX(W(1,2   ),W(1,8   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,3   ),GWF ,AMP(1   ))            
      CALL FVOXXX(W(1,2   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,8   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,11  ))     
      CALL FVOXXX(W(1,10  ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL IOVXXX(W(1,6   ),W(1,12  ),W(1,1   ),GG ,AMP(3   ))             
      CALL JVVXXX(W(1,11  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,13  ))      
      CALL FVOXXX(W(1,2   ),W(1,13  ),GG ,ZERO    ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,3   ),GWF ,AMP(4   ))            
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,13  ),GG ,AMP(5   ))             
      CALL FVOXXX(W(1,10  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL IOVXXX(W(1,6   ),W(1,15  ),W(1,11  ),GG ,AMP(6   ))             
      CALL FVOXXX(W(1,4   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,16  ))     
      CALL JIOXXX(W(1,5   ),W(1,16  ),GG ,ZERO    ,ZERO    ,W(1,17  ))     
      CALL FVOXXX(W(1,2   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,6   ),W(1,18  ),W(1,3   ),GWF ,AMP(7   ))            
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,17  ),GG ,AMP(8   ))             
      CALL FVOXXX(W(1,2   ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,19  ))     
      CALL FVOXXX(W(1,19  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,6   ),W(1,20  ),W(1,1   ),GG ,AMP(9   ))             
      CALL FVOXXX(W(1,19  ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,6   ),W(1,21  ),W(1,3   ),GWF ,AMP(10  ))            
      CALL FVOXXX(W(1,2   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL FVOXXX(W(1,22  ),W(1,11  ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,6   ),W(1,23  ),W(1,3   ),GWF ,AMP(11  ))            
      CALL FVOXXX(W(1,22  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,6   ),W(1,24  ),W(1,11  ),GG ,AMP(12  ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)-AMP(   5)
      JAMP(   2) = +AMP(   3)+AMP(   4)+AMP(   9)+AMP(  10)
      JAMP(   3) = -AMP(   4)+AMP(   6)+AMP(  11)+AMP(  12)
      JAMP(   4) = +AMP(   5)+AMP(   7)+AMP(   8)
      GDB_WPBBBUB = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          GDB_WPBBBUB =GDB_WPBBBUB+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
c
      SUBROUTINE SDBG_WPBBBUB(P1,ANS)
C  
C Generated by MadGraph II                                              
C MadGraph StandAlone Version
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : d~ g -> w+ b b~ u~  
C  
C Crossing   1 is d~ g -> w+ b b~ u~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      include "nexternal_2to4.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  96, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 DBG_WPBBBUB
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      DATA NTRY/0/
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) /-1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) /-1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) /-1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) /-1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) /-1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) /-1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) /-1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) /-1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1,-1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1,-1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1,-1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1,-1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1,-1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1,-1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1,-1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1,-1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  65),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  66),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  67),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  68),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  69),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  70),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  71),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  72),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  73),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  74),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  75),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  76),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  77),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  78),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  79),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  80),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  81),IHEL=1, 6) / 1, 1, 0,-1,-1,-1/
      DATA (NHEL(IHEL,  82),IHEL=1, 6) / 1, 1, 0,-1,-1, 1/
      DATA (NHEL(IHEL,  83),IHEL=1, 6) / 1, 1, 0,-1, 1,-1/
      DATA (NHEL(IHEL,  84),IHEL=1, 6) / 1, 1, 0,-1, 1, 1/
      DATA (NHEL(IHEL,  85),IHEL=1, 6) / 1, 1, 0, 1,-1,-1/
      DATA (NHEL(IHEL,  86),IHEL=1, 6) / 1, 1, 0, 1,-1, 1/
      DATA (NHEL(IHEL,  87),IHEL=1, 6) / 1, 1, 0, 1, 1,-1/
      DATA (NHEL(IHEL,  88),IHEL=1, 6) / 1, 1, 0, 1, 1, 1/
      DATA (NHEL(IHEL,  89),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  90),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  91),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  92),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  93),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  94),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  95),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  96),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
      ANS(IPROC) = 0D0
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=DBG_WPBBBUB(P ,NHEL(1,IHEL),JC(1))            
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
               ENDIF
             ENDIF
          ENDDO
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION DBG_WPBBBUB(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : d~ g -> w+ b b~ u~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  12,NEIGEN=  4) 
      include "nexternal_2to4.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  24, NCOLOR=   4) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,4  ) /     8,   -2,   -1,    7/                
C               T[ 4, 6, 2]T[ 1, 5]                                        
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,4  ) /    -2,    8,    7,   -1/                
C               T[ 4, 6]T[ 1, 5, 2]                                        
      DATA Denom(3  )/            3/                                       
      DATA (CF(i,3  ),i=1  ,4  ) /    -1,    7,    8,   -2/                
C               T[ 4, 6]T[ 1, 5, 2]                                        
      DATA Denom(4  )/            3/                                       
      DATA (CF(i,4  ),i=1  ,4  ) /     7,   -1,   -2,    8/                
C               T[ 1, 5]T[ 4, 6, 2]                                        
C ----------
C BEGIN CODE
C ----------
      CALL OXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL VXXXXX(P(0,3   ),WMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL OXXXXX(P(0,4   ),BMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL IXXXXX(P(0,6   ),ZERO ,NHEL(6   ),-1*IC(6   ),W(1,6   ))        
      CALL JIOXXX(W(1,5   ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL FVOXXX(W(1,1   ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL FVOXXX(W(1,8   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,2   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,8   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,3   ),GWF ,AMP(2   ))            
      CALL FVIXXX(W(1,5   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,11  ))     
      CALL JIOXXX(W(1,11  ),W(1,4   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL FVOXXX(W(1,1   ),W(1,12  ),GG ,ZERO    ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,6   ),W(1,13  ),W(1,3   ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,1   ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,12  ),GG ,AMP(4   ))             
      CALL FVOXXX(W(1,14  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,15  ))     
      CALL IOVXXX(W(1,6   ),W(1,15  ),W(1,2   ),GG ,AMP(5   ))             
      CALL JVVXXX(W(1,7   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,16  ))      
      CALL FVOXXX(W(1,1   ),W(1,16  ),GG ,ZERO    ,ZERO    ,W(1,17  ))     
      CALL IOVXXX(W(1,6   ),W(1,17  ),W(1,3   ),GWF ,AMP(6   ))            
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,16  ),GG ,AMP(7   ))             
      CALL FVOXXX(W(1,14  ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL IOVXXX(W(1,6   ),W(1,18  ),W(1,7   ),GG ,AMP(8   ))             
      CALL FVOXXX(W(1,4   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,19  ))     
      CALL JIOXXX(W(1,5   ),W(1,19  ),GG ,ZERO    ,ZERO    ,W(1,20  ))     
      CALL FVOXXX(W(1,1   ),W(1,20  ),GG ,ZERO    ,ZERO    ,W(1,21  ))     
      CALL IOVXXX(W(1,6   ),W(1,21  ),W(1,3   ),GWF ,AMP(9   ))            
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,20  ),GG ,AMP(10  ))             
      CALL FVOXXX(W(1,1   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,22  ))     
      CALL FVOXXX(W(1,22  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,23  ))     
      CALL IOVXXX(W(1,6   ),W(1,23  ),W(1,3   ),GWF ,AMP(11  ))            
      CALL FVOXXX(W(1,22  ),W(1,3   ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,6   ),W(1,24  ),W(1,7   ),GG ,AMP(12  ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)+AMP(   5)+AMP(   6)
      JAMP(   2) = +AMP(   3)+AMP(   4)-AMP(   7)
      JAMP(   3) = -AMP(   6)+AMP(   8)+AMP(  11)+AMP(  12)
      JAMP(   4) = +AMP(   7)+AMP(   9)+AMP(  10)
      DBG_WPBBBUB = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          DBG_WPBBBUB =DBG_WPBBBUB+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

