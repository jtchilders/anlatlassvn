display2d:false;
nolabels:true;
/*   writefile("soft.log");   */

t2:1-t1;

/* Calcolo del diagramma di Born.
   Omettiamo per ora il fattore 1/(2*s) 1/(2-2*ep)^2 1/D_A^2 di flusso, 
   media sugli spin dei gluoni iniziale, e media sul colore; omettiamo 
   inoltre il fattore C_F*N_C che c'e' sempre nel calcolo del colore. 
   Percio', per ottenere la sezione d'urto di Born dobbiamo moltiplicare per
        
                     1/(8*s*(1-ep)^2) T_F/D_A
   
   che in quattro dimensioni da' 

                       1/(16*(N_C^2-1)*s). 
*/

born1:
8*t1*(t1^2+3*t2^2)/t2+8*ep^2*t1/t2-16*ep*t1/t2-2*ro*(8*t2^2-6*t2+ro)/t2^2$
born2:8*(-4*t2*t1-(1-ep)*ep+1)-2*ro*(-8*t2*t1+ro+1)/(t2*t1)$
born3:-(2*ro*(t1-t2)/t2+8*(2*t2-ep)*t1)$
born4:-16*(ep-1)*t2*t1$
born:(vcf-vca*t2*t1)*
(-8*(ep-1)*(t1^2+t2^2-ep)/(t2*t1)-2*ro*(ro-4*t2*t1)/(t2^2*t1^2))$
born0:subst(ep=0,born)$

bbb:born1+born4+2*born3$
bbbt:subst(t1=t2,bbb)$
ccc:2*(born2-(born3+subst(t1=t2,born3))-born4)$

/* Calcolo del termine soffice:  */

mm:born*
(vca/2*(i[1,q]+i[2,q]+i[1,qb]+i[2,qb]-i[q,qb])
-vcf/2*(i[q,q]+i[qb,qb]-2*i[q,qb])   )
-vca/2*(vcf-vca/2)*i[q,qb]*(bbb+bbbt+ccc)$
mmt1:(vca/2)^2*bbb*(i[1,2]-i[2,qb]-i[1,q])$
mmt2:(vca/2)^2*bbbt*(i[1,2]-i[1,qb]-i[2,q])$
mm:mm+mmt1+mmt2$
mm:mm*2$

/* Esprimiamo i fattori iconali i[.,.] in termini degli invarianti 
ro, t1 e t2 definiti nel lavoro di Paolo.
Raccogliamo (e per il momento omettiamo) il fattore 4/s/(1-x)^2. Eseguiamo
gli integrali in y e theta_2.
vlpm=log((1+b)/(1-b))
vlsm=log(4/ro)               */

vltm:vlsm+lt1$ 
vlwm:vlsm+lt2$

/* integrale di 1/(uk*tk) s^2*(1-x)^2/4 = 1/(1-y^2) */
j[uk,tk]:-pi/ep$   
j[uk,tk]:-pi/ep*(1-ep*vlsmu)$   

/* integrale di 1/(tk*w1) s^2*(1-x)^2/4 = 1/(1-y) * 1/(1-kk.eta)
   con kk = kappa(cos(al),0 perp) , eta = (y,eta perp), |eta|=1      
   cos(al) = (1-2*t1)/b
   kappa   = b                      */
j[tk,w1]:pi/(2*t1)*( -1/ep*(1-ep*vlsmu) + vltm + lt1 -ep*( 1/2*vlpm^2+2*softt1))$
j[tk,w1]:pi/(2*t1)*( -1/ep*(1-ep*vlsmu) + vltm + lt1)$

/*  Spiegazione dei simboli:
softt1=ddilog(1-2*t1/(1-b))+ddilog(1-2*t1/(1+b))+
       log(2*t1/(1+b))*log(2*t1/(1-b)),
softt2=ddilog(1-2*t2/(1-b))+ddilog(1-2*t2/(1+b))+
       log(2*t2/(1+b))*log(2*t2/(1-b)),
softb=ddilog(2*b/(1+b))-ddilog(-2*b/(1-b))
*/

/* integrale di 1/(tk*w1) s^2*(1-x)^2/4 = 1/(1-y) * 1/(1-kk.eta)
   con kk = kappa(cos(al),0 perp) , eta = (y,eta perp), |eta|=1      
   cos(al) = (1-2*t2)/b
   kappa   = b                      */
j[uk,w1]:pi/(2*t2)*( -1/ep*(1-ep*vlsmu) + vlwm + lt2 -ep*( 1/2*vlpm^2+2*softt2))$
j[uk,w1]:pi/(2*t2)*( -1/ep*(1-ep*vlsmu) + vlwm + lt2)$

j[tk,w2]:j[uk,w1]$
j[uk,w2]:j[tk,w1]$
j[w1,w1]:2*pi/ro*(  1+ep/b*vlpm )$
j[w1,w1]:2*pi/ro*(  1 )$
j[w2,w2]:j[w1,w1]$
j[w1,w2]:pi/b*(  vlpm+ep*softb  )$
j[w1,w2]:pi/b*(  vlpm  )$

mm:subst([i[1,q]=2*t1*j[tk,w1],
          i[2,q]=2*t2*j[uk,w1],
          i[1,qb]=2*t2*j[tk,w2],
          i[2,qb]=2*t1*j[uk,w2],
          i[1,2]=2*j[uk,tk],
          i[q,q]=ro*j[w1,w1],
          i[qb,qb]=ro*j[w2,w2],
          i[q,qb]=2*(1-ro/2)*j[w1,w2]  ],mm)$

/* Per ottenere d sigma soft (da sommare alla parte virtuale)
occorre moltiplicare mm per:
1) il fattore di spazio delle fasi H*N*s^(1-ep)/(2*pi) d Phi_2
2) il fattore che proviene dallo sviluppo di (1-x)^(-1-2*ep):
   -b^-(4*ep)/(2*ep)
3) il fattore 4/s omesso in precedenza
4) il fattore g^6 mu^(2*ep)
5) il fattore 1/(8*s*(1-ep)^2) T_F/D_A (medie varie).

Di tutto cio' omettiamo N d Phi_2, che e' comune a tutti i contributi, e 
sviluppiamo il resto in serie di ep, ricordando che ci sono al massimo 
poli doppi in epsilon.

vlsmu = log(s/mu^2)      */

lb:0;

norm:-zg^6*vtf/vda*1/(8*pi*s)/(1-ep)**2/ep$
/*
      (1-pi^2*ep^2/3)*(1-ep*vlsmu+ep^2*vlsmu^2/2)*
      (1-4*ep*lb+8*ep^2*lb^2)
*/
norm:ratdisrep(taylor(norm,ep,0,1))$

softreal:ratdisrep(taylor(norm*mm,ep,0,0))$

/* Calcolo il controtermine collineare:  */

b0:(11*vca-4*nlf*vtf)/3$
softct:2*zg^6*born/(8*s*(1-ep)^2)*vtf/vda*(b0+8*vca*lb)/ep$
softct:ratdisrep(taylor(softct,ep,0,0))$

/* Calcolo le parti divergenti del contributo virtuale:  */

totdel2    [   1    ]:
4*pi*(8*t1^4-16*t1^3+4*ro*t1^2+12*t1^2-4*ro*t1-4*t1+ro^2)*vca*(vcf+t1^2*vca
-t1*vca)*vtf*zg^6/(s*(t1-1)^2*t1^2*vda)$

totdel1    [   1    ]:
-2*pi*(vcf+t1^2*vca-t1*vca)*vtf*(32*nlf*t1^4*vtf-64*nlf*t1^3*vtf+16*nlf*ro
*t1^2*vtf+48*nlf*t1^2*vtf-16*nlf*ro*t1*vtf-16*nlf*t1*vtf+4*nlf*ro^2*vtf-48*t1
^4*vcf+96*t1^3*vcf-24*ro*t1^2*vcf-72*t1^2*vcf+24*ro*t1*vcf+24*t1*vcf-6*ro^2
*vcf-136*t1^4*vca+272*t1^3*vca-92*ro*t1^2*vca-180*t1^2*vca+92*ro*t1*vca+44*t1
*vca-23*ro^2*vca)*zg^6/(3*s*(t1-1)^2*t1^2*vda)$

totdel1    [   vlpm/b    ]:
pi*(ro-2)*(8*t1^4-16*t1^3+4*ro*t1^2+12*t1^2-4*ro*t1-4*t1+ro^2)*(2*vcf-vca)*
(2*vcf+2*t1^2*vca-2*t1*vca-vca)*vtf*zg^6/(2*s*(t1-1)^2*t1^2*vda)$

totdel1    [   vlsm    ]:
-pi*(2*t1^2-2*t1+1)*(8*t1^4-16*t1^3+4*ro*t1^2+12*t1^2-4*ro*t1-4*t1+ro^2)*vca
^2*vtf*zg^6/(s*(t1-1)^2*t1^2*vda)$

totdel1    [   vltm    ]:
-2*pi*(8*t1^4-16*t1^3+4*ro*t1^2+12*t1^2-4*ro*t1-4*t1+ro^2)*vca*(2*vcf+t1^2
*vca-2*t1*vca)*vtf*zg^6/(s*(t1-1)^2*t1^2*vda)$

totdel1    [   vlwm    ]:
-2*pi*(8*t1^4-16*t1^3+4*ro*t1^2+12*t1^2-4*ro*t1-4*t1+ro^2)*vca*(2*vcf+t1^2
*vca-vca)*vtf*zg^6/(s*(t1-1)^2*t1^2*vda)$   

/* totdel e' normalizzato come segue:
   e' semplicemente l'ampiezza quadra tagliata, senza includere
   lo spazio delle fasi in k1 = d3 k1/(2 k1^0 (2 pi)^3) = d phi1
   percio'
   d sigma = N * totdel/(2*s) * delta(tx) * d phi1 
           = N * totdel/(2*s) * s/(2 pi) * 2 pi delta(s*tx) * d phi1
           = N * totdel/(4 pi) d phi2
*/

softvirt:(totdel2[1]/ep^2+
          (totdel1[1]+totdel1[vlpm/b]*vlpm/b+totdel1[vlsm]*vlsm
          +totdel1[vltm]*vltm+totdel1[vlwm]*vlwm)/ep)*
         (1-ep*(vlsmu-vlsm)+ep^2*(vlsmu-vlsm)^2/2)/(4*pi)$
softvirt:ratdisrep(taylor(softvirt,ep,0,0))$

/* Totale:  */

soft:softreal+softvirt+softct$
/*
res2:subst(ep=0,ep^2*soft)$
res2:ratsimp(res2);
res1:subst(ep=0,ep*soft)$
res1:factor(res1);
*/
res0:subst(ep=0,rat(soft));

res0:factor(
 coefsm(res0,[vlsm,vlsmu,vlpm,lb,lt1,lt2,softt1,softt2,softb,pi]));

map(lambda([z],resoft[last(z)]:first(z)),res0);


kill(t2,vltm,vlwm);

totdel0    [   1    ]:   

-pi*vtf*(256*nlf*t1^6*vcf*vtf-768*nlf*t1^5*vcf*vtf+256*nlf*ro*t1^4*vcf*vtf
+768*nlf*t1^4*vcf*vtf-512*nlf*ro*t1^3*vcf*vtf-256*nlf*t1^3*vcf*vtf+64*nlf*ro
^2*t1^2*vcf*vtf+256*nlf*ro*t1^2*vcf*vtf-64*nlf*ro^2*t1*vcf*vtf+256*nlf*t1^8
*vca*vtf-1024*nlf*t1^7*vca*vtf-24*pi^2*ro^2*t1^6*vca*vtf+192*ro^2*t1^6*vca
*vtf+288*nlf*ro*t1^6*vca*vtf+32*ro*t1^6*vca*vtf+1536*nlf*t1^6*vca*vtf+72*pi
^2*ro^2*t1^5*vca*vtf-576*ro^2*t1^5*vca*vtf-864*nlf*ro*t1^5*vca*vtf-96*ro*t1^5
*vca*vtf-1024*nlf*t1^5*vca*vtf+64*nlf*ro^2*t1^4*vca*vtf-78*pi^2*ro^2*t1^4
*vca*vtf+624*ro^2*t1^4*vca*vtf+872*nlf*ro*t1^4*vca*vtf+104*ro*t1^4*vca*vtf
+256*nlf*t1^4*vca*vtf-128*nlf*ro^2*t1^3*vca*vtf+36*pi^2*ro^2*t1^3*vca*vtf
-288*ro^2*t1^3*vca*vtf-304*nlf*ro*t1^3*vca*vtf-48*ro*t1^3*vca*vtf+64*nlf*ro^2
*t1^2*vca*vtf-6*pi^2*ro^2*t1^2*vca*vtf+48*ro^2*t1^2*vca*vtf+8*nlf*ro*t1^2
*vca*vtf+8*ro*t1^2*vca*vtf-96*pi^2*t1^6*vcf^2-1152*t1^6*vcf^2+288*pi^2*t1^5
*vcf^2+3456*t1^5*vcf^2-8*pi^2*ro^2*t1^4*vcf^2-96*pi^2*ro*t1^4*vcf^2-576*ro
*t1^4*vcf^2-368*pi^2*t1^4*vcf^2-4992*t1^4*vcf^2+16*pi^2*ro^2*t1^3*vcf^2+192
*pi^2*ro*t1^3*vcf^2+1152*ro*t1^3*vcf^2+256*pi^2*t1^3*vcf^2+4224*t1^3*vcf^2
-24*pi^2*ro^2*t1^2*vcf^2-192*ro^2*t1^2*vcf^2-144*pi^2*ro*t1^2*vcf^2-768*ro
*t1^2*vcf^2-80*pi^2*t1^2*vcf^2-1536*t1^2*vcf^2+16*pi^2*ro^2*t1*vcf^2+192*ro
^2*t1*vcf^2+48*pi^2*ro*t1*vcf^2+192*ro*t1*vcf^2-8*pi^2*ro^2*vcf^2-1152*t1^8
*vca*vcf+4608*t1^7*vca*vcf+16*pi^2*ro*t1^6*vca*vcf-768*ro*t1^6*vca*vcf+264
*pi^2*t1^6*vca*vcf-8864*t1^6*vca*vcf-48*pi^2*ro*t1^5*vca*vcf+2304*ro*t1^5
*vca*vcf-792*pi^2*t1^5*vca*vcf+10464*t1^5*vca*vcf+42*pi^2*ro^2*t1^4*vca*vcf
-192*ro^2*t1^4*vca*vcf+124*pi^2*ro*t1^4*vca*vcf-3920*ro*t1^4*vca*vcf+968*pi
^2*t1^4*vca*vcf-6264*t1^4*vca*vcf-84*pi^2*ro^2*t1^3*vca*vcf+384*ro^2*t1^3
*vca*vcf-168*pi^2*ro*t1^3*vca*vcf+4000*ro*t1^3*vca*vcf-616*pi^2*t1^3*vca
*vcf+464*t1^3*vca*vcf+78*pi^2*ro^2*t1^2*vca*vcf-512*ro^2*t1^2*vca*vcf+100
*pi^2*ro*t1^2*vca*vcf-1520*ro*t1^2*vca*vcf+176*pi^2*t1^2*vca*vcf+744*t1^2
*vca*vcf-36*pi^2*ro^2*t1*vca*vcf+320*ro^2*t1*vca*vcf-24*pi^2*ro*t1*vca*vcf
-96*ro*t1*vca*vcf+4*pi^2*ro^2*vca*vcf+160*pi^2*t1^8*vca^2-1088*t1^8*vca^2
-640*pi^2*t1^7*vca^2+4352*t1^7*vca^2+64*pi^2*ro*t1^6*vca^2-1296*ro*t1^6*vca
^2+1004*pi^2*t1^6*vca^2-5952*t1^6*vca^2-192*pi^2*ro*t1^5*vca^2+3888*ro*t1^5
*vca^2-772*pi^2*t1^5*vca^2+2624*t1^5*vca^2+pi^2*ro^2*t1^4*vca^2-320*ro^2*t1
^4*vca^2+214*pi^2*ro*t1^4*vca^2-3772*ro*t1^4*vca^2+260*pi^2*t1^4*vca^2+640
*t1^4*vca^2-2*pi^2*ro^2*t1^3*vca^2+640*ro^2*t1^3*vca^2-108*pi^2*ro*t1^3*vca
^2+1064*ro*t1^3*vca^2+20*pi^2*t1^3*vca^2-576*t1^3*vca^2-3*pi^2*ro^2*t1^2
*vca^2-320*ro^2*t1^2*vca^2+22*pi^2*ro*t1^2*vca^2+116*ro*t1^2*vca^2-32*pi^2
*t1^2*vca^2+4*pi^2*ro^2*t1*vca^2)*zg^6/(12*s*(t1-1)^3*t1^3*vda)   

 ;   

totdel0    [   atinv    ]:   

pi*(2*vcf-t1*vca)*(64*pi^2*t1^5*vcf+192*t1^5*vcf-16*pi^2*ro*t1^4*vcf-128
*pi^2*t1^4*vcf-1152*t1^4*vcf+128*pi^2*ro*t1^3*vcf+240*ro*t1^3*vcf+64*pi^2
*t1^3*vcf+1728*t1^3*vcf-24*pi^2*ro^2*t1^2*vcf+24*ro^2*t1^2*vcf-112*pi^2*ro
*t1^2*vcf-1008*ro*t1^2*vcf+48*pi^2*ro^2*t1*vcf+144*ro^2*t1*vcf-6*pi^2*ro^3
*vcf-32*pi^2*t1^5*vca+8*pi^2*ro*t1^4*vca+64*pi^2*t1^4*vca+1152*t1^4*vca-64
*pi^2*ro*t1^3*vca-288*ro*t1^3*vca-32*pi^2*t1^3*vca-1152*t1^3*vca+12*pi^2
*ro^2*t1^2*vca+56*pi^2*ro*t1^2*vca+576*ro*t1^2*vca-24*pi^2*ro^2*t1*vca-72
*ro^2*t1*vca+3*pi^2*ro^3*vca)*vtf*zg^6/(48*(t1-1)*t1^3*vda)   

 ;   

totdel0    [   auinv    ]:   

-pi*(2*vcf+t1*vca-vca)*(64*pi^2*t1^5*vcf+192*t1^5*vcf+16*pi^2*ro*t1^4*vcf
-192*pi^2*t1^4*vcf+192*t1^4*vcf+64*pi^2*ro*t1^3*vcf+240*ro*t1^3*vcf+192*pi
^2*t1^3*vcf-960*t1^3*vcf+24*pi^2*ro^2*t1^2*vcf-24*ro^2*t1^2*vcf-176*pi^2*ro
*t1^2*vcf+288*ro*t1^2*vcf-64*pi^2*t1^2*vcf-192*t1^2*vcf+192*ro^2*t1*vcf+96
*pi^2*ro*t1*vcf-1296*ro*t1*vcf+1536*t1*vcf+6*pi^2*ro^3*vcf-24*pi^2*ro^2
*vcf-168*ro^2*vcf+768*ro*vcf-768*vcf-32*pi^2*t1^5*vca-8*pi^2*ro*t1^4*vca+96
*pi^2*t1^4*vca-1152*t1^4*vca-32*pi^2*ro*t1^3*vca-288*ro*t1^3*vca-96*pi^2
*t1^3*vca+3456*t1^3*vca-12*pi^2*ro^2*t1^2*vca+88*pi^2*ro*t1^2*vca+288*ro*t1
^2*vca+32*pi^2*t1^2*vca-3456*t1^2*vca-72*ro^2*t1*vca-48*pi^2*ro*t1*vca+288
*ro*t1*vca+1152*t1*vca-3*pi^2*ro^3*vca+12*pi^2*ro^2*vca+72*ro^2*vca-288*ro
*vca)*vtf*zg^6/(48*(t1-1)^3*t1*vda)   

 ;   

totdel0    [   1/b^5    ]:   

-pi^3*(2*t1-1)^2*(4*ro*t1^2+8*t1^2-4*ro*t1-8*t1+3*ro^2-8*ro+8)*vca^2*vtf*zg
^6/(24*s*(t1-1)*t1*vda)   

 ;   

totdel0    [   1/b^4    ]:   

pi*(ro-1)*(2*t1-1)^4*vca^2*vtf*zg^6/(s*(t1-1)*t1*vda)   

 ;   

totdel0    [   1/b^3    ]:   

-pi^3*(16*ro*t1^4-48*t1^4-32*ro*t1^3+96*t1^3-7*ro^2*t1^2+49*ro*t1^2-98*t1^2
+7*ro^2*t1-33*ro*t1+50*t1+ro^3-3*ro^2+6*ro-8)*vca^2*vtf*zg^6/(12*s*(t1-1)*t1
*vda)   

 ;   

totdel0    [   1/b^2    ]:   

pi*(ro-1)*(2*t1-1)^2*vca*(2*vcf-vca)*vtf*zg^6/(s*(t1-1)*t1*vda)   

 ;   

totdel0    [   1/b    ]:   

pi^3*(128*ro*t1^4*vcf^2-224*t1^4*vcf^2-256*ro*t1^3*vcf^2+448*t1^3*vcf^2+40
*ro^2*t1^2*vcf^2+72*ro*t1^2*vcf^2-304*t1^2*vcf^2-40*ro^2*t1*vcf^2+56*ro*t1
*vcf^2+80*t1*vcf^2+12*ro^3*vcf^2-24*ro^2*vcf^2+128*ro*t1^6*vca*vcf-256*t1^6
*vca*vcf-384*ro*t1^5*vca*vcf+768*t1^5*vca*vcf+72*ro^2*t1^4*vca*vcf+200*ro*t1
^4*vca*vcf-696*t1^4*vca*vcf-144*ro^2*t1^3*vca*vcf+240*ro*t1^3*vca*vcf+112*t1
^3*vca*vcf+12*ro^3*t1^2*vca*vcf+16*ro^2*t1^2*vca*vcf-128*ro*t1^2*vca*vcf+136
*t1^2*vca*vcf-12*ro^3*t1*vca*vcf+56*ro^2*t1*vca*vcf-56*ro*t1*vca*vcf-64*t1
*vca*vcf-12*ro^3*vca*vcf+24*ro^2*vca*vcf-64*ro*t1^6*vca^2+64*t1^6*vca^2+192
*ro*t1^5*vca^2-192*t1^5*vca^2-36*ro^2*t1^4*vca^2-133*ro*t1^4*vca^2+158*t1^4
*vca^2+72*ro^2*t1^3*vca^2-54*ro*t1^3*vca^2+4*t1^3*vca^2-6*ro^3*t1^2*vca^2-18
*ro^2*t1^2*vca^2+45*ro*t1^2*vca^2-54*t1^2*vca^2+6*ro^3*t1*vca^2-18*ro^2*t1
*vca^2+14*ro*t1*vca^2+20*t1*vca^2+3*ro^3*vca^2-6*ro^2*vca^2)*vtf*zg^6/(12*s*
(t1-1)^2*t1^2*vda)   

 ;   

totdel0    [   vdmb/b    ]:   

-pi*(ro-2)*(8*t1^4-16*t1^3+4*ro*t1^2+12*t1^2-4*ro*t1-4*t1+ro^2)*(2*vcf-vca)*
(2*vcf+2*t1^2*vca-2*t1*vca-vca)*vtf*zg^6/(s*(t1-1)^2*t1^2*vda)   

 ;   

totdel0    [   vdmp/b^5    ]:   

-pi*(2*t1-1)^2*(4*ro*t1^2+8*t1^2-4*ro*t1-8*t1+3*ro^2-8*ro+8)*vca^2*vtf*zg^6/
(2*s*(t1-1)*t1*vda)   

 ;   

totdel0    [   vdmp/b^3    ]:   

-pi*(16*ro*t1^4-48*t1^4-32*ro*t1^3+96*t1^3-7*ro^2*t1^2+49*ro*t1^2-98*t1^2+7
*ro^2*t1-33*ro*t1+50*t1+ro^3-3*ro^2+6*ro-8)*vca^2*vtf*zg^6/(s*(t1-1)*t1*vda)   

 ;   

totdel0    [   vdmp/b    ]:   

pi*(32*t1^4*vcf^2-64*t1^3*vcf^2-24*ro^2*t1^2*vcf^2+8*ro*t1^2*vcf^2+80*t1^2
*vcf^2+24*ro^2*t1*vcf^2-8*ro*t1*vcf^2-48*t1*vcf^2-4*ro^3*vcf^2+8*ro^2*vcf^2+8
*ro^2*t1^4*vca*vcf+8*ro*t1^4*vca*vcf-56*t1^4*vca*vcf-16*ro^2*t1^3*vca*vcf-16
*ro*t1^3*vca*vcf+112*t1^3*vca*vcf-4*ro^3*t1^2*vca*vcf+48*ro^2*t1^2*vca*vcf
-120*t1^2*vca*vcf+4*ro^3*t1*vca*vcf-40*ro^2*t1*vca*vcf+8*ro*t1*vca*vcf+64*t1
*vca*vcf+4*ro^3*vca*vcf-8*ro^2*vca*vcf-64*t1^6*vca^2+192*t1^5*vca^2-4*ro^2*t1
^4*vca^2-5*ro*t1^4*vca^2-226*t1^4*vca^2+8*ro^2*t1^3*vca^2+10*ro*t1^3*vca^2
+132*t1^3*vca^2+2*ro^3*t1^2*vca^2-18*ro^2*t1^2*vca^2-3*ro*t1^2*vca^2-22*t1^2
*vca^2-2*ro^3*t1*vca^2+14*ro^2*t1*vca^2-2*ro*t1*vca^2-12*t1*vca^2-ro^3*vca^2
+2*ro^2*vca^2)*vtf*zg^6/(s*(t1-1)^2*t1^2*vda)   

 ;   

totdel0    [   vdt    ]:   

-pi*(16*ro*t1^3*vcf^2+32*t1^3*vcf^2-8*ro^2*t1^2*vcf^2-32*ro*t1^2*vcf^2+24*ro
*t1*vcf^2-4*ro^2*vcf^2-8*ro*t1^4*vca*vcf+8*t1^4*vca*vcf+4*ro^2*t1^3*vca*vcf
-48*t1^3*vca*vcf+4*ro^2*t1^2*vca*vcf+12*ro*t1^2*vca*vcf+4*t1^2*vca*vcf+2*ro^2
*t1*vca*vcf-12*ro*t1*vca*vcf+2*ro^2*vca*vcf-16*t1^5*vca^2+8*ro*t1^4*vca^2+24
*t1^4*vca^2-2*ro^2*t1^3*vca^2-12*ro*t1^3*vca^2+2*t1^3*vca^2+6*ro*t1^2*vca^2
-ro^2*t1*vca^2)*vtf*zg^6/(s*(t1-1)*t1^3*vda)   

 ;   

totdel0    [   atinv*vdt    ]:   

pi*(4*t1-ro)*(2*vcf-t1*vca)*(16*t1^4*vcf-32*t1^3*vcf+24*ro*t1^2*vcf+16*t1^2
*vcf-24*ro*t1*vcf+6*ro^2*vcf-8*t1^4*vca+16*t1^3*vca-12*ro*t1^2*vca-4*t1^2*vca
+12*ro*t1*vca-3*ro^2*vca)*vtf*zg^6/(8*(t1-1)*t1^3*vda)   

 ;   

totdel0    [   vdw    ]:   

pi*(16*ro*t1^3*vcf^2+32*t1^3*vcf^2+8*ro^2*t1^2*vcf^2-16*ro*t1^2*vcf^2-96*t1
^2*vcf^2-16*ro^2*t1*vcf^2+8*ro*t1*vcf^2+96*t1*vcf^2+12*ro^2*vcf^2-8*ro*vcf^2
-32*vcf^2+8*ro*t1^4*vca*vcf-8*t1^4*vca*vcf+4*ro^2*t1^3*vca*vcf-32*ro*t1^3*vca
*vcf-16*t1^3*vca*vcf-16*ro^2*t1^2*vca*vcf+36*ro*t1^2*vca*vcf+92*t1^2*vca*vcf
+22*ro^2*t1*vca*vcf-20*ro*t1*vca*vcf-104*t1*vca*vcf-12*ro^2*vca*vcf+8*ro*vca
*vcf+36*vca*vcf-16*t1^5*vca^2-8*ro*t1^4*vca^2+56*t1^4*vca^2-2*ro^2*t1^3*vca^2
+20*ro*t1^3*vca^2-62*t1^3*vca^2+6*ro^2*t1^2*vca^2-18*ro*t1^2*vca^2+10*t1^2
*vca^2-7*ro^2*t1*vca^2+8*ro*t1*vca^2+22*t1*vca^2+3*ro^2*vca^2-2*ro*vca^2-10
*vca^2)*vtf*zg^6/(s*(t1-1)^3*t1*vda)   

 ;   

totdel0    [   auinv*vdw    ]:   

-pi*(4*t1+ro-4)*(2*vcf+t1*vca-vca)*(16*t1^4*vcf-32*t1^3*vcf+24*ro*t1^2*vcf
+16*t1^2*vcf-24*ro*t1*vcf+6*ro^2*vcf-8*t1^4*vca+16*t1^3*vca-12*ro*t1^2*vca-4
*t1^2*vca+12*ro*t1*vca-8*t1*vca-3*ro^2*vca+4*vca)*vtf*zg^6/(8*(t1-1)^3*t1*vda
)   

 ;   

totdel0    [   vlm2    ]:   

-2*pi*(8*t1^4-16*t1^3+4*ro*t1^2+12*t1^2-4*ro*t1-4*t1+ro^2)*(vcf+t1^2*vca-t1
*vca)*vtf*(4*nlf*vtf-11*vca)*zg^6/(3*s*(t1-1)^2*t1^2*vda)   

 ;   

totdel0    [   vlpm/b    ]:   

pi*(2*vcf-vca)*(16*ro*t1^4*vcf-64*t1^4*vcf-32*ro*t1^3*vcf+128*t1^3*vcf+16*ro
^2*t1^2*vcf-16*ro*t1^2*vcf-72*t1^2*vcf-16*ro^2*t1*vcf+32*ro*t1*vcf+8*t1*vcf+4
*ro^3*vcf-8*ro^2*vcf+48*ro*t1^6*vca-80*t1^6*vca-144*ro*t1^5*vca+240*t1^5*vca
+8*ro^2*t1^4*vca+100*ro*t1^4*vca-196*t1^4*vca-16*ro^2*t1^3*vca+40*ro*t1^3*vca
-8*t1^3*vca+4*ro^3*t1^2*vca-10*ro^2*t1^2*vca-31*ro*t1^2*vca+54*t1^2*vca-4*ro
^3*t1*vca+18*ro^2*t1*vca-13*ro*t1*vca-10*t1*vca-2*ro^3*vca+4*ro^2*vca)*vtf*zg
^6/(2*s*(t1-1)^2*t1^2*vda)   

 ;   

totdel0    [   b*vlpm    ]:   

pi*vtf*(8*ro^2*t1^2*vca*vtf-8*ro^2*t1*vca*vtf+2*ro^2*vca*vtf+8*vcf^2-16*ro
*t1^2*vca*vcf-16*t1^2*vca*vcf+16*ro*t1*vca*vcf+16*t1*vca*vcf-4*ro*vca*vcf-14
*vca*vcf+8*ro*t1^2*vca^2+8*t1^2*vca^2-8*ro*t1*vca^2-8*t1*vca^2+2*ro*vca^2+5
*vca^2)*zg^6/(s*(t1-1)*t1*vda)   

 ;   

totdel0    [   vlpm^2    ]:   

-pi*vtf*(8*ro^2*t1^2*vca*vtf-8*ro^2*t1*vca*vtf+2*ro^2*vca*vtf+32*t1^2*vcf^2
-32*t1*vcf^2-8*ro^2*vcf^2+48*vcf^2-16*ro*t1^2*vca*vcf-56*t1^2*vca*vcf+16*ro
*t1*vca*vcf+56*t1*vca*vcf+10*ro^2*vca*vcf-4*ro*vca*vcf-64*vca*vcf+8*ro*t1^2
*vca^2+20*t1^2*vca^2-8*ro*t1*vca^2-20*t1*vca^2-3*ro^2*vca^2+2*ro*vca^2+20*vca
^2)*zg^6/(4*s*(t1-1)*t1*vda)   

 ;   

totdel0    [   vlpm^2/b^5    ]:   

-pi*(2*t1-1)^2*(4*ro*t1^2+8*t1^2-4*ro*t1-8*t1+3*ro^2-8*ro+8)*vca^2*vtf*zg^6/
(8*s*(t1-1)*t1*vda)   

 ;   

totdel0    [   vlpm^2/b^3    ]:   

-pi*(16*ro*t1^4-48*t1^4-32*ro*t1^3+96*t1^3-7*ro^2*t1^2+49*ro*t1^2-98*t1^2+7
*ro^2*t1-33*ro*t1+50*t1+ro^3-3*ro^2+6*ro-8)*vca^2*vtf*zg^6/(4*s*(t1-1)*t1*vda
)   

 ;   

totdel0    [   vlpm^2/b    ]:   

pi*(32*ro*t1^2*vcf^2-32*t1^2*vcf^2-32*ro*t1*vcf^2+32*t1*vcf^2-8*ro^2*vcf^2-8
*ro*vcf^2+16*vcf^2+32*ro*t1^4*vca*vcf-64*t1^4*vca*vcf-64*ro*t1^3*vca*vcf+128
*t1^3*vca*vcf+24*ro^2*t1^2*vca*vcf-8*ro*t1^2*vca*vcf-88*t1^2*vca*vcf-24*ro^2
*t1*vca*vcf+40*ro*t1*vca*vcf+24*t1*vca*vcf+16*ro^2*vca*vcf+8*ro*vca*vcf-32
*vca*vcf-16*ro*t1^4*vca^2-32*t1^4*vca^2+32*ro*t1^3*vca^2+64*t1^3*vca^2-12*ro
^2*t1^2*vca^2-5*ro*t1^2*vca^2-66*t1^2*vca^2+12*ro^2*t1*vca^2-11*ro*t1*vca^2
+34*t1*vca^2-6*ro^2*vca^2-2*ro*vca^2+4*vca^2)*vtf*zg^6/(4*s*(t1-1)*t1*vda)   

 ;   

totdel0    [   vlsm    ]:   

-pi*(16*t1^6-48*t1^5+24*ro*t1^4+48*t1^4-48*ro*t1^3-16*t1^3+4*ro^2*t1^2+34*ro
*t1^2-t1^2-4*ro^2*t1-10*ro*t1+t1+2*ro^2)*vca^2*vtf*zg^6/(s*(t1-1)^2*t1^2*vda
)   

 ;   

totdel0    [   vlsm/b^4    ]:   

3*pi*(2*t1-1)^2*(4*t1^2-4*t1-ro+2)*vca^2*vtf*zg^6/(2*s*(t1-1)*t1*vda)   

 ;   

totdel0    [   vlsm/b^2    ]:   

pi*(2*t1-1)^2*(4*ro*t1^2-12*t1^2-4*ro*t1+12*t1-ro^2+ro-4)*vca^2*vtf*zg^6/(s*
(t1-1)*t1*vda)   

 ;   

totdel0    [   vlpm*vlsm/b    ]:   

-pi*(2*vcf-vca)*(16*t1^4*vcf-32*t1^3*vcf-12*ro^2*t1^2*vcf+4*ro*t1^2*vcf+40
*t1^2*vcf+12*ro^2*t1*vcf-4*ro*t1*vcf-24*t1*vcf-2*ro^3*vcf+4*ro^2*vcf+4*ro^2
*t1^4*vca+4*ro*t1^4*vca-20*t1^4*vca-8*ro^2*t1^3*vca-8*ro*t1^3*vca+40*t1^3*vca
-2*ro^3*t1^2*vca+18*ro^2*t1^2*vca+2*ro*t1^2*vca-40*t1^2*vca+2*ro^3*t1*vca-14
*ro^2*t1*vca+2*ro*t1*vca+20*t1*vca+ro^3*vca-2*ro^2*vca)*vtf*zg^6/(2*s*(t1-1)
^2*t1^2*vda)   

 ;   

totdel0    [   vlsm^2    ]:   

pi*(ro+1)*(2*t1^2-2*t1+1)*vca^2*vtf*zg^6/(s*(t1-1)*t1*vda)   

 ;   

totdel0    [   vltm    ]:   

-4*pi*(2*t1^2-2*t1+ro)^2*vca*(2*vcf+t1^2*vca-2*t1*vca)*vtf*zg^6/(s*(t1-1)^2
*t1^2*vda)   

 ;   

totdel0    [   atinv*vltm    ]:   

pi*(2*vcf-t1*vca)*(16*t1^4*vcf-8*ro*t1^3*vcf-44*t1^3*vcf+2*ro^2*t1^2*vcf+26
*ro*t1^2*vcf+36*t1^2*vcf-6*ro^2*t1*vcf-18*ro*t1*vcf+ro^3*vcf+2*ro^2*vcf+4*t1
^4*vca+12*t1^3*vca-2*ro*t1^2*vca-16*t1^2*vca+8*ro*t1*vca-ro^2*vca)*vtf*zg^6/
((t1-1)*t1^2*vda)   

 ;   

totdel0    [   atinv^2*vltm    ]:   

pi*s*(2*vcf-t1*vca)*(96*t1^5*vcf-16*ro*t1^4*vcf-224*t1^4*vcf+160*ro*t1^3*vcf
+192*t1^3*vcf-24*ro^2*t1^2*vcf-192*ro*t1^2*vcf+60*ro^2*t1*vcf-6*ro^3*vcf-32
*t1^5*vca+8*ro*t1^4*vca+160*t1^4*vca-88*ro*t1^3*vca-128*t1^3*vca+12*ro^2*t1^2
*vca+112*ro*t1^2*vca-32*ro^2*t1*vca+3*ro^3*vca)*vtf*zg^6/(8*(t1-1)*t1^2*vda)   

 ;   

totdel0    [   vlpm*vltm/b    ]:   

pi*(4*t1^3-2*ro^2*t1^2-2*ro*t1^2-2*ro^2*t1+2*ro*t1+4*t1+ro^3-2*ro^2)*(2*vcf
-vca)*(2*vcf-t1*vca-vca)*vtf*zg^6/(s*(t1-1)*t1^2*vda)   

 ;   

totdel0    [   vlsm*vltm    ]:   

2*pi*(8*t1^4-8*t1^3+2*ro*t1^2+6*t1^2-2*ro*t1-2*t1+ro^2)*vca^2*vtf*zg^6/(s*t1
^2*vda)   

 ;   

totdel0    [   vltm^2    ]:   

-pi*(2*vcf-vca)*(8*ro*t1^3*vcf+16*t1^3*vcf-4*ro^2*t1^2*vcf-16*ro*t1^2*vcf+12
*ro*t1*vcf-2*ro^2*vcf-4*ro*t1^4*vca-4*t1^4*vca+2*ro^2*t1^3*vca+4*ro*t1^3*vca
-8*t1^3*vca+2*ro^2*t1^2*vca-6*ro*t1^2*vca+ro^2*t1*vca)*vtf*zg^6/(s*(t1-1)*t1
^3*vda)   

 ;   

totdel0    [   atinv*vltm^2    ]:   

pi*(4*t1-ro)*(8*t1^4-16*t1^3+12*ro*t1^2+8*t1^2-12*ro*t1+3*ro^2)*(2*vcf-vca)*
(2*vcf-t1*vca)*vtf*zg^6/(8*(t1-1)*t1^3*vda)   

 ;   

totdel0    [   vlwm    ]:   

-4*pi*(2*t1^2-2*t1+ro)^2*vca*(2*vcf+t1^2*vca-vca)*vtf*zg^6/(s*(t1-1)^2*t1^2
*vda)   

 ;   

totdel0    [   auinv*vlwm    ]:   

-pi*(2*vcf+t1*vca-vca)*(16*t1^4*vcf+8*ro*t1^3*vcf-20*t1^3*vcf+2*ro^2*t1^2
*vcf+2*ro*t1^2*vcf+2*ro^2*t1*vcf-10*ro*t1*vcf-4*t1*vcf+ro^3*vcf-2*ro^2*vcf+8
*vcf+4*t1^4*vca-28*t1^3*vca-2*ro*t1^2*vca+44*t1^2*vca-4*ro*t1*vca-20*t1*vca
-ro^2*vca+6*ro*vca)*vtf*zg^6/((t1-1)^2*t1*vda)   

 ;   

totdel0    [   auinv^2*vlwm    ]:   

pi*s*(2*vcf+t1*vca-vca)*(96*t1^5*vcf+16*ro*t1^4*vcf-256*t1^4*vcf+96*ro*t1^3
*vcf+256*t1^3*vcf+24*ro^2*t1^2*vcf-192*ro*t1^2*vcf-192*t1^2*vcf+12*ro^2*t1
*vcf+32*ro*t1*vcf+160*t1*vcf+6*ro^3*vcf-36*ro^2*vcf+48*ro*vcf-64*vcf-32*t1^5
*vca-8*ro*t1^4*vca-56*ro*t1^3*vca+192*t1^3*vca-12*ro^2*t1^2*vca+104*ro*t1^2
*vca-256*t1^2*vca-8*ro^2*t1*vca-8*ro*t1*vca+96*t1*vca-3*ro^3*vca+20*ro^2*vca
-32*ro*vca)*vtf*zg^6/(8*(t1-1)^2*t1*vda)   

 ;   

totdel0    [   vlpm*vlwm/b    ]:   

pi*(4*t1^3+2*ro^2*t1^2+2*ro*t1^2-12*t1^2-6*ro^2*t1-2*ro*t1+16*t1-ro^3+6*ro^2
-8)*(2*vcf-vca)*(2*vcf+t1*vca-2*vca)*vtf*zg^6/(s*(t1-1)^2*t1*vda)   

 ;   

totdel0    [   vlsm*vlwm    ]:   

2*pi*(8*t1^4-24*t1^3+2*ro*t1^2+30*t1^2-2*ro*t1-18*t1+ro^2+4)*vca^2*vtf*zg^6/
(s*(t1-1)^2*vda)   

 ;   

totdel0    [   vltm*vlwm    ]:   

4*pi*(4*t1^4-8*t1^3+ro^2*t1^2+2*ro*t1^2+6*t1^2-ro^2*t1-2*ro*t1-2*t1+ro^2)
*vca*(2*vcf-vca)*vtf*zg^6/(s*(t1-1)^2*t1^2*vda)   

 ;   

totdel0    [   vlwm^2    ]:   

pi*(2*vcf-vca)*(8*ro*t1^3*vcf+16*t1^3*vcf+4*ro^2*t1^2*vcf-8*ro*t1^2*vcf-48
*t1^2*vcf-8*ro^2*t1*vcf+4*ro*t1*vcf+48*t1*vcf+6*ro^2*vcf-4*ro*vcf-16*vcf+4*ro
*t1^4*vca+4*t1^4*vca+2*ro^2*t1^3*vca-12*ro*t1^3*vca-24*t1^3*vca-8*ro^2*t1^2
*vca+18*ro*t1^2*vca+48*t1^2*vca+11*ro^2*t1*vca-16*ro*t1*vca-40*t1*vca-5*ro^2
*vca+6*ro*vca+12*vca)*vtf*zg^6/(s*(t1-1)^3*t1*vda)   

 ;   

totdel0    [   auinv*vlwm^2    ]:   

-pi*(4*t1+ro-4)*(8*t1^4-16*t1^3+12*ro*t1^2+8*t1^2-12*ro*t1+3*ro^2)*(2*vcf
-vca)*(2*vcf+t1*vca-vca)*vtf*zg^6/(8*(t1-1)^3*t1*vda)   

 ;   

display2d:false;

delttab:
[
ro = 4*m2/s,
t1 = -t/s,
zg = 1,
vca=3,
vcf=4,vcf=vcf/3,
vtf=1,vtf=vtf/2,
vda=8,
nlf=nl,
t2=1-t1,
b=dsqrt(1-ro),
lp=(1+b)/2,
lm=(1-b)/2,
at=t1*s,
aw=t2*s,
as=-s,
vlm2=dlog(m2/mu2),
vltm=dlog(at/m2),
vlpm=dlog(lp/lm),
vlsm=dlog(s/m2),
vlsmu=dlog(s/mu2),
vlwm=dlog(aw/m2),
vlbl=dlog(b/lm),
vdw=ddilog((aw-m2)/aw)-1/2*vlwm^2,
vdt=ddilog((at-m2)/at)-1/2*vltm^2,
vdmp=ddilog(-lm/lp),
vdmb=ddilog(-lm/b)+1/2*vlbl^2,
auinv=1/(m2-aw),
atinv=1/(m2-at),
srlgpr=
dlog((1-b)/(1+b)*t2/t1)*
dlog((1+b)/(1-b)*t2/t1),
srl21p=
ddilog(1-(1+b)/(1-b)*t1/t2),
srl21m=
ddilog(1-(1-b)/(1+b)*t1/t2),
srl22p=
ddilog(1-(1+b)/(1-b)*t2/t1),
srl22m=
ddilog(1-(1-b)/(1+b)*t2/t1),
srl12=dlog(t1/t2),
srlgro=dlog(4*t1*t2/ro),
srlg1=
dlog((1+b)/(1-b))/b,
srl2l=
(ddilog(-4*b/(1-b)^2)-ddilog(4*b/(1+b)^2))/b,
srl212=1/2*dlog(4*t1*t2/ro)^2+ddilog(1-ro/4/t1/t2),
sl3515=(srlgpr+b^2*srlg1^2+srl21p+srl21m),
sl3525=(srlgpr+b^2*srlg1^2+srl22p+srl22m),
softt1=ddilog(1-2*t1/(1-b))+ddilog(1-2*t1/(1+b))+
       log(2*t1/(1+b))*log(2*t1/(1-b)),
softt2=ddilog(1-2*t2/(1-b))+ddilog(1-2*t2/(1+b))+
       log(2*t2/(1+b))*log(2*t2/(1-b)),
softb=ddilog(2*b/(1+b))-ddilog(-2*b/(1-b)),
lt1=log(t1),lt2=log(t2),lb=log(b*betfac)
];


load(fortify);
load(marrays);
ntmax:40;

funcn:ggqq;

d_file:'(
data:[s,t,pi,nl,mu2,m2,betfac],
target:[funcn],
prg:forcode(
  data,target,
  append(delttab,[ss=resoft,dd=totdel0,funcn=dd/(4*pi)+ss])
  ),
prg:append(
 [concat('function,\ ,string(funmake(funcn,[s,t,m2,mu2]))),
  concat('implicit,\ double\ precision\ \(a\-z\)),
  'integer\ nl,
  concat('character\ \*\ 2\ scheme),
  concat('common\/nl\/nl),
  concat('common\/betfac\/betfac),
  concat('common\/scheme\/scheme),
  concat('data,\ pi\/3\.141\ 592\ 653\ 589\ 793\/)],
 prg,
 [return,end]
 ),
 apply('writefile,[concat(string(funcn),"vfin.for")]),
 map(mfortran,prg),
 closefile()
);

load(mfortran);
''d_file;
