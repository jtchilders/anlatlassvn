cccccccccccccccccccccccccccccccccccccccccccccccccccc
c     As in DR, but with double-resonant graphs included
ccccccccccccccccccccccccccccccccccccccccccccccccccccc
c     Copied and modified from MAD_real_routines_DR.f
ccccccccccccccccccccccccccccccccccccccccccccccccccccc

      SUBROUTINE Suxu_twmbx_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u~ u -> t w- b~  
C  
C Crossing   1 is u~ u -> t w- b~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 uxu_twmbx_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2uxu_twmbx_undec(maxamps), jamp2uxu_twmbx_undec(0:maxamps)
      common/to_ampsuxu_twmbx_undec/  amp2uxu_twmbx_undec,       jamp2uxu_twmbx_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixuxu_twmbx_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    2/          
      DATA jamp2uxu_twmbx_undec(0) /   1/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2uxu_twmbx_undec(ihel)=0d0
              jamp2uxu_twmbx_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2uxu_twmbx_undec(0))
              jamp2uxu_twmbx_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=uxu_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=uxu_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2uxu_twmbx_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2uxu_twmbx_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION uxu_twmbx_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u~ u -> t w- b~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   2,NEIGEN=  1) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   8, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2uxu_twmbx_undec(maxamps), jamp2uxu_twmbx_undec(0:maxamps)
      common/to_ampsuxu_twmbx_undec/  amp2uxu_twmbx_undec,       jamp2uxu_twmbx_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     2/                                  
C               T[ 3, 2]T[ 1, 5]                                           
C ----------
C BEGIN CODE
C ----------
      CALL OXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL JIOXXX(W(1,2   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,6   ))     
      CALL FVOXXX(W(1,3   ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,7   ))     
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,4   ),GWF ,AMP(1   ))          
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GG ,AMP(2   ))             
c$$$      amp(1)=(0,0) !:
      JAMP(   1) = +AMP(   1)+AMP(   2)
      uxu_twmbx_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          uxu_twmbx_undec =uxu_twmbx_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2uxu_twmbx_undec(i)=amp2uxu_twmbx_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2uxu_twmbx_undec(i)=Jamp2uxu_twmbx_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END


      SUBROUTINE Suxb_twmux_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u~ b -> t w- u~  
C  
C Crossing   1 is u~ b -> t w- u~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 uxb_twmux_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2uxb_twmux_undec(maxamps), jamp2uxb_twmux_undec(0:maxamps)
      common/to_ampsuxb_twmux_undec/  amp2uxb_twmux_undec,       jamp2uxb_twmux_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixuxb_twmux_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    2/          
      DATA jamp2uxb_twmux_undec(0) /   1/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2uxb_twmux_undec(ihel)=0d0
              jamp2uxb_twmux_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2uxb_twmux_undec(0))
              jamp2uxb_twmux_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=uxb_twmux_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=uxb_twmux_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2uxb_twmux_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2uxb_twmux_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION uxb_twmux_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u~ b -> t w- u~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   2,NEIGEN=  1) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   8, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2uxb_twmux_undec(maxamps), jamp2uxb_twmux_undec(0:maxamps)
      common/to_ampsuxb_twmux_undec/  amp2uxb_twmux_undec,       jamp2uxb_twmux_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     2/                                  
C               T[ 3, 5]T[ 1, 2]                                           
C ----------
C BEGIN CODE
C ----------
      CALL OXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL IXXXXX(P(0,2   ),BMASS ,NHEL(2   ),+1*IC(2   ),W(1,2   ))       
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1*IC(5   ),W(1,5   ))        
      CALL FVIXXX(W(1,2   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     6   ))                                                          
      CALL JIOXXX(W(1,5   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL IOVXXX(W(1,6   ),W(1,3   ),W(1,7   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,2   ),W(1,8   ),W(1,7   ),GG ,AMP(2   ))             
      JAMP(   1) = -AMP(   1)-AMP(   2)
      uxb_twmux_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          uxb_twmux_undec =uxb_twmux_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2uxb_twmux_undec(i)=amp2uxb_twmux_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2uxb_twmux_undec(i)=Jamp2uxb_twmux_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

      SUBROUTINE Suux_twmbx_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u u~ -> t w- b~  
C  
C Crossing   1 is u u~ -> t w- b~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 uux_twmbx_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2uux_twmbx_undec(maxamps), jamp2uux_twmbx_undec(0:maxamps)
      common/to_ampsuux_twmbx_undec/  amp2uux_twmbx_undec,       jamp2uux_twmbx_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixuux_twmbx_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    2/          
      DATA jamp2uux_twmbx_undec(0) /   1/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2uux_twmbx_undec(ihel)=0d0
              jamp2uux_twmbx_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2uux_twmbx_undec(0))
              jamp2uux_twmbx_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=uux_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=uux_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2uux_twmbx_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2uux_twmbx_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION uux_twmbx_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u u~ -> t w- b~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   2,NEIGEN=  1) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   8, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2uux_twmbx_undec(maxamps), jamp2uux_twmbx_undec(0:maxamps)
      common/to_ampsuux_twmbx_undec/  amp2uux_twmbx_undec,       jamp2uux_twmbx_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     2/                                  
C               T[ 3, 1]T[ 2, 5]                                           
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1*IC(1   ),W(1,1   ))        
      CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL JIOXXX(W(1,1   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,6   ))     
      CALL FVOXXX(W(1,3   ),W(1,6   ),GG ,TMASS   ,TWIDTH  ,W(1,7   ))     
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,4   ),GWF ,AMP(1   ))          
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,6   ),GG ,AMP(2   ))             
c$$$      amp(1)=(0,0) !:
      JAMP(   1) = -AMP(   1)-AMP(   2)
      uux_twmbx_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          uux_twmbx_undec =uux_twmbx_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2uux_twmbx_undec(i)=amp2uux_twmbx_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2uux_twmbx_undec(i)=Jamp2uux_twmbx_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

      SUBROUTINE Sub_twmu_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : u b -> t w- u  
C  
C Crossing   1 is u b -> t w- u  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 ub_twmu_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2ub_twmu_undec(maxamps), jamp2ub_twmu_undec(0:maxamps)
      common/to_ampsub_twmu_undec/  amp2ub_twmu_undec,       jamp2ub_twmu_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixub_twmu_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    2/          
      DATA jamp2ub_twmu_undec(0) /   1/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2ub_twmu_undec(ihel)=0d0
              jamp2ub_twmu_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2ub_twmu_undec(0))
              jamp2ub_twmu_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=ub_twmu_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=ub_twmu_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2ub_twmu_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2ub_twmu_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION ub_twmu_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : u b -> t w- u  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   2,NEIGEN=  1) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   8, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2ub_twmu_undec(maxamps), jamp2ub_twmu_undec(0:maxamps)
      common/to_ampsub_twmu_undec/  amp2ub_twmu_undec,       jamp2ub_twmu_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     2/                                  
C               T[ 5, 2]T[ 3, 1]                                           
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),ZERO ,NHEL(1   ),+1*IC(1   ),W(1,1   ))        
      CALL IXXXXX(P(0,2   ),BMASS ,NHEL(2   ),+1*IC(2   ),W(1,2   ))       
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL OXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1*IC(5   ),W(1,5   ))        
      CALL FVIXXX(W(1,2   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     6   ))                                                          
      CALL JIOXXX(W(1,1   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL IOVXXX(W(1,6   ),W(1,3   ),W(1,7   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,2   ),W(1,8   ),W(1,7   ),GG ,AMP(2   ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)
      ub_twmu_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          ub_twmu_undec =ub_twmu_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2ub_twmu_undec(i)=amp2ub_twmu_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2ub_twmu_undec(i)=Jamp2ub_twmu_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

      SUBROUTINE Sbxb_twmbx_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : b~ b -> t w- b~  
C  
C Crossing   1 is b~ b -> t w- b~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 bxb_twmbx_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bxb_twmbx_undec(maxamps), jamp2bxb_twmbx_undec(0:maxamps)
      common/to_ampsbxb_twmbx_undec/  amp2bxb_twmbx_undec,       jamp2bxb_twmbx_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixbxb_twmbx_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    4/          
      DATA jamp2bxb_twmbx_undec(0) /   2/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2bxb_twmbx_undec(ihel)=0d0
              jamp2bxb_twmbx_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2bxb_twmbx_undec(0))
              jamp2bxb_twmbx_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=bxb_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=bxb_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2bxb_twmbx_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2bxb_twmbx_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION bxb_twmbx_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : b~ b -> t w- b~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   4,NEIGEN=  2) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  10, NCOLOR=   2) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bxb_twmbx_undec(maxamps), jamp2bxb_twmbx_undec(0:maxamps)
      common/to_ampsbxb_twmbx_undec/  amp2bxb_twmbx_undec,       jamp2bxb_twmbx_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,2  ) /     6,   -2/                            
C               T[ 3, 5]T[ 1, 2]                                           
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,2  ) /    -2,    6/                            
C               T[ 3, 2]T[ 1, 5]                                           
C ----------
C BEGIN CODE
C ----------
      CALL OXXXXX(P(0,1   ),BMASS ,NHEL(1   ),-1*IC(1   ),W(1,1   ))       
      CALL IXXXXX(P(0,2   ),BMASS ,NHEL(2   ),+1*IC(2   ),W(1,2   ))       
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL FVIXXX(W(1,2   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     6   ))                                                          
      CALL JIOXXX(W(1,5   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL IOVXXX(W(1,6   ),W(1,3   ),W(1,7   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,2   ),W(1,8   ),W(1,7   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,2   ),W(1,1   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL FVOXXX(W(1,3   ),W(1,9   ),GG ,TMASS   ,TWIDTH  ,W(1,10  ))     
      CALL IOVXXX(W(1,5   ),W(1,10  ),W(1,4   ),GWF ,AMP(3   ))          
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,9   ),GG ,AMP(4   ))             
c$$$      amp(3)=(0,0) !:
      JAMP(   1) = -AMP(   1)-AMP(   2)
      JAMP(   2) = +AMP(   3)+AMP(   4)
      bxb_twmbx_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          bxb_twmbx_undec =bxb_twmbx_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2bxb_twmbx_undec(i)=amp2bxb_twmbx_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2bxb_twmbx_undec(i)=Jamp2bxb_twmbx_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END


      SUBROUTINE Sbux_twmux_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : b u~ -> t w- u~  
C  
C Crossing   1 is b u~ -> t w- u~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 bux_twmux_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bux_twmux_undec(maxamps), jamp2bux_twmux_undec(0:maxamps)
      common/to_ampsbux_twmux_undec/  amp2bux_twmux_undec,       jamp2bux_twmux_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixbux_twmux_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    2/          
      DATA jamp2bux_twmux_undec(0) /   1/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2bux_twmux_undec(ihel)=0d0
              jamp2bux_twmux_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2bux_twmux_undec(0))
              jamp2bux_twmux_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=bux_twmux_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=bux_twmux_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2bux_twmux_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2bux_twmux_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION bux_twmux_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : b u~ -> t w- u~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   2,NEIGEN=  1) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   8, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bux_twmux_undec(maxamps), jamp2bux_twmux_undec(0:maxamps)
      common/to_ampsbux_twmux_undec/  amp2bux_twmux_undec,       jamp2bux_twmux_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     2/                                  
C               T[ 3, 5]T[ 2, 1]                                           
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),BMASS ,NHEL(1   ),+1*IC(1   ),W(1,1   ))       
      CALL OXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),ZERO ,NHEL(5   ),-1*IC(5   ),W(1,5   ))        
      CALL FVIXXX(W(1,1   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     6   ))                                                          
      CALL JIOXXX(W(1,5   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL IOVXXX(W(1,6   ),W(1,3   ),W(1,7   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,1   ),W(1,8   ),W(1,7   ),GG ,AMP(2   ))             
      JAMP(   1) = +AMP(   1)+AMP(   2)
      bux_twmux_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          bux_twmux_undec =bux_twmux_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2bux_twmux_undec(i)=amp2bux_twmux_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2bux_twmux_undec(i)=Jamp2bux_twmux_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

      SUBROUTINE Sbu_twmu_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : b u -> t w- u  
C  
C Crossing   1 is b u -> t w- u  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 bu_twmu_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bu_twmu_undec(maxamps), jamp2bu_twmu_undec(0:maxamps)
      common/to_ampsbu_twmu_undec/  amp2bu_twmu_undec,       jamp2bu_twmu_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixbu_twmu_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    2/          
      DATA jamp2bu_twmu_undec(0) /   1/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2bu_twmu_undec(ihel)=0d0
              jamp2bu_twmu_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2bu_twmu_undec(0))
              jamp2bu_twmu_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=bu_twmu_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=bu_twmu_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2bu_twmu_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2bu_twmu_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION bu_twmu_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : b u -> t w- u  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   2,NEIGEN=  1) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=   8, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bu_twmu_undec(maxamps), jamp2bu_twmu_undec(0:maxamps)
      common/to_ampsbu_twmu_undec/  amp2bu_twmu_undec,       jamp2bu_twmu_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            1/                                       
      DATA (CF(i,1  ),i=1  ,1  ) /     2/                                  
C               T[ 5, 1]T[ 3, 2]                                           
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),BMASS ,NHEL(1   ),+1*IC(1   ),W(1,1   ))       
      CALL IXXXXX(P(0,2   ),ZERO ,NHEL(2   ),+1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL OXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1*IC(5   ),W(1,5   ))        
      CALL FVIXXX(W(1,1   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     6   ))                                                          
      CALL JIOXXX(W(1,2   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL IOVXXX(W(1,6   ),W(1,3   ),W(1,7   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,1   ),W(1,8   ),W(1,7   ),GG ,AMP(2   ))             
      JAMP(   1) = -AMP(   1)-AMP(   2)
      bu_twmu_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          bu_twmu_undec =bu_twmu_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2bu_twmu_undec(i)=amp2bu_twmu_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2bu_twmu_undec(i)=Jamp2bu_twmu_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

      SUBROUTINE Sbbx_twmbx_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : b b~ -> t w- b~  
C  
C Crossing   1 is b b~ -> t w- b~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 bbx_twmbx_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bbx_twmbx_undec(maxamps), jamp2bbx_twmbx_undec(0:maxamps)
      common/to_ampsbbx_twmbx_undec/  amp2bbx_twmbx_undec,       jamp2bbx_twmbx_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixbbx_twmbx_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    4/          
      DATA jamp2bbx_twmbx_undec(0) /   2/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2bbx_twmbx_undec(ihel)=0d0
              jamp2bbx_twmbx_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2bbx_twmbx_undec(0))
              jamp2bbx_twmbx_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=bbx_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=bbx_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2bbx_twmbx_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2bbx_twmbx_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION bbx_twmbx_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : b b~ -> t w- b~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   4,NEIGEN=  2) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  10, NCOLOR=   2) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bbx_twmbx_undec(maxamps), jamp2bbx_twmbx_undec(0:maxamps)
      common/to_ampsbbx_twmbx_undec/  amp2bbx_twmbx_undec,       jamp2bbx_twmbx_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,2  ) /     6,   -2/                            
C               T[ 3, 5]T[ 2, 1]                                           
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,2  ) /    -2,    6/                            
C               T[ 3, 1]T[ 2, 5]                                           
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),BMASS ,NHEL(1   ),+1*IC(1   ),W(1,1   ))       
      CALL OXXXXX(P(0,2   ),BMASS ,NHEL(2   ),-1*IC(2   ),W(1,2   ))       
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL FVIXXX(W(1,1   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     6   ))                                                          
      CALL JIOXXX(W(1,5   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL IOVXXX(W(1,6   ),W(1,3   ),W(1,7   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,1   ),W(1,8   ),W(1,7   ),GG ,AMP(2   ))             
      CALL JIOXXX(W(1,1   ),W(1,2   ),GG ,ZERO    ,ZERO    ,W(1,9   ))     
      CALL FVOXXX(W(1,3   ),W(1,9   ),GG ,TMASS   ,TWIDTH  ,W(1,10  ))     
      CALL IOVXXX(W(1,5   ),W(1,10  ),W(1,4   ),GWF ,AMP(3   ))          
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,9   ),GG ,AMP(4   ))             
c$$$      amp(3)=(0,0) !:
      JAMP(   1) = +AMP(   1)+AMP(   2)
      JAMP(   2) = -AMP(   3)-AMP(   4)
      bbx_twmbx_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          bbx_twmbx_undec =bbx_twmbx_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2bbx_twmbx_undec(i)=amp2bbx_twmbx_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2bbx_twmbx_undec(i)=Jamp2bbx_twmbx_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

      SUBROUTINE Sbb_twmb_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : b b -> t w- b  
C  
C Crossing   1 is b b -> t w- b  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 bb_twmb_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bb_twmb_undec(maxamps), jamp2bb_twmb_undec(0:maxamps)
      common/to_ampsbb_twmb_undec/  amp2bb_twmb_undec,       jamp2bb_twmb_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixbb_twmb_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    4/          
      DATA jamp2bb_twmb_undec(0) /   2/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  36/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2bb_twmb_undec(ihel)=0d0
              jamp2bb_twmb_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2bb_twmb_undec(0))
              jamp2bb_twmb_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=bb_twmb_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=bb_twmb_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2bb_twmb_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2bb_twmb_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION bb_twmb_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : b b -> t w- b  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   4,NEIGEN=  2) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  10, NCOLOR=   2) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bb_twmb_undec(maxamps), jamp2bb_twmb_undec(0:maxamps)
      common/to_ampsbb_twmb_undec/  amp2bb_twmb_undec,       jamp2bb_twmb_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,2  ) /     6,   -2/                            
C               T[ 5, 1]T[ 3, 2]                                           
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,2  ) /    -2,    6/                            
C               T[ 5, 2]T[ 3, 1]                                           
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),BMASS ,NHEL(1   ),+1*IC(1   ),W(1,1   ))       
      CALL IXXXXX(P(0,2   ),BMASS ,NHEL(2   ),+1*IC(2   ),W(1,2   ))       
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL OXXXXX(P(0,5   ),BMASS ,NHEL(5   ),+1*IC(5   ),W(1,5   ))       
      CALL FVIXXX(W(1,1   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     6   ))                                                          
      CALL JIOXXX(W(1,2   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,7   ))     
      CALL IOVXXX(W(1,6   ),W(1,3   ),W(1,7   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     8   ))                                                          
      CALL IOVXXX(W(1,1   ),W(1,8   ),W(1,7   ),GG ,AMP(2   ))             
      CALL FVIXXX(W(1,2   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     9   ))                                                          
      CALL JIOXXX(W(1,1   ),W(1,5   ),GG ,ZERO    ,ZERO    ,W(1,10  ))     
      CALL IOVXXX(W(1,9   ),W(1,3   ),W(1,10  ),GG ,AMP(3   ))             
      CALL IOVXXX(W(1,2   ),W(1,8   ),W(1,10  ),GG ,AMP(4   ))             
      JAMP(   1) = -AMP(   1)-AMP(   2)
      JAMP(   2) = +AMP(   3)+AMP(   4)
      bb_twmb_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          bb_twmb_undec =bb_twmb_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2bb_twmb_undec(i)=amp2bb_twmb_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2bb_twmb_undec(i)=Jamp2bb_twmb_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END


      SUBROUTINE Sbg_twmg_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : b g -> t w- g  
C  
C Crossing   1 is b g -> t w- g  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 bg_twmg_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bg_twmg_undec(maxamps), jamp2bg_twmg_undec(0:maxamps)
      common/to_ampsbg_twmg_undec/  amp2bg_twmg_undec,       jamp2bg_twmg_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixbg_twmg_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    8/          
      DATA jamp2bg_twmg_undec(0) /   2/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2bg_twmg_undec(ihel)=0d0
              jamp2bg_twmg_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2bg_twmg_undec(0))
              jamp2bg_twmg_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=bg_twmg_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=bg_twmg_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2bg_twmg_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2bg_twmg_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION bg_twmg_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : b g -> t w- g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   8,NEIGEN=  2) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  14, NCOLOR=   2) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2bg_twmg_undec(maxamps), jamp2bg_twmg_undec(0:maxamps)
      common/to_ampsbg_twmg_undec/  amp2bg_twmg_undec,       jamp2bg_twmg_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,2  ) /    16,   -2/                            
C               T[ 3, 1, 2, 5]                                             
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,2  ) /    -2,   16/                            
C               T[ 3, 1, 5, 2]                                             
C ----------
C BEGIN CODE
C ----------
      CALL IXXXXX(P(0,1   ),BMASS ,NHEL(1   ),+1*IC(1   ),W(1,1   ))       
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL VXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1*IC(5   ),W(1,5   ))        
      CALL FVOXXX(W(1,3   ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,6   ))     
      CALL FVOXXX(W(1,6   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     7   ))                                                          
      CALL IOVXXX(W(1,1   ),W(1,7   ),W(1,5   ),GG ,AMP(1   ))             
      CALL FVIXXX(W(1,1   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     8   ))                                                          
      CALL JVVXXX(W(1,5   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,9   ))      
      CALL IOVXXX(W(1,8   ),W(1,3   ),W(1,9   ),GG ,AMP(2   ))             
      CALL FVOXXX(W(1,3   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,10  ))     
      CALL IOVXXX(W(1,8   ),W(1,10  ),W(1,2   ),GG ,AMP(3   ))             
      CALL IOVXXX(W(1,8   ),W(1,6   ),W(1,5   ),GG ,AMP(4   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     11  ))                                                          
      CALL FVIXXX(W(1,1   ),W(1,5   ),GG ,BMASS   ,ZERO    ,W(1,12  ))     
      CALL IOVXXX(W(1,12  ),W(1,11  ),W(1,2   ),GG ,AMP(5   ))             
      CALL IOVXXX(W(1,1   ),W(1,11  ),W(1,9   ),GG ,AMP(6   ))             
      CALL FVIXXX(W(1,1   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,13  ))     
      CALL FVIXXX(W(1,13  ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     14  ))                                                          
      CALL IOVXXX(W(1,14  ),W(1,3   ),W(1,5   ),GG ,AMP(7   ))             
      CALL IOVXXX(W(1,13  ),W(1,11  ),W(1,5   ),GG ,AMP(8   ))             
      JAMP(   1) = +AMP(   1)-AMP(   2)+AMP(   4)+AMP(   5)-AMP(   6)
      JAMP(   2) = +AMP(   2)+AMP(   3)+AMP(   6)+AMP(   7)+AMP(   8)
      bg_twmg_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          bg_twmg_undec =bg_twmg_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2bg_twmg_undec(i)=amp2bg_twmg_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2bg_twmg_undec(i)=Jamp2bg_twmg_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

      SUBROUTINE Sgb_twmg_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g b -> t w- g  
C  
C Crossing   1 is g b -> t w- g  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 gb_twmg_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2gb_twmg_undec(maxamps), jamp2gb_twmg_undec(0:maxamps)
      common/to_ampsgb_twmg_undec/  amp2gb_twmg_undec,       jamp2gb_twmg_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixgb_twmg_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    8/          
      DATA jamp2gb_twmg_undec(0) /   2/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) /  96/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2gb_twmg_undec(ihel)=0d0
              jamp2gb_twmg_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2gb_twmg_undec(0))
              jamp2gb_twmg_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=gb_twmg_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=gb_twmg_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2gb_twmg_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2gb_twmg_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION gb_twmg_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : g b -> t w- g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   8,NEIGEN=  2) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  14, NCOLOR=   2) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2gb_twmg_undec(maxamps), jamp2gb_twmg_undec(0:maxamps)
      common/to_ampsgb_twmg_undec/  amp2gb_twmg_undec,       jamp2gb_twmg_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,2  ) /    16,   -2/                            
C               T[ 3, 2, 1, 5]                                             
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,2  ) /    -2,   16/                            
C               T[ 3, 2, 5, 1]                                             
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL IXXXXX(P(0,2   ),BMASS ,NHEL(2   ),+1*IC(2   ),W(1,2   ))       
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL VXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1*IC(5   ),W(1,5   ))        
      CALL FVIXXX(W(1,2   ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     6   ))                                                          
      CALL JVVXXX(W(1,5   ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,7   ))      
      CALL IOVXXX(W(1,6   ),W(1,3   ),W(1,7   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,3   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,8   ))     
      CALL FVOXXX(W(1,8   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     9   ))                                                          
      CALL IOVXXX(W(1,2   ),W(1,9   ),W(1,5   ),GG ,AMP(2   ))             
      CALL FVOXXX(W(1,3   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,10  ))     
      CALL IOVXXX(W(1,6   ),W(1,10  ),W(1,1   ),GG ,AMP(3   ))             
      CALL IOVXXX(W(1,6   ),W(1,8   ),W(1,5   ),GG ,AMP(4   ))             
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     11  ))                                                          
      CALL IOVXXX(W(1,2   ),W(1,11  ),W(1,7   ),GG ,AMP(5   ))             
      CALL FVIXXX(W(1,2   ),W(1,5   ),GG ,BMASS   ,ZERO    ,W(1,12  ))     
      CALL IOVXXX(W(1,12  ),W(1,11  ),W(1,1   ),GG ,AMP(6   ))             
      CALL FVIXXX(W(1,2   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,13  ))     
      CALL FVIXXX(W(1,13  ),W(1,4   ),GWF ,TMASS   ,TWIDTH  ,W(1,        
     &     14  ))                                                          
      CALL IOVXXX(W(1,14  ),W(1,3   ),W(1,5   ),GG ,AMP(7   ))             
      CALL IOVXXX(W(1,13  ),W(1,11  ),W(1,5   ),GG ,AMP(8   ))             
      JAMP(   1) = -AMP(   1)+AMP(   2)+AMP(   4)-AMP(   5)+AMP(   6)
      JAMP(   2) = +AMP(   1)+AMP(   3)+AMP(   5)+AMP(   7)+AMP(   8)
      gb_twmg_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          gb_twmg_undec =gb_twmg_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2gb_twmg_undec(i)=amp2gb_twmg_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2gb_twmg_undec(i)=Jamp2gb_twmg_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

      SUBROUTINE Sgg_twmbx_undec(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL)
C  
C FOR PROCESS : g g -> t w- b~  
C  
C Crossing   1 is g g -> t w- b~  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "genps_r.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  48, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL)
      REAL*8 gg_twmbx_undec
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2gg_twmbx_undec(maxamps), jamp2gg_twmbx_undec(0:maxamps)
      common/to_ampsgg_twmbx_undec/  amp2gg_twmbx_undec,       jamp2gg_twmbx_undec

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrixgg_twmbx_undec/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned, isum_hel/.false.,0/
      DATA multi_channel/.false./
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /    8/          
      DATA jamp2gg_twmbx_undec(0) /   2/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 5) /-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 5) /-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 5) /-1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 5) /-1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 5) /-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 5) /-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 5) /-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 5) /-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 5) /-1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 5) /-1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 5) /-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 5) /-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 5) /-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 5) /-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 5) /-1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 5) /-1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 5) /-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 5) /-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 5) /-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 5) /-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 5) /-1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 5) /-1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 5) /-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 5) /-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 5) / 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 5) / 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 5) / 1,-1,-1, 0,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 5) / 1,-1,-1, 0, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 5) / 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 5) / 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 5) / 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 5) / 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 5) / 1,-1, 1, 0,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 5) / 1,-1, 1, 0, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 5) / 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 5) / 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 5) / 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 5) / 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 5) / 1, 1,-1, 0,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 5) / 1, 1,-1, 0, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 5) / 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 5) / 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 5) / 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 5) / 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 5) / 1, 1, 1, 0,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 5) / 1, 1, 1, 0, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 5) / 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 5) / 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 5) / 1, 2, 3, 4, 5/
      DATA (IDEN(IHEL),IHEL=  1,  1) / 256/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL)
      DO IHEL=1,NEXTERNAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2gg_twmbx_undec(ihel)=0d0
              jamp2gg_twmbx_undec(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2gg_twmbx_undec(0))
              jamp2gg_twmbx_undec(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,nexternal)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=gg_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=gg_twmbx_undec(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,nexternal)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2gg_twmbx_undec(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2gg_twmbx_undec(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION gg_twmbx_undec(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : g g -> t w- b~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=   8,NEIGEN=  2) 
      include "genps_r.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  16, NCOLOR=   2) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL)
      INTEGER NHEL(NEXTERNAL), IC(NEXTERNAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2gg_twmbx_undec(maxamps), jamp2gg_twmbx_undec(0:maxamps)
      common/to_ampsgg_twmbx_undec/  amp2gg_twmbx_undec,       jamp2gg_twmbx_undec
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/            3/                                       
      DATA (CF(i,1  ),i=1  ,2  ) /    16,   -2/                            
C               T[ 3, 5, 2, 1]                                             
      DATA Denom(2  )/            3/                                       
      DATA (CF(i,2  ),i=1  ,2  ) /    -2,   16/                            
C               T[ 3, 5, 1, 2]                                             
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL VXXXXX(P(0,4   ),WMASS ,NHEL(4   ),+1*IC(4   ),W(1,4   ))       
      CALL IXXXXX(P(0,5   ),BMASS ,NHEL(5   ),-1*IC(5   ),W(1,5   ))       
      CALL FVOXXX(W(1,3   ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,6   ))     
      CALL FVOXXX(W(1,6   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     7   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GG ,AMP(1   ))             
      CALL FVOXXX(W(1,6   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,8   ))     
      CALL IOVXXX(W(1,5   ),W(1,8   ),W(1,4   ),GWF ,AMP(2   ))          
      CALL FVOXXX(W(1,3   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,9   ))     
      CALL FVOXXX(W(1,9   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     10  ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,10  ),W(1,2   ),GG ,AMP(3   ))             
      CALL FVOXXX(W(1,9   ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,11  ))     
      CALL IOVXXX(W(1,5   ),W(1,11  ),W(1,4   ),GWF ,AMP(4   ))          
      CALL FVOXXX(W(1,3   ),W(1,4   ),GWF ,BMASS   ,ZERO    ,W(1,        
     &     12  ))                                                          
      CALL FVIXXX(W(1,5   ),W(1,1   ),GG ,BMASS   ,ZERO    ,W(1,13  ))     
      CALL IOVXXX(W(1,13  ),W(1,12  ),W(1,2   ),GG ,AMP(5   ))             
      CALL FVIXXX(W(1,5   ),W(1,2   ),GG ,BMASS   ,ZERO    ,W(1,14  ))     
      CALL IOVXXX(W(1,14  ),W(1,12  ),W(1,1   ),GG ,AMP(6   ))             
      CALL JVVXXX(W(1,1   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,15  ))      
      CALL FVOXXX(W(1,3   ),W(1,15  ),GG ,TMASS   ,TWIDTH  ,W(1,16  ))     
      CALL IOVXXX(W(1,5   ),W(1,16  ),W(1,4   ),GWF ,AMP(7   ))          
      CALL IOVXXX(W(1,5   ),W(1,12  ),W(1,15  ),GG ,AMP(8   ))             
c$$$      amp(2)=(0,0) !:
c$$$      amp(4)=(0,0) !:
c$$$      amp(7)=(0,0) !:
      JAMP(   1) = -AMP(   1)-AMP(   2)-AMP(   5)+AMP(   7)+AMP(   8)
      JAMP(   2) = -AMP(   3)-AMP(   4)-AMP(   6)-AMP(   7)-AMP(   8)
      gg_twmbx_undec = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          gg_twmbx_undec =gg_twmbx_undec+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2gg_twmbx_undec(i)=amp2gg_twmbx_undec(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2gg_twmbx_undec(i)=Jamp2gg_twmbx_undec(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END

