      SUBROUTINE Sgg_ttxgg(P1,ANS)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C AND HELICITIES
C FOR THE POINT IN PHASE SPACE P(0:3,NEXTERNAL_REAL)
C  
C FOR PROCESS : g g -> t t~ g g  
C  
C Crossing   1 is g g -> t t~ g g  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      Include "../genps.inc"
      INTEGER                 NCOMB,     NCROSS         
      PARAMETER (             NCOMB=  64, NCROSS=  1)
      INTEGER    THEL
      PARAMETER (THEL=NCOMB*NCROSS)
C  
C ARGUMENTS 
C  
      REAL*8 P1(0:3,NEXTERNAL_REAL),ANS(NCROSS)
C  
C LOCAL VARIABLES 
C  
      INTEGER NHEL(NEXTERNAL_REAL,NCOMB),NTRY
      REAL*8 T, P(0:3,NEXTERNAL_REAL)
      REAL*8 gg_ttxgg
      INTEGER IHEL,IDEN(NCROSS),IC(NEXTERNAL_REAL,NCROSS)
      INTEGER IPROC,JC(NEXTERNAL_REAL), I
      LOGICAL GOODHEL(NCOMB,NCROSS)
      INTEGER NGRAPHS
      REAL*8 hwgt, xtot, xtry, xrej, xr, yfrac(0:ncomb)
      INTEGER idum, ngood, igood(ncomb), jhel, j, jj
      LOGICAL warned
      REAL     xran1
      EXTERNAL xran1
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps_gg_ttxgg/  amp2,       jamp2

      character*79         hel_buff
      common/to_helicity/  hel_buff

      REAL*8 POL(2)
      common/to_polarization/ POL

      integer          isum_hel
      logical                    multi_channel
      common/to_matrix/isum_hel, multi_channel
      INTEGER MAPCONFIG(0:LMAXCONFIGS), ICONFIG
      common/to_mconfigs/mapconfig, iconfig
      DATA NTRY,IDUM /0,-1/
      DATA xtry, xrej, ngood /0,0,0/
      DATA warned/.false./
      
      SAVE yfrac, igood, jhel
      DATA NGRAPHS /  159/          
      DATA jamp2(0) /  24/          
      DATA GOODHEL/THEL*.FALSE./
      DATA (NHEL(IHEL,   1),IHEL=1, 6) /-1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,   2),IHEL=1, 6) /-1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,   3),IHEL=1, 6) /-1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,   4),IHEL=1, 6) /-1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,   5),IHEL=1, 6) /-1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,   6),IHEL=1, 6) /-1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,   7),IHEL=1, 6) /-1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,   8),IHEL=1, 6) /-1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,   9),IHEL=1, 6) /-1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  10),IHEL=1, 6) /-1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  11),IHEL=1, 6) /-1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  12),IHEL=1, 6) /-1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  13),IHEL=1, 6) /-1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  14),IHEL=1, 6) /-1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  15),IHEL=1, 6) /-1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  16),IHEL=1, 6) /-1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  17),IHEL=1, 6) /-1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  18),IHEL=1, 6) /-1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  19),IHEL=1, 6) /-1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  20),IHEL=1, 6) /-1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  21),IHEL=1, 6) /-1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  22),IHEL=1, 6) /-1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  23),IHEL=1, 6) /-1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  24),IHEL=1, 6) /-1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  25),IHEL=1, 6) /-1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  26),IHEL=1, 6) /-1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  27),IHEL=1, 6) /-1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  28),IHEL=1, 6) /-1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  29),IHEL=1, 6) /-1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  30),IHEL=1, 6) /-1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  31),IHEL=1, 6) /-1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  32),IHEL=1, 6) /-1, 1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  33),IHEL=1, 6) / 1,-1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  34),IHEL=1, 6) / 1,-1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  35),IHEL=1, 6) / 1,-1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  36),IHEL=1, 6) / 1,-1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  37),IHEL=1, 6) / 1,-1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  38),IHEL=1, 6) / 1,-1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  39),IHEL=1, 6) / 1,-1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  40),IHEL=1, 6) / 1,-1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  41),IHEL=1, 6) / 1,-1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  42),IHEL=1, 6) / 1,-1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  43),IHEL=1, 6) / 1,-1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  44),IHEL=1, 6) / 1,-1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  45),IHEL=1, 6) / 1,-1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  46),IHEL=1, 6) / 1,-1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  47),IHEL=1, 6) / 1,-1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  48),IHEL=1, 6) / 1,-1, 1, 1, 1, 1/
      DATA (NHEL(IHEL,  49),IHEL=1, 6) / 1, 1,-1,-1,-1,-1/
      DATA (NHEL(IHEL,  50),IHEL=1, 6) / 1, 1,-1,-1,-1, 1/
      DATA (NHEL(IHEL,  51),IHEL=1, 6) / 1, 1,-1,-1, 1,-1/
      DATA (NHEL(IHEL,  52),IHEL=1, 6) / 1, 1,-1,-1, 1, 1/
      DATA (NHEL(IHEL,  53),IHEL=1, 6) / 1, 1,-1, 1,-1,-1/
      DATA (NHEL(IHEL,  54),IHEL=1, 6) / 1, 1,-1, 1,-1, 1/
      DATA (NHEL(IHEL,  55),IHEL=1, 6) / 1, 1,-1, 1, 1,-1/
      DATA (NHEL(IHEL,  56),IHEL=1, 6) / 1, 1,-1, 1, 1, 1/
      DATA (NHEL(IHEL,  57),IHEL=1, 6) / 1, 1, 1,-1,-1,-1/
      DATA (NHEL(IHEL,  58),IHEL=1, 6) / 1, 1, 1,-1,-1, 1/
      DATA (NHEL(IHEL,  59),IHEL=1, 6) / 1, 1, 1,-1, 1,-1/
      DATA (NHEL(IHEL,  60),IHEL=1, 6) / 1, 1, 1,-1, 1, 1/
      DATA (NHEL(IHEL,  61),IHEL=1, 6) / 1, 1, 1, 1,-1,-1/
      DATA (NHEL(IHEL,  62),IHEL=1, 6) / 1, 1, 1, 1,-1, 1/
      DATA (NHEL(IHEL,  63),IHEL=1, 6) / 1, 1, 1, 1, 1,-1/
      DATA (NHEL(IHEL,  64),IHEL=1, 6) / 1, 1, 1, 1, 1, 1/
      DATA (  IC(IHEL,  1),IHEL=1, 6) / 1, 2, 3, 4, 5, 6/
      DATA (IDEN(IHEL),IHEL=  1,  1) / 512/
C ----------
C BEGIN CODE
C ----------
      NTRY=NTRY+1
      DO IPROC=1,NCROSS
      CALL SWITCHMOM(P1,P,IC(1,IPROC),JC,NEXTERNAL_REAL)
      DO IHEL=1,NEXTERNAL_REAL
         JC(IHEL) = +1
      ENDDO
       
      IF (multi_channel) THEN
          DO IHEL=1,NGRAPHS
              amp2(ihel)=0d0
              jamp2(ihel)=0d0
          ENDDO
          DO IHEL=1,int(jamp2(0))
              jamp2(ihel)=0d0
          ENDDO
      ENDIF
      ANS(IPROC) = 0D0
      write(hel_buff,'(16i5)') (0,i=1,NEXTERNAL_REAL)
      IF (ISUM_HEL .EQ. 0 .OR. NTRY .LT. 10) THEN
          DO IHEL=1,NCOMB
             IF (GOODHEL(IHEL,IPROC) .OR. NTRY .LT. 2) THEN
                 T=gg_ttxgg(P ,NHEL(1,IHEL),JC(1))            
               DO JJ=1,nincoming
                 IF(POL(JJ).NE.1d0.AND.
     &              NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                   T=T*ABS(POL(JJ))
                 ELSE IF(POL(JJ).NE.1d0)THEN
                   T=T*(2d0-ABS(POL(JJ)))
                 ENDIF
               ENDDO
               ANS(IPROC)=ANS(IPROC)+T
               IF (T .NE. 0D0 .AND. .NOT.    GOODHEL(IHEL,IPROC)) THEN
                   GOODHEL(IHEL,IPROC)=.TRUE.
                   NGOOD = NGOOD +1
                   IGOOD(NGOOD) = IHEL
               ENDIF
             ENDIF
          ENDDO
          JHEL = 1
          ISUM_HEL=MIN(ISUM_HEL,NGOOD)
      ELSE              !RANDOM HELICITY
          DO J=1,ISUM_HEL
              JHEL=JHEL+1
              IF (JHEL .GT. NGOOD) JHEL=1
              HWGT = REAL(NGOOD)/REAL(ISUM_HEL)
              IHEL = IGOOD(JHEL)
              T=gg_ttxgg(P ,NHEL(1,IHEL),JC(1))            
              DO JJ=1,nincoming
                IF(POL(JJ).NE.1d0.AND.
     &             NHEL(JJ,IHEL).EQ.INT(SIGN(1d0,POL(JJ)))) THEN
                  T=T*ABS(POL(JJ))
                ELSE IF(POL(JJ).NE.1d0)THEN
                  T=T*(2d0-ABS(POL(JJ)))
                ENDIF
              ENDDO
              ANS(IPROC)=ANS(IPROC)+T*HWGT
          ENDDO
          IF (ISUM_HEL .EQ. 1) THEN
              WRITE(HEL_BUFF,'(16i5)')(NHEL(i,IHEL),i=1,NEXTERNAL_REAL)
          ENDIF
      ENDIF
      IF (MULTI_CHANNEL) THEN
          XTOT=0D0
          DO IHEL=1,MAPCONFIG(0)
              XTOT=XTOT+AMP2(MAPCONFIG(IHEL))
          ENDDO
          IF (XTOT.NE.0D0) THEN
              ANS(IPROC)=ANS(IPROC)*AMP2(MAPCONFIG(ICONFIG))/XTOT
          ELSE
              ANS(IPROC)=0D0
          ENDIF
      ENDIF
      ANS(IPROC)=ANS(IPROC)/DBLE(IDEN(IPROC))
      ENDDO
      END
       
       
      REAL*8 FUNCTION gg_ttxgg(P,NHEL,IC)
C  
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL_REAL)
C  
C FOR PROCESS : g g -> t t~ g g  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS= 159,NEIGEN= 24) 
      include "../genps.inc"
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS= 139, NCOLOR=  24) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 P(0:3,NEXTERNAL_REAL)
      INTEGER NHEL(NEXTERNAL_REAL), IC(NEXTERNAL_REAL)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J
      COMPLEX*16 ZTEMP
      REAL*8 DENOM(NCOLOR), CF(NCOLOR,NCOLOR)
      COMPLEX*16 AMP(NGRAPHS), JAMP(NCOLOR)
      COMPLEX*16 W(18,NWAVEFUNCS)
C  
C GLOBAL VARIABLES
C  
      Double Precision amp2(maxamps), jamp2(0:maxamps)
      common/to_amps_gg_ttxgg/  amp2,       jamp2
      include "../coupl.inc"
C  
C COLOR DATA
C  
      DATA Denom(1  )/           54/                                       
      DATA (CF(i,1  ),i=1  ,6  ) /   512,    8,  -64,   80,    8,  -10/    
      DATA (CF(i,1  ),i=7  ,12 ) /    -1,  -64,  -64,    8,   -1,  -10/    
      DATA (CF(i,1  ),i=13 ,18 ) /    -1,   62,  -10,  -28,   80,    8/    
      DATA (CF(i,1  ),i=19 ,24 ) /   -10,   62,   71,   62,   -1,    8/    
C               T[ 3, 4, 2, 5, 1, 6]                                       
      DATA Denom(2  )/           54/                                       
      DATA (CF(i,2  ),i=1  ,6  ) /     8,  512,   80,  -64,    8,    8/    
      DATA (CF(i,2  ),i=7  ,12 ) /    -1,  -64,   -1,  -10,   62,   71/    
      DATA (CF(i,2  ),i=13 ,18 ) /    62,   -1,  -28,  -10,   -1,  -10/    
      DATA (CF(i,2  ),i=19 ,24 ) /   -10,   62,    8,   80,  -64,    8/    
C               T[ 3, 4, 2, 1, 6, 5]                                       
      DATA Denom(3  )/           54/                                       
      DATA (CF(i,3  ),i=1  ,6  ) /   -64,   80,  512,    8,  -64,   -1/    
      DATA (CF(i,3  ),i=7  ,12 ) /     8,    8,    8,  -64,    8,   80/    
      DATA (CF(i,3  ),i=13 ,18 ) /   -10,  -28,   -1,   62,  -10,   -1/    
      DATA (CF(i,3  ),i=19 ,24 ) /    62,  -10,   62,   71,  -10,   -1/    
C               T[ 3, 4, 2, 5, 6, 1]                                       
      DATA Denom(4  )/           54/                                       
      DATA (CF(i,4  ),i=1  ,6  ) /    80,  -64,    8,  512,  -64,  -64/    
      DATA (CF(i,4  ),i=7  ,12 ) /     8,    8,  -10,   -1,  -10,   -1/    
      DATA (CF(i,4  ),i=13 ,18 ) /   -28,  -10,   62,   -1,   71,   62/    
      DATA (CF(i,4  ),i=19 ,24 ) /    62,  -10,   80,    8,    8,   -1/    
C               T[ 3, 4, 2, 6, 1, 5]                                       
      DATA Denom(5  )/           54/                                       
      DATA (CF(i,5  ),i=1  ,6  ) /     8,    8,  -64,  -64,  512,    8/    
      DATA (CF(i,5  ),i=7  ,12 ) /   -64,   80,   -1,    8,   80,    8/    
      DATA (CF(i,5  ),i=13 ,18 ) /    62,   62,  -10,  -10,   62,   71/    
      DATA (CF(i,5  ),i=19 ,24 ) /   -28,   -1,  -10,   -1,   -1,  -10/    
C               T[ 3, 4, 2, 6, 5, 1]                                       
      DATA Denom(6  )/           54/                                       
      DATA (CF(i,6  ),i=1  ,6  ) /   -10,    8,   -1,  -64,    8,  512/    
      DATA (CF(i,6  ),i=7  ,12 ) /   -64,   -1,   62,  -10,   -1,    8/    
      DATA (CF(i,6  ),i=13 ,18 ) /    62,   -1,  -10,    8,   62,  -28/    
      DATA (CF(i,6  ),i=19 ,24 ) /    71,   80,    8,  -64,   80,  -10/    
C               T[ 3, 4, 6, 2, 1, 5]                                       
      DATA Denom(7  )/           54/                                       
      DATA (CF(i,7  ),i=1  ,6  ) /    -1,   -1,    8,    8,  -64,  -64/    
      DATA (CF(i,7  ),i=7  ,12 ) /   512,  -10,  -10,   80,    8,  -64/    
      DATA (CF(i,7  ),i=13 ,18 ) /    71,  -10,   -1,   80,  -28,   62/    
      DATA (CF(i,7  ),i=19 ,24 ) /    62,    8,   -1,    8,  -10,   62/    
C               T[ 3, 4, 6, 2, 5, 1]                                       
      DATA Denom(8  )/           54/                                       
      DATA (CF(i,8  ),i=1  ,6  ) /   -64,  -64,    8,    8,   80,   -1/    
      DATA (CF(i,8  ),i=7  ,12 ) /   -10,  512,    8,   -1,   71,   62/    
      DATA (CF(i,8  ),i=13 ,18 ) /   -10,  -10,   62,   62,    8,   80/    
      DATA (CF(i,8  ),i=19 ,24 ) /    -1,  -28,   -1,  -10,    8,  -64/    
C               T[ 3, 4, 2, 1, 5, 6]                                       
      DATA Denom(9  )/           54/                                       
      DATA (CF(i,9  ),i=1  ,6  ) /   -64,   -1,    8,  -10,   -1,   62/    
      DATA (CF(i,9  ),i=7  ,12 ) /   -10,    8,  512,  -64,    8,   -1/    
      DATA (CF(i,9  ),i=13 ,18 ) /     8,   71,   80,   62,    8,  -64/    
      DATA (CF(i,9  ),i=19 ,24 ) /    -1,  -10,   62,  -28,  -10,   80/    
C               T[ 3, 4, 5, 2, 1, 6]                                       
      DATA Denom(10 )/           54/                                       
      DATA (CF(i,10 ),i=1  ,6  ) /     8,  -10,  -64,   -1,    8,  -10/    
      DATA (CF(i,10 ),i=7  ,12 ) /    80,   -1,  -64,  512,  -64,    8/    
      DATA (CF(i,10 ),i=13 ,18 ) /    80,   62,    8,   71,   -1,    8/    
      DATA (CF(i,10 ),i=19 ,24 ) /   -10,   -1,  -28,   62,   62,  -10/    
C               T[ 3, 4, 5, 2, 6, 1]                                       
      DATA Denom(11 )/           54/                                       
      DATA (CF(i,11 ),i=1  ,6  ) /    -1,   62,    8,  -10,   80,   -1/    
      DATA (CF(i,11 ),i=7  ,12 ) /     8,   71,    8,  -64,  512,  -64/    
      DATA (CF(i,11 ),i=13 ,18 ) /     8,  -10,  -64,   -1,  -10,   80/    
      DATA (CF(i,11 ),i=19 ,24 ) /    -1,    8,   62,  -10,  -28,   62/    
C               T[ 3, 4, 5, 6, 2, 1]                                       
      DATA Denom(12 )/           54/                                       
      DATA (CF(i,12 ),i=1  ,6  ) /   -10,   71,   80,   -1,    8,    8/    
      DATA (CF(i,12 ),i=7  ,12 ) /   -64,   62,   -1,    8,  -64,  512/    
      DATA (CF(i,12 ),i=13 ,18 ) /    -1,   -1,    8,    8,   62,  -10/    
      DATA (CF(i,12 ),i=19 ,24 ) /   -10,  -64,  -10,   80,   62,  -28/    
C               T[ 3, 4, 6, 5, 2, 1]                                       
      DATA Denom(13 )/           54/                                       
      DATA (CF(i,13 ),i=1  ,6  ) /    -1,   62,  -10,  -28,   62,   62/    
      DATA (CF(i,13 ),i=7  ,12 ) /    71,  -10,    8,   80,    8,   -1/    
      DATA (CF(i,13 ),i=13 ,18 ) /   512,    8,  -64,   80,    8,  -64/    
      DATA (CF(i,13 ),i=19 ,24 ) /   -64,    8,   -1,  -10,  -10,   -1/    
C               T[ 3, 4, 5, 1, 6, 2]                                       
      DATA Denom(14 )/           54/                                       
      DATA (CF(i,14 ),i=1  ,6  ) /    62,   -1,  -28,  -10,   62,   -1/    
      DATA (CF(i,14 ),i=7  ,12 ) /   -10,  -10,   71,   62,  -10,   -1/    
      DATA (CF(i,14 ),i=13 ,18 ) /     8,  512,   80,  -64,    8,   -1/    
      DATA (CF(i,14 ),i=19 ,24 ) /   -64,    8,  -64,    8,    8,   80/    
C               T[ 3, 4, 1, 6, 5, 2]                                       
      DATA Denom(15 )/           54/                                       
      DATA (CF(i,15 ),i=1  ,6  ) /   -10,  -28,   -1,   62,  -10,  -10/    
      DATA (CF(i,15 ),i=7  ,12 ) /    -1,   62,   80,    8,  -64,    8/    
      DATA (CF(i,15 ),i=13 ,18 ) /   -64,   80,  512,    8,   -1,    8/    
      DATA (CF(i,15 ),i=19 ,24 ) /     8,  -64,  -10,   -1,   62,   71/    
C               T[ 3, 4, 5, 6, 1, 2]                                       
      DATA Denom(16 )/           54/                                       
      DATA (CF(i,16 ),i=1  ,6  ) /   -28,  -10,   62,   -1,  -10,    8/    
      DATA (CF(i,16 ),i=7  ,12 ) /    80,   62,   62,   71,   -1,    8/    
      DATA (CF(i,16 ),i=13 ,18 ) /    80,  -64,    8,  512,   -1,  -10/    
      DATA (CF(i,16 ),i=19 ,24 ) /     8,  -64,    8,  -64,   -1,  -10/    
C               T[ 3, 4, 6, 1, 5, 2]                                       
      DATA Denom(17 )/           54/                                       
      DATA (CF(i,17 ),i=1  ,6  ) /    80,   -1,  -10,   71,   62,   62/    
      DATA (CF(i,17 ),i=7  ,12 ) /   -28,    8,    8,   -1,  -10,   62/    
      DATA (CF(i,17 ),i=13 ,18 ) /     8,    8,   -1,   -1,  512,  -64/    
      DATA (CF(i,17 ),i=19 ,24 ) /   -64,  -10,   80,  -10,    8,  -64/    
C               T[ 3, 4, 1, 5, 2, 6]                                       
      DATA Denom(18 )/           54/                                       
      DATA (CF(i,18 ),i=1  ,6  ) /     8,  -10,   -1,   62,   71,  -28/    
      DATA (CF(i,18 ),i=7  ,12 ) /    62,   80,  -64,    8,   80,  -10/    
      DATA (CF(i,18 ),i=13 ,18 ) /   -64,   -1,    8,  -10,  -64,  512/    
      DATA (CF(i,18 ),i=19 ,24 ) /     8,   -1,  -10,   62,   -1,    8/    
C               T[ 3, 4, 5, 1, 2, 6]                                       
      DATA Denom(19 )/           54/                                       
      DATA (CF(i,19 ),i=1  ,6  ) /   -10,  -10,   62,   62,  -28,   71/    
      DATA (CF(i,19 ),i=7  ,12 ) /    62,   -1,   -1,  -10,   -1,  -10/    
      DATA (CF(i,19 ),i=13 ,18 ) /   -64,  -64,    8,    8,  -64,    8/    
      DATA (CF(i,19 ),i=19 ,24 ) /   512,   80,    8,   -1,   80,    8/    
C               T[ 3, 4, 1, 5, 6, 2]                                       
      DATA Denom(20 )/           54/                                       
      DATA (CF(i,20 ),i=1  ,6  ) /    62,   62,  -10,  -10,   -1,   80/    
      DATA (CF(i,20 ),i=7  ,12 ) /     8,  -28,  -10,   -1,    8,  -64/    
      DATA (CF(i,20 ),i=13 ,18 ) /     8,    8,  -64,  -64,  -10,   -1/    
      DATA (CF(i,20 ),i=19 ,24 ) /    80,  512,   -1,    8,   71,   62/    
C               T[ 3, 4, 6, 5, 1, 2]                                       
      DATA Denom(21 )/           54/                                       
      DATA (CF(i,21 ),i=1  ,6  ) /    71,    8,   62,   80,  -10,    8/    
      DATA (CF(i,21 ),i=7  ,12 ) /    -1,   -1,   62,  -28,   62,  -10/    
      DATA (CF(i,21 ),i=13 ,18 ) /    -1,  -64,  -10,    8,   80,  -10/    
      DATA (CF(i,21 ),i=19 ,24 ) /     8,   -1,  512,  -64,  -64,    8/    
C               T[ 3, 4, 1, 6, 2, 5]                                       
      DATA Denom(22 )/           54/                                       
      DATA (CF(i,22 ),i=1  ,6  ) /    62,   80,   71,    8,   -1,  -64/    
      DATA (CF(i,22 ),i=7  ,12 ) /     8,  -10,  -28,   62,  -10,   80/    
      DATA (CF(i,22 ),i=13 ,18 ) /   -10,    8,   -1,  -64,  -10,   62/    
      DATA (CF(i,22 ),i=19 ,24 ) /    -1,    8,  -64,  512,    8,   -1/    
C               T[ 3, 4, 6, 1, 2, 5]                                       
      DATA Denom(23 )/           54/                                       
      DATA (CF(i,23 ),i=1  ,6  ) /    -1,  -64,  -10,    8,   -1,   80/    
      DATA (CF(i,23 ),i=7  ,12 ) /   -10,    8,  -10,   62,  -28,   62/    
      DATA (CF(i,23 ),i=13 ,18 ) /   -10,    8,   62,   -1,    8,   -1/    
      DATA (CF(i,23 ),i=19 ,24 ) /    80,   71,  -64,    8,  512,  -64/    
C               T[ 3, 4, 1, 2, 6, 5]                                       
      DATA Denom(24 )/           54/                                       
      DATA (CF(i,24 ),i=1  ,6  ) /     8,    8,   -1,   -1,  -10,  -10/    
      DATA (CF(i,24 ),i=7  ,12 ) /    62,  -64,   80,  -10,   62,  -28/    
      DATA (CF(i,24 ),i=13 ,18 ) /    -1,   80,   71,  -10,  -64,    8/    
      DATA (CF(i,24 ),i=19 ,24 ) /     8,   62,    8,   -1,  -64,  512/    
C               T[ 3, 4, 1, 2, 5, 6]                                       
C ----------
C BEGIN CODE
C ----------
      CALL VXXXXX(P(0,1   ),ZERO ,NHEL(1   ),-1*IC(1   ),W(1,1   ))        
      CALL VXXXXX(P(0,2   ),ZERO ,NHEL(2   ),-1*IC(2   ),W(1,2   ))        
      CALL OXXXXX(P(0,3   ),TMASS ,NHEL(3   ),+1*IC(3   ),W(1,3   ))       
      CALL IXXXXX(P(0,4   ),TMASS ,NHEL(4   ),-1*IC(4   ),W(1,4   ))       
      CALL VXXXXX(P(0,5   ),ZERO ,NHEL(5   ),+1*IC(5   ),W(1,5   ))        
      CALL VXXXXX(P(0,6   ),ZERO ,NHEL(6   ),+1*IC(6   ),W(1,6   ))        
      CALL FVOXXX(W(1,3   ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,7   ))     
      CALL JIOXXX(W(1,4   ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,8   ))     
      CALL JVVXXX(W(1,5   ),W(1,8   ),G ,ZERO    ,ZERO    ,W(1,9   ))      
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,9   ),G ,AMP(1   ))              
      CALL JVVXXX(W(1,5   ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,10  ))      
      CALL FVIXXX(W(1,4   ),W(1,10  ),GG ,TMASS   ,TWIDTH  ,W(1,11  ))     
      CALL JIOXXX(W(1,11  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,12  ))     
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,12  ),G ,AMP(2   ))              
      CALL FVIXXX(W(1,11  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,13  ))     
      CALL IOVXXX(W(1,13  ),W(1,3   ),W(1,6   ),GG ,AMP(3   ))             
      CALL FVOXXX(W(1,7   ),W(1,10  ),GG ,TMASS   ,TWIDTH  ,W(1,14  ))     
      CALL IOVXXX(W(1,4   ),W(1,14  ),W(1,6   ),GG ,AMP(4   ))             
      CALL JVVXXX(W(1,8   ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,15  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,15  ),G ,AMP(5   ))              
      CALL GGGGXX(W(1,5   ),W(1,1   ),W(1,8   ),W(1,6   ),G ,AMP(6   ))    
      CALL GGGGXX(W(1,8   ),W(1,5   ),W(1,1   ),W(1,6   ),G ,AMP(7   ))    
      CALL GGGGXX(W(1,1   ),W(1,8   ),W(1,5   ),W(1,6   ),G ,AMP(8   ))    
      CALL IOVXXX(W(1,11  ),W(1,7   ),W(1,6   ),GG ,AMP(9   ))             
      CALL VVVXXX(W(1,6   ),W(1,8   ),W(1,10  ),G ,AMP(10  ))              
      CALL JVVXXX(W(1,5   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,16  ))      
      CALL FVOXXX(W(1,3   ),W(1,16  ),GG ,TMASS   ,TWIDTH  ,W(1,17  ))     
      CALL JIOXXX(W(1,4   ),W(1,17  ),GG ,ZERO    ,ZERO    ,W(1,18  ))     
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,18  ),G ,AMP(11  ))              
      CALL FVIXXX(W(1,4   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,19  ))     
      CALL JIOXXX(W(1,19  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,20  ))     
      CALL JVVXXX(W(1,5   ),W(1,20  ),G ,ZERO    ,ZERO    ,W(1,21  ))      
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,21  ),G ,AMP(12  ))              
      CALL FVIXXX(W(1,19  ),W(1,16  ),GG ,TMASS   ,TWIDTH  ,W(1,22  ))     
      CALL IOVXXX(W(1,22  ),W(1,3   ),W(1,6   ),GG ,AMP(13  ))             
      CALL FVOXXX(W(1,17  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,23  ))     
      CALL IOVXXX(W(1,4   ),W(1,23  ),W(1,6   ),GG ,AMP(14  ))             
      CALL JVVXXX(W(1,20  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,24  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,24  ),G ,AMP(15  ))              
      CALL GGGGXX(W(1,5   ),W(1,2   ),W(1,20  ),W(1,6   ),G ,AMP(16  ))    
      CALL GGGGXX(W(1,20  ),W(1,5   ),W(1,2   ),W(1,6   ),G ,AMP(17  ))    
      CALL GGGGXX(W(1,2   ),W(1,20  ),W(1,5   ),W(1,6   ),G ,AMP(18  ))    
      CALL IOVXXX(W(1,19  ),W(1,17  ),W(1,6   ),GG ,AMP(19  ))             
      CALL VVVXXX(W(1,6   ),W(1,20  ),W(1,16  ),G ,AMP(20  ))              
      CALL FVOXXX(W(1,3   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,25  ))     
      CALL FVOXXX(W(1,25  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,26  ))     
      CALL JIOXXX(W(1,4   ),W(1,26  ),GG ,ZERO    ,ZERO    ,W(1,27  ))     
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,27  ),G ,AMP(21  ))              
      CALL JIOXXX(W(1,19  ),W(1,25  ),GG ,ZERO    ,ZERO    ,W(1,28  ))     
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,28  ),G ,AMP(22  ))              
      CALL FVIXXX(W(1,19  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,29  ))     
      CALL FVIXXX(W(1,29  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,30  ))     
      CALL IOVXXX(W(1,30  ),W(1,3   ),W(1,6   ),GG ,AMP(23  ))             
      CALL FVOXXX(W(1,26  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,31  ))     
      CALL IOVXXX(W(1,4   ),W(1,31  ),W(1,6   ),GG ,AMP(24  ))             
      CALL JIOXXX(W(1,29  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,32  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,32  ),G ,AMP(25  ))              
      CALL IOVXXX(W(1,19  ),W(1,26  ),W(1,6   ),GG ,AMP(26  ))             
      CALL IOVXXX(W(1,29  ),W(1,25  ),W(1,6   ),GG ,AMP(27  ))             
      CALL FVIXXX(W(1,4   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,33  ))     
      CALL JIOXXX(W(1,33  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,34  ))     
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,34  ),G ,AMP(28  ))              
      CALL FVIXXX(W(1,33  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,35  ))     
      CALL JIOXXX(W(1,35  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,36  ))     
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,36  ),G ,AMP(29  ))              
      CALL FVIXXX(W(1,35  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,37  ))     
      CALL IOVXXX(W(1,37  ),W(1,3   ),W(1,6   ),GG ,AMP(30  ))             
      CALL FVOXXX(W(1,7   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,38  ))     
      CALL FVOXXX(W(1,38  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,39  ))     
      CALL IOVXXX(W(1,4   ),W(1,39  ),W(1,6   ),GG ,AMP(31  ))             
      CALL JIOXXX(W(1,4   ),W(1,38  ),GG ,ZERO    ,ZERO    ,W(1,40  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,40  ),G ,AMP(32  ))              
      CALL IOVXXX(W(1,35  ),W(1,7   ),W(1,6   ),GG ,AMP(33  ))             
      CALL IOVXXX(W(1,33  ),W(1,38  ),W(1,6   ),GG ,AMP(34  ))             
      CALL FVOXXX(W(1,7   ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,41  ))     
      CALL JIOXXX(W(1,4   ),W(1,41  ),GG ,ZERO    ,ZERO    ,W(1,42  ))     
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,42  ),G ,AMP(35  ))              
      CALL FVIXXX(W(1,19  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,43  ))     
      CALL JIOXXX(W(1,43  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,44  ))     
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,44  ),G ,AMP(36  ))              
      CALL FVIXXX(W(1,43  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,45  ))     
      CALL IOVXXX(W(1,45  ),W(1,3   ),W(1,6   ),GG ,AMP(37  ))             
      CALL FVOXXX(W(1,41  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,46  ))     
      CALL IOVXXX(W(1,4   ),W(1,46  ),W(1,6   ),GG ,AMP(38  ))             
      CALL JIOXXX(W(1,19  ),W(1,7   ),GG ,ZERO    ,ZERO    ,W(1,47  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,47  ),G ,AMP(39  ))              
      CALL IOVXXX(W(1,43  ),W(1,7   ),W(1,6   ),GG ,AMP(40  ))             
      CALL IOVXXX(W(1,19  ),W(1,41  ),W(1,6   ),GG ,AMP(41  ))             
      CALL FVIXXX(W(1,4   ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,48  ))     
      CALL JIOXXX(W(1,48  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,49  ))     
      CALL JVVXXX(W(1,5   ),W(1,49  ),G ,ZERO    ,ZERO    ,W(1,50  ))      
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,50  ),G ,AMP(42  ))              
      CALL FVOXXX(W(1,3   ),W(1,10  ),GG ,TMASS   ,TWIDTH  ,W(1,51  ))     
      CALL JIOXXX(W(1,4   ),W(1,51  ),GG ,ZERO    ,ZERO    ,W(1,52  ))     
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,52  ),G ,AMP(43  ))              
      CALL FVIXXX(W(1,48  ),W(1,10  ),GG ,TMASS   ,TWIDTH  ,W(1,53  ))     
      CALL IOVXXX(W(1,53  ),W(1,3   ),W(1,6   ),GG ,AMP(44  ))             
      CALL FVOXXX(W(1,51  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,54  ))     
      CALL IOVXXX(W(1,4   ),W(1,54  ),W(1,6   ),GG ,AMP(45  ))             
      CALL JVVXXX(W(1,49  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,55  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,55  ),G ,AMP(46  ))              
      CALL GGGGXX(W(1,5   ),W(1,1   ),W(1,49  ),W(1,6   ),G ,AMP(47  ))    
      CALL GGGGXX(W(1,49  ),W(1,5   ),W(1,1   ),W(1,6   ),G ,AMP(48  ))    
      CALL GGGGXX(W(1,1   ),W(1,49  ),W(1,5   ),W(1,6   ),G ,AMP(49  ))    
      CALL IOVXXX(W(1,48  ),W(1,51  ),W(1,6   ),GG ,AMP(50  ))             
      CALL VVVXXX(W(1,6   ),W(1,49  ),W(1,10  ),G ,AMP(51  ))              
      CALL FVIXXX(W(1,4   ),W(1,16  ),GG ,TMASS   ,TWIDTH  ,W(1,56  ))     
      CALL JIOXXX(W(1,56  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,57  ))     
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,57  ),G ,AMP(52  ))              
      CALL FVOXXX(W(1,3   ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,58  ))     
      CALL JIOXXX(W(1,4   ),W(1,58  ),GG ,ZERO    ,ZERO    ,W(1,59  ))     
      CALL JVVXXX(W(1,5   ),W(1,59  ),G ,ZERO    ,ZERO    ,W(1,60  ))      
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,60  ),G ,AMP(53  ))              
      CALL FVIXXX(W(1,56  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,61  ))     
      CALL IOVXXX(W(1,61  ),W(1,3   ),W(1,6   ),GG ,AMP(54  ))             
      CALL FVOXXX(W(1,58  ),W(1,16  ),GG ,TMASS   ,TWIDTH  ,W(1,62  ))     
      CALL IOVXXX(W(1,4   ),W(1,62  ),W(1,6   ),GG ,AMP(55  ))             
      CALL JVVXXX(W(1,59  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,63  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,63  ),G ,AMP(56  ))              
      CALL GGGGXX(W(1,5   ),W(1,2   ),W(1,59  ),W(1,6   ),G ,AMP(57  ))    
      CALL GGGGXX(W(1,59  ),W(1,5   ),W(1,2   ),W(1,6   ),G ,AMP(58  ))    
      CALL GGGGXX(W(1,2   ),W(1,59  ),W(1,5   ),W(1,6   ),G ,AMP(59  ))    
      CALL IOVXXX(W(1,56  ),W(1,58  ),W(1,6   ),GG ,AMP(60  ))             
      CALL VVVXXX(W(1,6   ),W(1,59  ),W(1,16  ),G ,AMP(61  ))              
      CALL JIOXXX(W(1,48  ),W(1,25  ),GG ,ZERO    ,ZERO    ,W(1,64  ))     
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,64  ),G ,AMP(62  ))              
      CALL FVOXXX(W(1,25  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,65  ))     
      CALL JIOXXX(W(1,4   ),W(1,65  ),GG ,ZERO    ,ZERO    ,W(1,66  ))     
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,66  ),G ,AMP(63  ))              
      CALL FVIXXX(W(1,48  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,67  ))     
      CALL FVIXXX(W(1,67  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,68  ))     
      CALL IOVXXX(W(1,68  ),W(1,3   ),W(1,6   ),GG ,AMP(64  ))             
      CALL FVOXXX(W(1,65  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,69  ))     
      CALL IOVXXX(W(1,4   ),W(1,69  ),W(1,6   ),GG ,AMP(65  ))             
      CALL JIOXXX(W(1,67  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,70  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,70  ),G ,AMP(66  ))              
      CALL IOVXXX(W(1,48  ),W(1,65  ),W(1,6   ),GG ,AMP(67  ))             
      CALL IOVXXX(W(1,67  ),W(1,25  ),W(1,6   ),GG ,AMP(68  ))             
      CALL FVIXXX(W(1,33  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,71  ))     
      CALL JIOXXX(W(1,71  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,72  ))     
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,72  ),G ,AMP(69  ))              
      CALL JIOXXX(W(1,33  ),W(1,58  ),GG ,ZERO    ,ZERO    ,W(1,73  ))     
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,73  ),G ,AMP(70  ))              
      CALL FVIXXX(W(1,71  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,74  ))     
      CALL IOVXXX(W(1,74  ),W(1,3   ),W(1,6   ),GG ,AMP(71  ))             
      CALL FVOXXX(W(1,58  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,75  ))     
      CALL FVOXXX(W(1,75  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,76  ))     
      CALL IOVXXX(W(1,4   ),W(1,76  ),W(1,6   ),GG ,AMP(72  ))             
      CALL JIOXXX(W(1,4   ),W(1,75  ),GG ,ZERO    ,ZERO    ,W(1,77  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,77  ),G ,AMP(73  ))              
      CALL IOVXXX(W(1,71  ),W(1,58  ),W(1,6   ),GG ,AMP(74  ))             
      CALL IOVXXX(W(1,33  ),W(1,75  ),W(1,6   ),GG ,AMP(75  ))             
      CALL FVIXXX(W(1,48  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,78  ))     
      CALL JIOXXX(W(1,78  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,79  ))     
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,79  ),G ,AMP(76  ))              
      CALL FVOXXX(W(1,58  ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,80  ))     
      CALL JIOXXX(W(1,4   ),W(1,80  ),GG ,ZERO    ,ZERO    ,W(1,81  ))     
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,81  ),G ,AMP(77  ))              
      CALL FVIXXX(W(1,78  ),W(1,1   ),GG ,TMASS   ,TWIDTH  ,W(1,82  ))     
      CALL IOVXXX(W(1,82  ),W(1,3   ),W(1,6   ),GG ,AMP(78  ))             
      CALL FVOXXX(W(1,80  ),W(1,2   ),GG ,TMASS   ,TWIDTH  ,W(1,83  ))     
      CALL IOVXXX(W(1,4   ),W(1,83  ),W(1,6   ),GG ,AMP(79  ))             
      CALL JIOXXX(W(1,48  ),W(1,58  ),GG ,ZERO    ,ZERO    ,W(1,84  ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,84  ),G ,AMP(80  ))              
      CALL IOVXXX(W(1,78  ),W(1,58  ),W(1,6   ),GG ,AMP(81  ))             
      CALL IOVXXX(W(1,48  ),W(1,80  ),W(1,6   ),GG ,AMP(82  ))             
      CALL JIOXXX(W(1,4   ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,85  ))     
      CALL JVVXXX(W(1,85  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,86  ))      
      CALL JVVXXX(W(1,5   ),W(1,86  ),G ,ZERO    ,ZERO    ,W(1,87  ))      
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,87  ),G ,AMP(83  ))              
      CALL JVVXXX(W(1,10  ),W(1,85  ),G ,ZERO    ,ZERO    ,W(1,88  ))      
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,88  ),G ,AMP(84  ))              
      CALL JVVXXX(W(1,10  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,89  ))      
      CALL FVIXXX(W(1,4   ),W(1,89  ),GG ,TMASS   ,TWIDTH  ,W(1,90  ))     
      CALL IOVXXX(W(1,90  ),W(1,3   ),W(1,6   ),GG ,AMP(85  ))             
      CALL FVOXXX(W(1,3   ),W(1,89  ),GG ,TMASS   ,TWIDTH  ,W(1,91  ))     
      CALL IOVXXX(W(1,4   ),W(1,91  ),W(1,6   ),GG ,AMP(86  ))             
      CALL JVVXXX(W(1,86  ),W(1,1   ),G ,ZERO    ,ZERO    ,W(1,92  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,92  ),G ,AMP(87  ))              
      CALL GGGGXX(W(1,10  ),W(1,2   ),W(1,85  ),W(1,6   ),G ,AMP(88  ))    
      CALL GGGGXX(W(1,85  ),W(1,10  ),W(1,2   ),W(1,6   ),G ,AMP(89  ))    
      CALL GGGGXX(W(1,2   ),W(1,85  ),W(1,10  ),W(1,6   ),G ,AMP(90  ))    
      CALL GGGGXX(W(1,5   ),W(1,1   ),W(1,86  ),W(1,6   ),G ,AMP(91  ))    
      CALL GGGGXX(W(1,86  ),W(1,5   ),W(1,1   ),W(1,6   ),G ,AMP(92  ))    
      CALL GGGGXX(W(1,1   ),W(1,86  ),W(1,5   ),W(1,6   ),G ,AMP(93  ))    
      CALL VVVXXX(W(1,6   ),W(1,89  ),W(1,85  ),G ,AMP(94  ))              
      CALL VVVXXX(W(1,6   ),W(1,86  ),W(1,10  ),G ,AMP(95  ))              
      CALL JVVXXX(W(1,85  ),W(1,16  ),G ,ZERO    ,ZERO    ,W(1,93  ))      
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,93  ),G ,AMP(96  ))              
      CALL JVVXXX(W(1,1   ),W(1,85  ),G ,ZERO    ,ZERO    ,W(1,94  ))      
      CALL JVVXXX(W(1,5   ),W(1,94  ),G ,ZERO    ,ZERO    ,W(1,95  ))      
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,95  ),G ,AMP(97  ))              
      CALL JVVXXX(W(1,1   ),W(1,16  ),G ,ZERO    ,ZERO    ,W(1,96  ))      
      CALL FVIXXX(W(1,4   ),W(1,96  ),GG ,TMASS   ,TWIDTH  ,W(1,97  ))     
      CALL IOVXXX(W(1,97  ),W(1,3   ),W(1,6   ),GG ,AMP(98  ))             
      CALL FVOXXX(W(1,3   ),W(1,96  ),GG ,TMASS   ,TWIDTH  ,W(1,98  ))     
      CALL IOVXXX(W(1,4   ),W(1,98  ),W(1,6   ),GG ,AMP(99  ))             
      CALL JVVXXX(W(1,94  ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,99  ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,99  ),G ,AMP(100 ))              
      CALL GGGGXX(W(1,1   ),W(1,16  ),W(1,85  ),W(1,6   ),G ,AMP(101 ))    
      CALL GGGGXX(W(1,85  ),W(1,1   ),W(1,16  ),W(1,6   ),G ,AMP(102 ))    
      CALL GGGGXX(W(1,16  ),W(1,85  ),W(1,1   ),W(1,6   ),G ,AMP(103 ))    
      CALL GGGGXX(W(1,5   ),W(1,2   ),W(1,94  ),W(1,6   ),G ,AMP(104 ))    
      CALL GGGGXX(W(1,94  ),W(1,5   ),W(1,2   ),W(1,6   ),G ,AMP(105 ))    
      CALL GGGGXX(W(1,2   ),W(1,94  ),W(1,5   ),W(1,6   ),G ,AMP(106 ))    
      CALL VVVXXX(W(1,6   ),W(1,96  ),W(1,85  ),G ,AMP(107 ))              
      CALL VVVXXX(W(1,6   ),W(1,94  ),W(1,16  ),G ,AMP(108 ))              
      CALL JIOXXX(W(1,4   ),W(1,25  ),GG ,ZERO    ,ZERO    ,W(1,100 ))     
      CALL JVVXXX(W(1,100 ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,101 ))      
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,101 ),G ,AMP(109 ))              
      CALL JVVXXX(W(1,1   ),W(1,100 ),G ,ZERO    ,ZERO    ,W(1,102 ))      
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,102 ),G ,AMP(110 ))              
      CALL JVVXXX(W(1,1   ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,103 ))      
      CALL FVIXXX(W(1,4   ),W(1,103 ),GG ,TMASS   ,TWIDTH  ,W(1,104 ))     
      CALL FVIXXX(W(1,104 ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,105 ))     
      CALL IOVXXX(W(1,105 ),W(1,3   ),W(1,6   ),GG ,AMP(111 ))             
      CALL FVOXXX(W(1,25  ),W(1,103 ),GG ,TMASS   ,TWIDTH  ,W(1,106 ))     
      CALL IOVXXX(W(1,4   ),W(1,106 ),W(1,6   ),GG ,AMP(112 ))             
      CALL JIOXXX(W(1,104 ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,107 ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,107 ),G ,AMP(113 ))              
      CALL GGGGXX(W(1,1   ),W(1,2   ),W(1,100 ),W(1,6   ),G ,AMP(114 ))    
      CALL GGGGXX(W(1,100 ),W(1,1   ),W(1,2   ),W(1,6   ),G ,AMP(115 ))    
      CALL GGGGXX(W(1,2   ),W(1,100 ),W(1,1   ),W(1,6   ),G ,AMP(116 ))    
      CALL VVVXXX(W(1,6   ),W(1,103 ),W(1,100 ),G ,AMP(117 ))              
      CALL IOVXXX(W(1,104 ),W(1,25  ),W(1,6   ),GG ,AMP(118 ))             
      CALL JIOXXX(W(1,33  ),W(1,3   ),GG ,ZERO    ,ZERO    ,W(1,108 ))     
      CALL JVVXXX(W(1,108 ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,109 ))      
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,109 ),G ,AMP(119 ))              
      CALL JVVXXX(W(1,1   ),W(1,108 ),G ,ZERO    ,ZERO    ,W(1,110 ))      
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,110 ),G ,AMP(120 ))              
      CALL FVIXXX(W(1,33  ),W(1,103 ),GG ,TMASS   ,TWIDTH  ,W(1,111 ))     
      CALL IOVXXX(W(1,111 ),W(1,3   ),W(1,6   ),GG ,AMP(121 ))             
      CALL FVOXXX(W(1,3   ),W(1,103 ),GG ,TMASS   ,TWIDTH  ,W(1,112 ))     
      CALL FVOXXX(W(1,112 ),W(1,5   ),GG ,TMASS   ,TWIDTH  ,W(1,113 ))     
      CALL IOVXXX(W(1,4   ),W(1,113 ),W(1,6   ),GG ,AMP(122 ))             
      CALL JIOXXX(W(1,4   ),W(1,112 ),GG ,ZERO    ,ZERO    ,W(1,114 ))     
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,114 ),G ,AMP(123 ))              
      CALL GGGGXX(W(1,1   ),W(1,2   ),W(1,108 ),W(1,6   ),G ,AMP(124 ))    
      CALL GGGGXX(W(1,108 ),W(1,1   ),W(1,2   ),W(1,6   ),G ,AMP(125 ))    
      CALL GGGGXX(W(1,2   ),W(1,108 ),W(1,1   ),W(1,6   ),G ,AMP(126 ))    
      CALL VVVXXX(W(1,6   ),W(1,103 ),W(1,108 ),G ,AMP(127 ))              
      CALL IOVXXX(W(1,33  ),W(1,112 ),W(1,6   ),GG ,AMP(128 ))             
      CALL JGGGXX(W(1,5   ),W(1,2   ),W(1,85  ),G ,W(1,115 ))              
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,115 ),G ,AMP(129 ))              
      CALL JGGGXX(W(1,85  ),W(1,5   ),W(1,2   ),G ,W(1,116 ))              
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,116 ),G ,AMP(130 ))              
      CALL JGGGXX(W(1,2   ),W(1,85  ),W(1,5   ),G ,W(1,117 ))              
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,117 ),G ,AMP(131 ))              
      CALL JGGGXX(W(1,1   ),W(1,5   ),W(1,85  ),G ,W(1,118 ))              
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,118 ),G ,AMP(132 ))              
      CALL JGGGXX(W(1,85  ),W(1,1   ),W(1,5   ),G ,W(1,119 ))              
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,119 ),G ,AMP(133 ))              
      CALL JGGGXX(W(1,5   ),W(1,85  ),W(1,1   ),G ,W(1,120 ))              
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,120 ),G ,AMP(134 ))              
      CALL JGGGXX(W(1,1   ),W(1,2   ),W(1,5   ),G ,W(1,121 ))              
      CALL FVIXXX(W(1,4   ),W(1,121 ),GG ,TMASS   ,TWIDTH  ,W(1,122 ))     
      CALL IOVXXX(W(1,122 ),W(1,3   ),W(1,6   ),GG ,AMP(135 ))             
      CALL JGGGXX(W(1,5   ),W(1,1   ),W(1,2   ),G ,W(1,123 ))              
      CALL FVIXXX(W(1,4   ),W(1,123 ),GG ,TMASS   ,TWIDTH  ,W(1,124 ))     
      CALL IOVXXX(W(1,124 ),W(1,3   ),W(1,6   ),GG ,AMP(136 ))             
      CALL JGGGXX(W(1,2   ),W(1,5   ),W(1,1   ),G ,W(1,125 ))              
      CALL FVIXXX(W(1,4   ),W(1,125 ),GG ,TMASS   ,TWIDTH  ,W(1,126 ))     
      CALL IOVXXX(W(1,126 ),W(1,3   ),W(1,6   ),GG ,AMP(137 ))             
      CALL FVOXXX(W(1,3   ),W(1,121 ),GG ,TMASS   ,TWIDTH  ,W(1,127 ))     
      CALL IOVXXX(W(1,4   ),W(1,127 ),W(1,6   ),GG ,AMP(138 ))             
      CALL FVOXXX(W(1,3   ),W(1,123 ),GG ,TMASS   ,TWIDTH  ,W(1,128 ))     
      CALL IOVXXX(W(1,4   ),W(1,128 ),W(1,6   ),GG ,AMP(139 ))             
      CALL FVOXXX(W(1,3   ),W(1,125 ),GG ,TMASS   ,TWIDTH  ,W(1,129 ))     
      CALL IOVXXX(W(1,4   ),W(1,129 ),W(1,6   ),GG ,AMP(140 ))             
      CALL JGGGXX(W(1,1   ),W(1,2   ),W(1,85  ),G ,W(1,130 ))              
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,130 ),G ,AMP(141 ))              
      CALL JGGGXX(W(1,85  ),W(1,1   ),W(1,2   ),G ,W(1,131 ))              
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,131 ),G ,AMP(142 ))              
      CALL JGGGXX(W(1,2   ),W(1,85  ),W(1,1   ),G ,W(1,132 ))              
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,132 ),G ,AMP(143 ))              
      CALL VVVXXX(W(1,6   ),W(1,121 ),W(1,85  ),G ,AMP(144 ))              
      CALL VVVXXX(W(1,6   ),W(1,123 ),W(1,85  ),G ,AMP(145 ))              
      CALL VVVXXX(W(1,6   ),W(1,125 ),W(1,85  ),G ,AMP(146 ))              
      CALL JVVXXX(W(1,5   ),W(1,85  ),G ,ZERO    ,ZERO    ,W(1,133 ))      
      CALL JVVXXX(W(1,133 ),W(1,2   ),G ,ZERO    ,ZERO    ,W(1,134 ))      
      CALL VVVXXX(W(1,6   ),W(1,1   ),W(1,134 ),G ,AMP(147 ))              
      CALL JVVXXX(W(1,1   ),W(1,133 ),G ,ZERO    ,ZERO    ,W(1,135 ))      
      CALL VVVXXX(W(1,6   ),W(1,2   ),W(1,135 ),G ,AMP(148 ))              
      CALL JVVXXX(W(1,5   ),W(1,103 ),G ,ZERO    ,ZERO    ,W(1,136 ))      
      CALL FVIXXX(W(1,4   ),W(1,136 ),GG ,TMASS   ,TWIDTH  ,W(1,137 ))     
      CALL IOVXXX(W(1,137 ),W(1,3   ),W(1,6   ),GG ,AMP(149 ))             
      CALL FVOXXX(W(1,3   ),W(1,136 ),GG ,TMASS   ,TWIDTH  ,W(1,138 ))     
      CALL IOVXXX(W(1,4   ),W(1,138 ),W(1,6   ),GG ,AMP(150 ))             
      CALL JVVXXX(W(1,85  ),W(1,103 ),G ,ZERO    ,ZERO    ,W(1,139 ))      
      CALL VVVXXX(W(1,6   ),W(1,5   ),W(1,139 ),G ,AMP(151 ))              
      CALL GGGGXX(W(1,1   ),W(1,2   ),W(1,133 ),W(1,6   ),G ,AMP(152 ))    
      CALL GGGGXX(W(1,133 ),W(1,1   ),W(1,2   ),W(1,6   ),G ,AMP(153 ))    
      CALL GGGGXX(W(1,2   ),W(1,133 ),W(1,1   ),W(1,6   ),G ,AMP(154 ))    
      CALL GGGGXX(W(1,5   ),W(1,103 ),W(1,85  ),W(1,6   ),G ,AMP(155 ))    
      CALL GGGGXX(W(1,85  ),W(1,5   ),W(1,103 ),W(1,6   ),G ,AMP(156 ))    
      CALL GGGGXX(W(1,103 ),W(1,85  ),W(1,5   ),W(1,6   ),G ,AMP(157 ))    
      CALL VVVXXX(W(1,6   ),W(1,103 ),W(1,133 ),G ,AMP(158 ))              
      CALL VVVXXX(W(1,6   ),W(1,85  ),W(1,136 ),G ,AMP(159 ))              
      JAMP(   1) = -AMP(   1)-AMP(   4)-AMP(   6)+AMP(   7)-AMP(  10)
     &             -AMP(  11)+AMP(  14)+AMP(  35)-AMP(  38)-AMP(  83)
     &             +AMP(  86)+AMP(  88)-AMP(  90)-AMP(  91)+AMP(  92)
     &             -AMP(  94)-AMP(  95)-AMP(  96)-AMP(  99)-AMP( 101)
     &             +AMP( 103)+AMP( 107)-AMP( 129)+AMP( 131)-AMP( 139)
     &             +AMP( 140)+AMP( 145)-AMP( 146)
      JAMP(   2) = +AMP(   1)-AMP(   5)-AMP(   7)+AMP(   8)+AMP(  28)
     &             -AMP(  32)-AMP(  34)+AMP(  83)-AMP(  87)-AMP(  92)
     &             +AMP(  93)+AMP( 119)+AMP( 123)+AMP( 124)-AMP( 126)
     &             -AMP( 127)+AMP( 128)+AMP( 130)-AMP( 131)+AMP( 141)
     &             -AMP( 143)+AMP( 147)+AMP( 151)+AMP( 152)-AMP( 154)
     &             +AMP( 156)-AMP( 157)-AMP( 158)
      JAMP(   3) = +AMP(   1)-AMP(   5)-AMP(   7)+AMP(   8)+AMP(  11)
     &             +AMP(  15)+AMP(  16)-AMP(  18)+AMP(  19)+AMP(  20)
     &             -AMP(  35)+AMP(  39)-AMP(  41)+AMP(  83)-AMP(  87)
     &             -AMP(  92)+AMP(  93)+AMP(  96)+AMP( 100)+AMP( 102)
     &             -AMP( 103)+AMP( 104)-AMP( 106)+AMP( 108)+AMP( 129)
     &             -AMP( 131)+AMP( 142)-AMP( 143)
      JAMP(   4) = -AMP(   1)-AMP(   2)-AMP(   6)+AMP(   7)+AMP(   9)
     &             -AMP(  10)-AMP(  28)+AMP(  29)-AMP(  33)-AMP(  83)
     &             -AMP(  84)+AMP(  89)-AMP(  90)-AMP(  91)+AMP(  92)
     &             -AMP(  95)-AMP( 119)+AMP( 120)-AMP( 125)+AMP( 126)
     &             -AMP( 130)+AMP( 131)-AMP( 132)+AMP( 134)-AMP( 147)
     &             +AMP( 148)-AMP( 153)+AMP( 154)
      JAMP(   5) = +AMP(   2)+AMP(   5)+AMP(   6)-AMP(   8)-AMP(   9)
     &             +AMP(  10)+AMP(  12)-AMP(  15)-AMP(  17)+AMP(  18)
     &             +AMP(  36)-AMP(  39)-AMP(  40)+AMP(  84)+AMP(  87)
     &             -AMP(  89)+AMP(  90)+AMP(  91)-AMP(  93)+AMP(  95)
     &             +AMP(  97)-AMP( 100)-AMP( 105)+AMP( 106)+AMP( 132)
     &             -AMP( 133)-AMP( 142)+AMP( 143)
      JAMP(   6) = +AMP(   2)+AMP(   3)-AMP(  29)-AMP(  30)+AMP(  84)
     &             -AMP(  85)+AMP(  88)-AMP(  89)-AMP(  94)-AMP( 120)
     &             +AMP( 121)-AMP( 124)+AMP( 125)+AMP( 127)+AMP( 132)
     &             -AMP( 134)-AMP( 135)+AMP( 136)-AMP( 144)+AMP( 145)
     &             -AMP( 148)-AMP( 149)-AMP( 152)+AMP( 153)+AMP( 155)
     &             -AMP( 156)+AMP( 158)+AMP( 159)
      JAMP(   7) = -AMP(   2)-AMP(   3)-AMP(  12)+AMP(  13)-AMP(  16)
     &             +AMP(  17)-AMP(  20)-AMP(  36)-AMP(  37)-AMP(  84)
     &             +AMP(  85)-AMP(  88)+AMP(  89)+AMP(  94)-AMP(  97)
     &             -AMP(  98)+AMP( 101)-AMP( 102)-AMP( 104)+AMP( 105)
     &             -AMP( 107)-AMP( 108)-AMP( 132)+AMP( 133)-AMP( 136)
     &             +AMP( 137)-AMP( 145)+AMP( 146)
      JAMP(   8) = +AMP(   4)+AMP(   5)+AMP(   6)-AMP(   8)+AMP(  10)
     &             -AMP(  31)+AMP(  32)-AMP(  86)+AMP(  87)-AMP(  88)
     &             +AMP(  90)+AMP(  91)-AMP(  93)+AMP(  94)+AMP(  95)
     &             +AMP( 122)-AMP( 123)-AMP( 138)+AMP( 139)-AMP( 141)
     &             +AMP( 143)+AMP( 144)-AMP( 145)-AMP( 150)-AMP( 151)
     &             -AMP( 155)+AMP( 157)-AMP( 159)
      JAMP(   9) = +AMP(  11)-AMP(  14)+AMP(  21)-AMP(  24)+AMP(  96)
     &             +AMP(  99)+AMP( 101)-AMP( 103)-AMP( 107)+AMP( 109)
     &             +AMP( 112)+AMP( 114)-AMP( 116)-AMP( 117)+AMP( 129)
     &             -AMP( 130)+AMP( 138)-AMP( 140)-AMP( 144)+AMP( 146)
     &             -AMP( 147)+AMP( 150)-AMP( 152)+AMP( 154)+AMP( 155)
     &             -AMP( 156)+AMP( 158)+AMP( 159)
      JAMP(  10) = -AMP(  11)-AMP(  12)-AMP(  16)+AMP(  17)-AMP(  19)
     &             -AMP(  20)-AMP(  21)+AMP(  22)-AMP(  26)-AMP(  96)
     &             -AMP(  97)-AMP( 102)+AMP( 103)-AMP( 104)+AMP( 105)
     &             -AMP( 108)-AMP( 109)+AMP( 110)-AMP( 115)+AMP( 116)
     &             -AMP( 129)+AMP( 130)+AMP( 133)-AMP( 134)+AMP( 147)
     &             -AMP( 148)+AMP( 153)-AMP( 154)
      JAMP(  11) = +AMP(  12)-AMP(  15)-AMP(  17)+AMP(  18)-AMP(  22)
     &             +AMP(  25)-AMP(  27)+AMP(  97)-AMP( 100)-AMP( 105)
     &             +AMP( 106)-AMP( 110)-AMP( 113)-AMP( 114)+AMP( 115)
     &             +AMP( 117)+AMP( 118)-AMP( 133)+AMP( 134)+AMP( 141)
     &             -AMP( 142)+AMP( 148)+AMP( 151)+AMP( 152)-AMP( 153)
     &             +AMP( 156)-AMP( 157)-AMP( 158)
      JAMP(  12) = -AMP(  13)+AMP(  15)+AMP(  16)-AMP(  18)+AMP(  20)
     &             -AMP(  23)-AMP(  25)+AMP(  98)+AMP( 100)-AMP( 101)
     &             +AMP( 102)+AMP( 104)-AMP( 106)+AMP( 107)+AMP( 108)
     &             +AMP( 111)+AMP( 113)+AMP( 135)-AMP( 137)-AMP( 141)
     &             +AMP( 142)+AMP( 144)-AMP( 146)+AMP( 149)-AMP( 151)
     &             -AMP( 155)+AMP( 157)-AMP( 159)
      JAMP(  13) = -AMP(  42)-AMP(  43)-AMP(  47)+AMP(  48)-AMP(  50)
     &             -AMP(  51)+AMP(  62)-AMP(  63)-AMP(  67)+AMP(  83)
     &             +AMP(  84)-AMP(  89)+AMP(  90)+AMP(  91)-AMP(  92)
     &             +AMP(  95)-AMP( 109)+AMP( 110)-AMP( 115)+AMP( 116)
     &             +AMP( 130)-AMP( 131)+AMP( 132)-AMP( 134)+AMP( 147)
     &             -AMP( 148)+AMP( 153)-AMP( 154)
      JAMP(  14) = +AMP(  42)-AMP(  46)-AMP(  48)+AMP(  49)+AMP(  52)
     &             +AMP(  56)+AMP(  57)-AMP(  59)-AMP(  60)+AMP(  61)
     &             +AMP(  76)-AMP(  80)-AMP(  81)-AMP(  83)+AMP(  87)
     &             +AMP(  92)-AMP(  93)-AMP(  96)-AMP( 100)-AMP( 102)
     &             +AMP( 103)-AMP( 104)+AMP( 106)-AMP( 108)-AMP( 129)
     &             +AMP( 131)-AMP( 142)+AMP( 143)
      JAMP(  15) = +AMP(  42)-AMP(  46)-AMP(  48)+AMP(  49)-AMP(  62)
     &             +AMP(  66)-AMP(  68)-AMP(  83)+AMP(  87)+AMP(  92)
     &             -AMP(  93)+AMP( 109)+AMP( 113)+AMP( 114)-AMP( 116)
     &             -AMP( 117)-AMP( 118)-AMP( 130)+AMP( 131)-AMP( 141)
     &             +AMP( 143)-AMP( 147)-AMP( 151)-AMP( 152)+AMP( 154)
     &             -AMP( 156)+AMP( 157)+AMP( 158)
      JAMP(  16) = -AMP(  42)+AMP(  44)-AMP(  47)+AMP(  48)-AMP(  51)
     &             -AMP(  52)-AMP(  54)-AMP(  76)-AMP(  78)+AMP(  83)
     &             +AMP(  85)-AMP(  88)+AMP(  90)+AMP(  91)-AMP(  92)
     &             +AMP(  94)+AMP(  95)+AMP(  96)-AMP(  98)+AMP( 101)
     &             -AMP( 103)-AMP( 107)+AMP( 129)-AMP( 131)-AMP( 136)
     &             +AMP( 137)-AMP( 145)+AMP( 146)
      JAMP(  17) = -AMP(  43)+AMP(  45)-AMP(  53)-AMP(  55)-AMP(  57)
     &             +AMP(  58)-AMP(  61)+AMP(  77)-AMP(  79)+AMP(  84)
     &             +AMP(  86)+AMP(  88)-AMP(  89)-AMP(  94)+AMP(  97)
     &             -AMP(  99)-AMP( 101)+AMP( 102)+AMP( 104)-AMP( 105)
     &             +AMP( 107)+AMP( 108)+AMP( 132)-AMP( 133)-AMP( 139)
     &             +AMP( 140)+AMP( 145)-AMP( 146)
      JAMP(  18) = +AMP(  43)-AMP(  45)+AMP(  63)-AMP(  65)-AMP(  84)
     &             -AMP(  86)-AMP(  88)+AMP(  89)+AMP(  94)-AMP( 110)
     &             -AMP( 112)-AMP( 114)+AMP( 115)+AMP( 117)-AMP( 132)
     &             +AMP( 134)-AMP( 138)+AMP( 139)+AMP( 144)-AMP( 145)
     &             +AMP( 148)-AMP( 150)+AMP( 152)-AMP( 153)-AMP( 155)
     &             +AMP( 156)-AMP( 158)-AMP( 159)
      JAMP(  19) = +AMP(  43)+AMP(  46)+AMP(  47)-AMP(  49)+AMP(  50)
     &             +AMP(  51)+AMP(  53)-AMP(  56)-AMP(  58)+AMP(  59)
     &             -AMP(  77)+AMP(  80)-AMP(  82)-AMP(  84)-AMP(  87)
     &             +AMP(  89)-AMP(  90)-AMP(  91)+AMP(  93)-AMP(  95)
     &             -AMP(  97)+AMP( 100)+AMP( 105)-AMP( 106)-AMP( 132)
     &             +AMP( 133)+AMP( 142)-AMP( 143)
      JAMP(  20) = -AMP(  44)+AMP(  46)+AMP(  47)-AMP(  49)+AMP(  51)
     &             -AMP(  64)-AMP(  66)-AMP(  85)-AMP(  87)+AMP(  88)
     &             -AMP(  90)-AMP(  91)+AMP(  93)-AMP(  94)-AMP(  95)
     &             -AMP( 111)-AMP( 113)-AMP( 135)+AMP( 136)+AMP( 141)
     &             -AMP( 143)-AMP( 144)+AMP( 145)-AMP( 149)+AMP( 151)
     &             +AMP( 155)-AMP( 157)+AMP( 159)
      JAMP(  21) = -AMP(  52)-AMP(  53)-AMP(  57)+AMP(  58)+AMP(  60)
     &             -AMP(  61)+AMP(  69)-AMP(  70)-AMP(  74)+AMP(  96)
     &             +AMP(  97)+AMP( 102)-AMP( 103)+AMP( 104)-AMP( 105)
     &             +AMP( 108)-AMP( 119)+AMP( 120)-AMP( 125)+AMP( 126)
     &             +AMP( 129)-AMP( 130)-AMP( 133)+AMP( 134)-AMP( 147)
     &             +AMP( 148)-AMP( 153)+AMP( 154)
      JAMP(  22) = +AMP(  52)+AMP(  54)-AMP(  69)-AMP(  71)-AMP(  96)
     &             +AMP(  98)-AMP( 101)+AMP( 103)+AMP( 107)+AMP( 119)
     &             -AMP( 121)+AMP( 124)-AMP( 126)-AMP( 127)-AMP( 129)
     &             +AMP( 130)+AMP( 135)-AMP( 137)+AMP( 144)-AMP( 146)
     &             +AMP( 147)+AMP( 149)+AMP( 152)-AMP( 154)-AMP( 155)
     &             +AMP( 156)-AMP( 158)-AMP( 159)
      JAMP(  23) = +AMP(  53)-AMP(  56)-AMP(  58)+AMP(  59)+AMP(  70)
     &             -AMP(  73)-AMP(  75)-AMP(  97)+AMP( 100)+AMP( 105)
     &             -AMP( 106)-AMP( 120)-AMP( 123)-AMP( 124)+AMP( 125)
     &             +AMP( 127)-AMP( 128)+AMP( 133)-AMP( 134)-AMP( 141)
     &             +AMP( 142)-AMP( 148)-AMP( 151)-AMP( 152)+AMP( 153)
     &             -AMP( 156)+AMP( 157)+AMP( 158)
      JAMP(  24) = +AMP(  55)+AMP(  56)+AMP(  57)-AMP(  59)+AMP(  61)
     &             -AMP(  72)+AMP(  73)+AMP(  99)-AMP( 100)+AMP( 101)
     &             -AMP( 102)-AMP( 104)+AMP( 106)-AMP( 107)-AMP( 108)
     &             -AMP( 122)+AMP( 123)+AMP( 138)-AMP( 140)+AMP( 141)
     &             -AMP( 142)-AMP( 144)+AMP( 146)+AMP( 150)+AMP( 151)
     &             +AMP( 155)-AMP( 157)+AMP( 159)
      gg_ttxgg = 0.D0 
      DO I = 1, NCOLOR
          ZTEMP = (0.D0,0.D0)
          DO J = 1, NCOLOR
              ZTEMP = ZTEMP + CF(J,I)*JAMP(J)
          ENDDO
          gg_ttxgg =gg_ttxgg+ZTEMP*DCONJG(JAMP(I))/DENOM(I)   
      ENDDO
      Do I = 1, NGRAPHS
          amp2(i)=amp2(i)+amp(i)*dconjg(amp(i))
      Enddo
      Do I = 1, NCOLOR
          Jamp2(i)=Jamp2(i)+Jamp(i)*dconjg(Jamp(i))
      Enddo
C      CALL GAUGECHECK(JAMP,ZTEMP,EIGEN_VEC,EIGEN_VAL,NCOLOR,NEIGEN) 
      END
       
       
