<TeXmacs|1.0.7.3>

<style|generic>

<\body>
  <doc-data|<doc-title|The <math|W<rsup|+>W<rsup|+> j j> and
  <with|mode|math|W<rsup|->W<rsup|-> j j ><with|font-family|tt|POWHEG BOX>
  manual>>

  The <with|font-family|tt|Wp_Wp_j_j> program is an implementation of the
  <math|W<rsup|+>W<rsup|+> j j> and <with|mode|math|W<rsup|->W<rsup|-> j j
  >production cross section within the <with|font-family|tt|POWHEG BOX>
  framework with the <with|mode|math|W<rsup|> >bosons decaying to leptons.

  This document describes the input parameters that are specific to this
  implementation. The parameters that are common to all
  <with|font-family|tt|POWHEG BOX> implementation are given in the
  <with|font-family|tt|manual-BOX.pdf> document, in the
  <with|font-family|tt|POWHEG-BOX/Docs> directory. The decay mode of the
  <with|mode|math|W<rsup|> >bosons can be fixed by setting
  <with|font-family|tt|vdecaymodeW1> and <with|font-family|tt|vdecaymodeW2>
  in the powheg.input file. These flags spacify the charged leptons the
  bosons decay to (11 e-; 13 mu-; 15 tau-; -11 e+; -13 mu+; -15 tau+).
  <with|font-family|tt|vdecaymodeW1> and <with|font-family|tt|vdecaymodeW2>
  must have the same sign. In the case of identical leptons in the final
  state interference effects are neglected, so that the cross-section is
  exactly half that of distinct leptons. \ 

  If you use this program, please quote <cite|Melia:2011gk>,
  <cite|Melia:2010bm>, <cite|Alioli:2010xd>.

  <section|Running the program>

  Download the <with|font-family|tt|POWHEG BOX>, do

  <with|font-family|tt|$ cd POWHEG-BOX/Wp_Wp_j_j>

  Running is most conveniently done in a separate directory, for instance do

  <with|font-family|tt|$ mkdir testrun>

  The directory must contain the <with|font-family|tt|powheg.input> file and
  a <with|font-family|tt|pwgseeds.dat> file (see
  <with|font-family|tt|manual-BOX.pdf>).

  Before compiling make sure that:

  <\itemize-minus>
    <item>fastjet is installed and fastjet-config is in the path

    <item><with|font-family|tt|ifort >and/or <with|font-family|tt|gfortran>
    is in the path

    <item><with|font-family|tt|ifort/gfortran> libraries are in the
    environment variable <with|font-family|tt|LD_LIBRARY_PATH>
  </itemize-minus>

  It is possible to compile both with ifort or gfortran at the same time,
  independently, retaining the objects files of each architecture. The
  executables itself are instead unique.

  Create the main program by doing

  <with|font-family|tt|$ make COMPILER=ifort pwhg_main>

  or

  <with|font-family|tt|$ make COMPILER=gfortran pwhg_main>

  If you use <with|font-family|tt|LHAPDF>, make sure that you have a version
  compatible with the compiler you are using, and insert the appropriate path
  for <with|font-family|tt|LHAPDFCONFIG> in the Makefile.

  The gfortran version we tested was 4.4.3. For older versions, the compiler
  may not recognize the -J option in F90/Makefile.gfortran. One may need to
  replace it with the -M option.

  Enter the testrun directory:

  <with|font-family|tt|$ cd testrun>

  A <with|font-family|tt|powheg.input>, and a
  <with|font-family|tt|pwgseeds.dat> file is present there. When executing

  <with|font-family|tt|$../pwhg_main>

  <with|font-family|tt|enter which seed>

  the program will require to enter an index in the
  <with|font-family|tt|pwgseeds.dat> file, that specifies the line number
  where the seed of the random number generator to be used for the run is
  stored. All results generated by the run will be stored in files named
  *-[index].*. When running on parallel CPU's, make sure that each parallel
  run has a different index.

  The program must be run in several steps. Each new step requires the
  completion of the previous step.

  The timings given in the following refer to the program compiled with
  <with|font-family|tt|ifort>.

  <subsection|Step 1>

  Consists of a single run to generate the importance sampling grid. The grid
  must be generated with the option <with|font-family|tt|fakevirt 1> in
  <with|font-family|tt|powheg.input>, which means that the virtual term is
  replaced by a fake one proportional to the Born term.

  One needs at least 1000000 events and 2 iterations. Set the following
  tokens in the <with|font-family|tt|powheg.input> file:

  <with|font-family|tt|ncall1 1000000>

  <with|font-family|tt|itmx1 2>

  <with|font-family|tt|ncall2 0>

  <with|font-family|tt|fakevirt 1>

  Run the program

  <with|font-family|tt|$../pwhg_main>

  <with|font-family|tt|enter which seed>

  enter 1 or any other valid seed number.

  It takes roughly 20 hours of CPU. By setting <with|font-family|tt|ncall2 0>
  in the <with|font-family|tt|powheg.input> file the program stops after the
  complition of this step.

  <subsection|Step 2>

  Runs in parallel can be performed now. Comment out the
  <with|font-family|tt|fakevirt> token from powheg.input.

  The runs must be performed in the same directory where Step 1 was
  performed.

  The integration and upper bound for the generation of btilde can be
  performed with 50-100 runs with 2500-5000 calls. Set

  <with|font-family|tt|ncall2 5000>

  <with|font-family|tt|itmx2 1>

  in <with|font-family|tt|powheg.input>.

  Folding numbers that are appropriate for runs at LHC energy are

  <\with|font-family|tt>
    foldcsi 5 \ \ \ ! number of folds on csi integration

    foldy 5 \ \ \ \ \ ! number of folds on y integration

    foldphi 10 \ \ ! number of folds on phi integration
  </with>

  Time is about 100 hours of cpu for each run with ncall2=5000.

  Setting

  <with|font-family|tt|nubound 0>

  in <with|font-family|tt|powheg.input> causes the program to stop after the
  completion of this step.

  In order to run, for example, 100 parallel processes do:

  <with|font-family|tt|$../pwhg_main>

  <with|font-family|tt|enter which seed>

  enter an index for each run, (from 1 to 100). The pwgseeds.dat must contain
  at least 100 lines, each with a different seed.

  <subsection|Step 3>

  This step can be run in parallel. The number of processes cannot be larger
  than the one used in the previous step. The run must be performed in the
  same directory, after all processes in Step 2 are completed. Setting

  <with|font-family|tt|numevts 0>

  <with|font-family|tt|nubounds 100000>

  takes roughly 7 hours per process.

  The setting "numevts 0" causes the program to stop after completion of this
  step.

  The parallel execution of the program is performed as in the previous step.

  <subsection|Step 4>

  Set

  <with|font-family|tt|numevts 100000>

  (for example) and run in parallel. The number of processes cannot be larger
  than the one used in the previous step.

  At this point, files of the form <with|font-family|tt|pwgevents-[index].lhe>
  are present in the run directory.

  Count the events:

  <with|font-family|tt|$ grep '/event' pwgevents-*.lhe>

  <section|Analyzing the events>

  It should be easy to feed the <with|font-family|tt|*.lhe> events into
  generic shower Monte Carlo programs, within the analysis framework of each
  experiment. We also provide a sample analysis, that computes several
  histograms and stores them in topdrawer output.

  Doing (from the <with|font-family|tt|Wp_Wp_j_j> directory:

  <\with|font-family|tt>
    $ make lhef_analysis

    $ cd testrun

    $ ../lhef_analysis
  </with>

  analyzes the bare <with|font-family|tt|POWHEG BOX> output, creating the
  topdrawer file <with|font-family|tt|LHEF_analysis.top> at the end. The
  targets <with|font-family|tt|main-HERWIG-lhef> and
  <with|font-family|tt|main-PYTHIA-lhef> are instead used to perform the
  analysis on events fully showered using <with|font-family|tt|HERWIG> or
  <with|font-family|tt|PYTHIA>.

  <\bibliography|bib|JHEP|paper.bib>
    <\bib-list|1>
      <bibitem*|1><label|bib-Melia:2011gk>T.<nbsp>Melia, P.<nbsp>Nason,
      R.<nbsp>Rontsch, and G.<nbsp>Zanderighi,
      <with|font-shape|italic|W<rsup|+>W<rsup|+> plus dijet production in the
      POWHEGBOX>, <hlink|<with|font-family|tt|1102.4846>|http://xxx.lanl.gov/abs/1102.4846>.
      * Temporary entry *.

      <bibitem*|2><label|bib-Melia:2010bm>T.<nbsp>Melia, K.<nbsp>Melnikov,
      R.<nbsp>Rontsch, and G.<nbsp>Zanderighi,
      <with|font-shape|italic|Next-to-leading order QCD predictions for
      <math|W<rsup|+>W<rsup|+>j*j> production at the LHC>,
      <with|font-shape|italic|JHEP> <with|font-series|bold|1012> (2010) 053,
      [<hlink|<with|font-family|tt|1007.5313>|http://xxx.lanl.gov/abs/1007.5313>].

      <bibitem*|3><label|bib-Alioli:2010xd>S.<nbsp>Alioli, P.<nbsp>Nason,
      C.<nbsp>Oleari, and E.<nbsp>Re, <with|font-shape|italic|A general
      framework for implementing NLO calculations in shower Monte Carlo
      programs: the POWHEG BOX>, <with|font-shape|italic|JHEP>
      <with|font-series|bold|1006> (2010) 043,
      [<hlink|<with|font-family|tt|1002.2581>|http://xxx.lanl.gov/abs/1002.2581>].
    </bib-list>
  </bibliography>
</body>

<\initial>
  <\collection>
    <associate|par-hyphen|normal>
    <associate|sfactor|5>
  </collection>
</initial>

<\references>
  <\collection>
    <associate|auto-1|<tuple|1|1>>
    <associate|auto-2|<tuple|1.1|2>>
    <associate|auto-3|<tuple|1.2|2>>
    <associate|auto-4|<tuple|1.3|3>>
    <associate|auto-5|<tuple|1.4|3>>
    <associate|auto-6|<tuple|2|3>>
    <associate|auto-7|<tuple|2|3>>
    <associate|bib-Alioli:2010xd|<tuple|3|?>>
    <associate|bib-Frixione:2007vw|<tuple|4|?>>
    <associate|bib-Melia:2010bm|<tuple|2|?>>
    <associate|bib-Melia:2011gk|<tuple|1|?>>
  </collection>
</references>

<\auxiliary>
  <\collection>
    <\associate|bib>
      Melia:2011gk

      Melia:2010bm

      Alioli:2010xd
    </associate>
    <\associate|toc>
      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|Running
      the program> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-1><vspace|0.5fn>

      <with|par-left|<quote|1.5fn>|Step 1
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-2>>

      <with|par-left|<quote|1.5fn>|Step 2
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-3>>

      <with|par-left|<quote|1.5fn>|Step 3
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-4>>

      <with|par-left|<quote|1.5fn>|Step 4
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-5>>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|Analyzing
      the events> <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-6><vspace|0.5fn>

      <vspace*|1fn><with|font-series|<quote|bold>|math-font-series|<quote|bold>|Bibliography>
      <datoms|<macro|x|<repeat|<arg|x>|<with|font-series|medium|<with|font-size|1|<space|0.2fn>.<space|0.2fn>>>>>|<htab|5mm>>
      <no-break><pageref|auto-7><vspace|0.5fn>
    </associate>
  </collection>
</auxiliary>