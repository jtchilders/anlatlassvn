      subroutine AAtoWW_slm(Q1,Q2,P,aa,ttype)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a a -> e+ ve b t~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  21) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  35) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 aa(0:3,0:3)
      integer ttype
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS),WX1(6),WX2(6)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
      include 'tensor_born.inc'
      include 'tensor_real.inc'
      include '../higgs_graphs.h'

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (higgs_only) then 
         aa(:,:) = 0d0
         return
      endif   

      if (lswitch) then      ! read lepton and W states from common block
         do i=1,6
            if (ttype.eq.1) then 
               w(i,3) = wep_born(i)
               w(i,4) = wve_born(i)
               w(i,5) = wmu_born(i)
               w(i,6) = wvm_born(i)
               w(i,21) = wp_born(i)
            elseif (ttype.eq.3) then  
               w(i,3) = wep_real(i)
               w(i,4) = wve_real(i)
               w(i,5) = wmu_real(i)
               w(i,6) = wvm_real(i)
               w(i,21) = wp_real(i)
            else 
               stop 'bad ttype for fermionic tensors'
            endif
         enddo
      else  
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL OXXXXX(P(0,6   ),ZERO ,NHEL(5   ),+1,W(1,5   ))        
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(6   ),-1,W(1,6   ) )
        
         CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,21  ))  
      endif

      DO MU = 0,3
         DO NU = 0,3
      CALL VCARTX(Q1(0),ZERO ,ZERO, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),ZERO ,ZERO, NU,-1,W(1,2   )) 

      CALL FVIXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    
      CALL FVOXXX(W(1,5   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,1   ),GAU ,AMP(1   ))            
      CALL JVVXXX(W(1,8   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     10  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,10  ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,8   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,12  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,13  ),GWF ,AMP(4   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,14  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,15  ))    
      CALL FVOXXX(W(1,5   ),W(1,15  ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,2   ),GAU ,AMP(5   ))            
      CALL JVVXXX(W(1,15  ),W(1,2   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     17  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,17  ),GWF ,AMP(6   ))            
      CALL FVOXXX(W(1,5   ),W(1,2   ),GAD ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,6   ),W(1,18  ),W(1,15  ),GWF ,AMP(7   ))            
      CALL FVIXXX(W(1,14  ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL JIOXXX(W(1,19  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,20  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,20  ),GWF ,AMP(8   ))            
      CALL JVVXXX(W(1,21  ),W(1,2   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     22  ))                                                          
      CALL FVOXXX(W(1,5   ),W(1,22  ),GWF ,ZERO    ,ZERO    ,W(1,23  ))    
      CALL IOVXXX(W(1,6   ),W(1,23  ),W(1,1   ),GAU ,AMP(9   ))            
      CALL FVOXXX(W(1,11  ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,6   ),W(1,24  ),W(1,2   ),GAU ,AMP(10  ))            
      CALL JVVXXX(W(1,22  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     25  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,25  ),GWF ,AMP(11  ))            
      CALL FVOXXX(W(1,11  ),W(1,2   ),GAD ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL IOVXXX(W(1,6   ),W(1,26  ),W(1,21  ),GWF ,AMP(12  ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,22  ),GWF ,AMP(13  ))            
      CALL FVOXXX(W(1,18  ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,6   ),W(1,27  ),W(1,1   ),GAU ,AMP(14  ))            
      CALL JVVXXX(W(1,21  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     28  ))                                                          
      CALL FVOXXX(W(1,5   ),W(1,28  ),GWF ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL IOVXXX(W(1,6   ),W(1,29  ),W(1,2   ),GAU ,AMP(15  ))            
      CALL JVVXXX(W(1,28  ),W(1,2   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     30  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,30  ),GWF ,AMP(16  ))            
      CALL FVOXXX(W(1,18  ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,6   ),W(1,31  ),W(1,21  ),GWF ,AMP(17  ))            
      CALL IOVXXX(W(1,6   ),W(1,18  ),W(1,28  ),GWF ,AMP(18  ))            
      CALL JW3WXX(W(1,1   ),W(1,21  ),W(1,2   ),GWWA ,GWWA ,WMASS   ,      
     &     WWIDTH  ,W(1,32  ))                                             
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,32  ),GWF ,AMP(19  ))            
      CALL FVOXXX(W(1,5   ),W(1,21  ),GWF ,ZERO    ,ZERO    ,W(1,33  ))    
      CALL FVOXXX(W(1,33  ),W(1,2   ),GAU ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,6   ),W(1,34  ),W(1,1   ),GAU ,AMP(20  ))            
      CALL FVOXXX(W(1,33  ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,35  ))    
      CALL IOVXXX(W(1,6   ),W(1,35  ),W(1,2   ),GAU ,AMP(21  ))
  
      AA(MU,NU)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)
         enddo
      enddo
      END


c ===================================================


      subroutine AZtoWW_slm(Q1,Q2,P,az,ttype)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a z -> e+ ve b t~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  25) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  40) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 az(0:3,0:3)
      integer ttype
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS),WX1(6),WX2(6)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
      include 'tensor_born.inc'
      include 'tensor_real.inc'
      include '../higgs_graphs.h'

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (higgs_only) then 
         az(:,:) = 0d0
         return
      endif   

      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            if (ttype.eq.1) then 
               w(i,3) = wep_born(i)
               w(i,4) = wve_born(i)
               w(i,5) = wmu_born(i)
               w(i,6) = wvm_born(i)
               w(i,26) = wp_born(i)
            elseif (ttype.eq.3) then
               w(i,3) = wep_real(i)
               w(i,4) = wve_real(i)
               w(i,5) = wmu_real(i)
               w(i,6) = wvm_real(i)
               w(i,26) = wp_real(i) 
            else 
               stop 'bad ttype for fermionic tensors'
            endif
         enddo
      endif 
      if (.not.lswitch) then
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL OXXXXX(P(0,6   ),ZERO ,NHEL(5   ),+1,W(1,5   ))        
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(6   ),-1,W(1,6   ))  
        
         CALL JIOXXX(W(1,3),W(1,4),GWF,WMASS,WWIDTH,W(1,26))        
      endif          

      DO MU = 0,3
         DO NU = 0,3
      CALL VCARTX(Q1(0),ZERO ,ZERO, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),ZMASS ,Zwidth, NU,-1,W(1,2   )) 

        
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    
      CALL FVOXXX(W(1,5   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,1   ),GAU ,AMP(1   ))            
      CALL JVVXXX(W(1,8   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     10  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,10  ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,8   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,12  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,13  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GZN ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,14  ),GWF ,WMASS   ,WWIDTH  ,W(1,15  ))    
      CALL FVOXXX(W(1,5   ),W(1,15  ),GWF ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,1   ),GAU ,AMP(5   ))            
      CALL JVVXXX(W(1,15  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     17  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,17  ),GWF ,AMP(6   ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,15  ),GWF ,AMP(7   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL JIOXXX(W(1,18  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,19  ))    
      CALL FVOXXX(W(1,5   ),W(1,19  ),GWF ,ZERO    ,ZERO    ,W(1,20  ))    
      CALL IOVXXX(W(1,6   ),W(1,20  ),W(1,2   ),GZU ,AMP(8   ))            
      CALL JVVXXX(W(1,19  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     21  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,21  ),GWF ,AMP(9   ))            
      CALL FVOXXX(W(1,5   ),W(1,2   ),GZD ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL IOVXXX(W(1,6   ),W(1,22  ),W(1,19  ),GWF ,AMP(10  ))            
      CALL FVIXXX(W(1,18  ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,23  ))    
      CALL JIOXXX(W(1,23  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,24  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,24  ),GWF ,AMP(11  ))            
      CALL JIOXXX(W(1,18  ),W(1,14  ),GWF ,WMASS   ,WWIDTH  ,W(1,25  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,25  ),GWF ,AMP(12  ))            
      CALL JVVXXX(W(1,26  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     27  ))                                                          
      CALL FVOXXX(W(1,5   ),W(1,27  ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,6   ),W(1,28  ),W(1,1   ),GAU ,AMP(13  ))            
      CALL FVOXXX(W(1,11  ),W(1,26  ),GWF ,ZERO    ,ZERO    ,W(1,29  ))    
      CALL IOVXXX(W(1,6   ),W(1,29  ),W(1,2   ),GZU ,AMP(14  ))            
      CALL JVVXXX(W(1,27  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     30  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,30  ),GWF ,AMP(15  ))            
      CALL FVOXXX(W(1,11  ),W(1,2   ),GZD ,ZERO    ,ZERO    ,W(1,31  ))    
      CALL IOVXXX(W(1,6   ),W(1,31  ),W(1,26  ),GWF ,AMP(16  ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,27  ),GWF ,AMP(17  ))            
      CALL FVOXXX(W(1,22  ),W(1,26  ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,6   ),W(1,32  ),W(1,1   ),GAU ,AMP(18  ))            
      CALL JVVXXX(W(1,26  ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     33  ))                                                          
      CALL FVOXXX(W(1,5   ),W(1,33  ),GWF ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL IOVXXX(W(1,6   ),W(1,34  ),W(1,2   ),GZU ,AMP(19  ))            
      CALL JVVXXX(W(1,33  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     35  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,35  ),GWF ,AMP(20  ))            
      CALL FVOXXX(W(1,22  ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,36  ))    
      CALL IOVXXX(W(1,6   ),W(1,36  ),W(1,26  ),GWF ,AMP(21  ))            
      CALL IOVXXX(W(1,6   ),W(1,22  ),W(1,33  ),GWF ,AMP(22  ))            
      CALL JW3WXX(W(1,2   ),W(1,26  ),W(1,1   ),GWWZ ,GWWA ,WMASS   ,      
     &     WWIDTH  ,W(1,37  ))                                             
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,37  ),GWF ,AMP(23  ))            
      CALL FVOXXX(W(1,5   ),W(1,26  ),GWF ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL FVOXXX(W(1,38  ),W(1,2   ),GZU ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL IOVXXX(W(1,6   ),W(1,39  ),W(1,1   ),GAU ,AMP(24  ))            
      CALL FVOXXX(W(1,38  ),W(1,1   ),GAU ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,6   ),W(1,40  ),W(1,2   ),GZU ,AMP(25  ))         

      AZ(MU,NU)  = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
         ENDDO
      ENDDO

      END
    
c ===================================================
      
      subroutine ZZtoWW_slm(Q1,Q2,P,zz,ttype)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z z ->  e+ ve b t~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=  32) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  51) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 zz(0:3,0:3)
      integer ttype
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS),WX1(6),WX2(6)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
      include 'tensor_born.inc'
      include 'tensor_real.inc'
      include '../higgs_graphs.h'

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------
      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            if (ttype.eq.1) then 
               w(i,3) = wep_born(i)
               w(i,4) = wve_born(i)
               w(i,5) = wmu_born(i)
               w(i,6) = wvm_born(i)
               w(i,35) = wp_born(i)
            elseif (ttype.eq.3) then
               w(i,3) = wep_real(i)
               w(i,4) = wve_real(i)
               w(i,5) = wmu_real(i)
               w(i,6) = wvm_real(i)
               w(i,35) = wp_real(i) 
            else 
               stop 'bad ttype for fermionic tensors'
            endif
         enddo
      endif

      if (.not.lswitch) then 
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL OXXXXX(P(0,6   ),ZERO ,NHEL(5   ),+1,W(1,5   ))        
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(6   ),-1,W(1,6   ))

         CALL JIOXXX(W(1,3),W(1,4),GWF,WMASS,WWIDTH,W(1,35  ))
      endif        

      DO MU = 0,3
         DO NU = 0,3
      CALL VCARTX(Q1(0),ZMASS ,Zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),ZMASS ,Zwidth, NU,-1,W(1,2   ))
        
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,8   ))    
      CALL FVOXXX(W(1,5   ),W(1,8   ),GWF ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,1   ),GZU ,AMP(1   ))            
      CALL JVVXXX(W(1,8   ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     10  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,10  ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GZD ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,8   ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,3   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL FVOXXX(W(1,5   ),W(1,13  ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL IOVXXX(W(1,6   ),W(1,14  ),W(1,2   ),GZU ,AMP(4   ))            
      CALL JVVXXX(W(1,13  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     15  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,15  ),GWF ,AMP(5   ))            
      CALL FVOXXX(W(1,5   ),W(1,2   ),GZD ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,13  ),GWF ,AMP(6   ))            
      CALL FVOXXX(W(1,12  ),W(1,2   ),GZN ,ZERO    ,ZERO    ,W(1,17  ))    
      CALL JIOXXX(W(1,3   ),W(1,17  ),GWF ,WMASS   ,WWIDTH  ,W(1,18  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,18  ),GWF ,AMP(7   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,19  ))    
      CALL JIOXXX(W(1,19  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,20  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,20  ),GWF ,AMP(8   ))            
      CALL JIOXXX(W(1,7   ),W(1,12  ),GWF ,WMASS   ,WWIDTH  ,W(1,21  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,21  ),GWF ,AMP(9   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GZN ,ZERO    ,ZERO    ,W(1,22  ))    
      CALL JIOXXX(W(1,3   ),W(1,22  ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))    
      CALL FVOXXX(W(1,5   ),W(1,23  ),GWF ,ZERO    ,ZERO    ,W(1,24  ))    
      CALL IOVXXX(W(1,6   ),W(1,24  ),W(1,1   ),GZU ,AMP(10  ))            
      CALL JVVXXX(W(1,23  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     25  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,25  ),GWF ,AMP(11  ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,23  ),GWF ,AMP(12  ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,26  ))    
      CALL JIOXXX(W(1,26  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,27  ))    
      CALL FVOXXX(W(1,5   ),W(1,27  ),GWF ,ZERO    ,ZERO    ,W(1,28  ))    
      CALL IOVXXX(W(1,6   ),W(1,28  ),W(1,2   ),GZU ,AMP(13  ))            
      CALL JVVXXX(W(1,27  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     29  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,29  ),GWF ,AMP(14  ))            
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,27  ),GWF ,AMP(15  ))            
      CALL FVOXXX(W(1,22  ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,30  ))    
      CALL JIOXXX(W(1,3   ),W(1,30  ),GWF ,WMASS   ,WWIDTH  ,W(1,31  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,31  ),GWF ,AMP(16  ))            
      CALL FVIXXX(W(1,26  ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL JIOXXX(W(1,32  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,33  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,33  ),GWF ,AMP(17  ))            
      CALL JIOXXX(W(1,26  ),W(1,22  ),GWF ,WMASS   ,WWIDTH  ,W(1,34  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,34  ),GWF ,AMP(18  ))            

      CALL JVVXXX(W(1,35  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     36  ))                                                          
      CALL FVOXXX(W(1,5   ),W(1,36  ),GWF ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL IOVXXX(W(1,6   ),W(1,37  ),W(1,1   ),GZU ,AMP(19  ))            
      CALL FVOXXX(W(1,11  ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,38  ))    
      CALL IOVXXX(W(1,6   ),W(1,38  ),W(1,2   ),GZU ,AMP(20  ))            
      CALL JVVXXX(W(1,36  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     39  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,39  ),GWF ,AMP(21  ))            
      CALL FVOXXX(W(1,11  ),W(1,2   ),GZD ,ZERO    ,ZERO    ,W(1,40  ))    
      CALL IOVXXX(W(1,6   ),W(1,40  ),W(1,35  ),GWF ,AMP(22  ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,36  ),GWF ,AMP(23  ))            
      CALL FVOXXX(W(1,16  ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,41  ))    
      CALL IOVXXX(W(1,6   ),W(1,41  ),W(1,1   ),GZU ,AMP(24  ))            
      CALL JVVXXX(W(1,35  ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     42  ))                                                          
      CALL FVOXXX(W(1,5   ),W(1,42  ),GWF ,ZERO    ,ZERO    ,W(1,43  ))    
      CALL IOVXXX(W(1,6   ),W(1,43  ),W(1,2   ),GZU ,AMP(25  ))            
      CALL JVVXXX(W(1,42  ),W(1,2   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     44  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,44  ),GWF ,AMP(26  ))            
      CALL FVOXXX(W(1,16  ),W(1,1   ),GZD ,ZERO    ,ZERO    ,W(1,45  ))    
      CALL IOVXXX(W(1,6   ),W(1,45  ),W(1,35  ),GWF ,AMP(27  ))            
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,42  ),GWF ,AMP(28  ))            
      CALL JW3WXX(W(1,1   ),W(1,35  ),W(1,2   ),GWWZ ,GWWZ ,WMASS   ,      
     &     WWIDTH  ,W(1,46  ))                                             
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,46  ),GWF ,AMP(29  ))            
      CALL FVOXXX(W(1,5   ),W(1,35  ),GWF ,ZERO    ,ZERO    ,W(1,47  ))    
      CALL FVOXXX(W(1,47  ),W(1,2   ),GZU ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,6   ),W(1,48  ),W(1,1   ),GZU ,AMP(30  ))            
      CALL FVOXXX(W(1,47  ),W(1,1   ),GZU ,ZERO    ,ZERO    ,W(1,49  ))    
      CALL IOVXXX(W(1,6   ),W(1,49  ),W(1,2   ),GZU ,AMP(31  ))            
      CALL HVVXXX(W(1,1   ),W(1,2   ),GZZH ,HMASS   ,HWIDTH  ,W(1,         
     &     50  ))                                                          
      CALL JVSXXX(W(1,35  ),W(1,50  ),GWWH ,WMASS   ,WWIDTH  ,W(1,         
     &     51  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,51  ),GWF ,AMP(32  ))          


      if (.not.higgs_only) then
      ZZ(MU,NU)  =  -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)-AMP(  32)
      else !H->WW only
      ZZ(MU,NU)  = -amp(32)
      endif
          ENDDO
      ENDDO


      END



    
c ===================================================

      subroutine WWtoWW_slm(Q1,Q2,P,ww,ttype)
c
c     attention: color factor (3) not included here.
c
C Generated by MadGraph II                                              
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- w+ -> e+ ve b t~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS,    NEIGEN 
      PARAMETER (NGRAPHS=  31,NEIGEN=  1) 
      INTEGER    NWAVEFUNCS     , NCOLOR
      PARAMETER (NWAVEFUNCS=  49, NCOLOR=   1) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q1(0:3), Q2(0:3), P(0:3,3:6)
      complex*16 ww(0:3,0:3)
      integer ttype

C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, MU, NU
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(3:6), ihel
      DATA (NHEL(IHEL),IHEL=3,6) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
      include 'tensor_born.inc'
      include 'tensor_real.inc'
      include '../higgs_graphs.h'

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"

C ----------
C BEGIN CODE
C ----------

      if (lswitch) then      ! read lepton and W states from common block
         do i=1,6
            if (ttype.eq.1) then 
               w(i,3) = wep_born(i)
               w(i,4) = wve_born(i)
               w(i,5) = wmu_born(i)  !b
               w(i,6) = wvm_born(i)  !t~
               w(i,23) = wp_born(i)
            elseif (ttype.eq.3) then 
               w(i,3) = wep_real(i)
               w(i,4) = wve_real(i)
               w(i,5) = wmu_real(i)  !b
               w(i,6) = wvm_real(i)  !t~
               w(i,23) = wp_real(i)
            else 
               stop 'bad ttype for fermionic tensors'
            endif
         enddo
      else  !re-compute 
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(3   ),-1,W(1,3   ))        
         CALL OXXXXX(P(0,3   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL OXXXXX(P(0,6   ),ZERO ,NHEL(5   ),+1,W(1,5   )) !b       
         CALL IXXXXX(P(0,5   ),ZERO ,NHEL(6   ),-1,W(1,6   )) !t~      

         CALL JIOXXX(W(1,3   ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,23  ))    
      endif


      DO MU = 0,3
         DO NU = 0,3
      CALL VCARTX(Q1(0),wMASS ,wwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),wMASS ,wwidth, NU,-1,W(1,2   )) 
     
      CALL FVIXXX(W(1,3   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL JIOXXX(W(1,7   ),W(1,4   ),GZN ,ZMASS   ,ZWIDTH  ,W(1,8   ))    
      CALL FVOXXX(W(1,5   ),W(1,8   ),GZD ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,6   ),W(1,9   ),W(1,1   ),GWF ,AMP(1   ))            
      CALL JVVXXX(W(1,1   ),W(1,8   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     10  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,10  ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,5   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,11  ))    
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,8   ),GZU ,AMP(3   ))            
      CALL FVIXXX(W(1,7   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,12  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,13  ),GWF ,AMP(4   ))            
      CALL FVOXXX(W(1,4   ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,14  ))    
      CALL JIOXXX(W(1,3   ),W(1,14  ),GAL ,ZERO    ,AWIDTH  ,W(1,15  ))    
      CALL FVOXXX(W(1,5   ),W(1,15  ),GAD ,ZERO    ,ZERO    ,W(1,16  ))    
      CALL IOVXXX(W(1,6   ),W(1,16  ),W(1,1   ),GWF ,AMP(5   ))            
      CALL JIOXXX(W(1,3   ),W(1,14  ),GZL ,ZMASS   ,ZWIDTH  ,W(1,17  ))    
      CALL FVOXXX(W(1,5   ),W(1,17  ),GZD ,ZERO    ,ZERO    ,W(1,18  ))    
      CALL IOVXXX(W(1,6   ),W(1,18  ),W(1,1   ),GWF ,AMP(6   ))            
      CALL JVVXXX(W(1,1   ),W(1,15  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     19  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,19  ),GWF ,AMP(7   ))            
      CALL JVVXXX(W(1,1   ),W(1,17  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     20  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,20  ),GWF ,AMP(8   ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,15  ),GAU ,AMP(9   ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,17  ),GZU ,AMP(10  ))            
      CALL FVOXXX(W(1,14  ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,21  ))    
      CALL JIOXXX(W(1,3   ),W(1,21  ),GWF ,WMASS   ,WWIDTH  ,W(1,22  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,22  ),GWF ,AMP(11  ))
      CALL JVVXXX(W(1,2   ),W(1,23  ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     24  ))                                                          
      CALL FVOXXX(W(1,5   ),W(1,24  ),GAD ,ZERO    ,ZERO    ,W(1,25  ))    
      CALL IOVXXX(W(1,6   ),W(1,25  ),W(1,1   ),GWF ,AMP(12  ))            
      CALL JVVXXX(W(1,2   ),W(1,23  ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     26  ))                                                          
      CALL FVOXXX(W(1,5   ),W(1,26  ),GZD ,ZERO    ,ZERO    ,W(1,27  ))    
      CALL IOVXXX(W(1,6   ),W(1,27  ),W(1,1   ),GWF ,AMP(13  ))            
      CALL JVVXXX(W(1,1   ),W(1,24  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     28  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,28  ),GWF ,AMP(14  ))            
      CALL JVVXXX(W(1,1   ),W(1,26  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     29  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,29  ),GWF ,AMP(15  ))            
      CALL HVVXXX(W(1,2   ),W(1,23  ),GWWH ,HMASS   ,HWIDTH  ,W(1,         
     &     30  ))                                                          
      CALL JVSXXX(W(1,1   ),W(1,30  ),GWWH ,WMASS   ,WWIDTH  ,W(1,         
     &     31  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,31  ),GWF ,AMP(16  ))            
      CALL FVOXXX(W(1,11  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,32  ))    
      CALL IOVXXX(W(1,6   ),W(1,32  ),W(1,23  ),GWF ,AMP(17  ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,24  ),GAU ,AMP(18  ))            
      CALL IOVXXX(W(1,6   ),W(1,11  ),W(1,26  ),GZU ,AMP(19  ))            
      CALL JVVXXX(W(1,2   ),W(1,1   ),GWWZ ,ZMASS   ,ZWIDTH  ,W(1,         
     &     33  ))                                                          
      CALL FVOXXX(W(1,4   ),W(1,33  ),GZN ,ZERO    ,ZERO    ,W(1,34  ))    
      CALL JIOXXX(W(1,3   ),W(1,34  ),GWF ,WMASS   ,WWIDTH  ,W(1,35  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,35  ),GWF ,AMP(20  ))            
      CALL JVVXXX(W(1,2   ),W(1,1   ),GWWA ,ZERO    ,AWIDTH  ,W(1,         
     &     36  ))                                                          
      CALL FVIXXX(W(1,3   ),W(1,36  ),GAL ,ZERO    ,ZERO    ,W(1,37  ))    
      CALL JIOXXX(W(1,37  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,38  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,38  ),GWF ,AMP(21  ))            
      CALL FVIXXX(W(1,3   ),W(1,33  ),GZL ,ZERO    ,ZERO    ,W(1,39  ))    
      CALL JIOXXX(W(1,39  ),W(1,4   ),GWF ,WMASS   ,WWIDTH  ,W(1,40  ))    
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,40  ),GWF ,AMP(22  ))            
      CALL JWWWXX(W(1,1   ),W(1,2   ),W(1,23  ),GWWA ,GWWZ ,WMASS   ,      
     &     WWIDTH  ,W(1,41  ))                                             
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,41  ),GWF ,AMP(23  ))            
      CALL FVOXXX(W(1,5   ),W(1,23  ),GWF ,ZERO    ,ZERO    ,W(1,42  ))    
      CALL FVOXXX(W(1,42  ),W(1,2   ),GWF ,ZERO    ,ZERO    ,W(1,43  ))    
      CALL IOVXXX(W(1,6   ),W(1,43  ),W(1,1   ),GWF ,AMP(24  ))            
      CALL JVVXXX(W(1,23  ),W(1,36  ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     44  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,44  ),GWF ,AMP(25  ))            
      CALL JVVXXX(W(1,23  ),W(1,33  ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     45  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,45  ),GWF ,AMP(26  ))            
      CALL HVVXXX(W(1,2   ),W(1,1   ),GWWH ,HMASS   ,HWIDTH  ,W(1,         
     &     46  ))                                                          
      CALL JVSXXX(W(1,23  ),W(1,46  ),GWWH ,WMASS   ,WWIDTH  ,W(1,         
     &     47  ))                                                          
      CALL IOVXXX(W(1,6   ),W(1,5   ),W(1,47  ),GWF ,AMP(27  ))            
      CALL IOVXXX(W(1,6   ),W(1,42  ),W(1,36  ),GAU ,AMP(28  ))            
      CALL IOVXXX(W(1,6   ),W(1,42  ),W(1,33  ),GZU ,AMP(29  ))            
      CALL FVOXXX(W(1,5   ),W(1,36  ),GAD ,ZERO    ,ZERO    ,W(1,48  ))    
      CALL IOVXXX(W(1,6   ),W(1,48  ),W(1,23  ),GWF ,AMP(30  ))            
      CALL FVOXXX(W(1,5   ),W(1,33  ),GZD ,ZERO    ,ZERO    ,W(1,49  ))    
      CALL IOVXXX(W(1,6   ),W(1,49  ),W(1,23  ),GWF ,AMP(31  ))    
        
      if (.not.higgs_only) then              
      WW(mu,nu ) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
     &             -AMP(   6)-AMP(   7)-AMP(   8)-AMP(   9)-AMP(  10)
     &             -AMP(  11)-AMP(  12)-AMP(  13)-AMP(  14)-AMP(  15)
     &             -AMP(  16)-AMP(  17)-AMP(  18)-AMP(  19)-AMP(  20)
     &             -AMP(  21)-AMP(  22)-AMP(  23)-AMP(  24)-AMP(  25)
     &             -AMP(  26)-AMP(  27)-AMP(  28)-AMP(  29)-AMP(  30)
     &             -AMP(  31)                          
      else ! H->WW only
      WW(MU,NU)  =-AMP(27)
      endif 

          ENDDO
      ENDDO

      end


c ===================================================

      subroutine ZtoWW_slm(P,z,ttype)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z -> e+ ve  b t~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   5) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  13) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q(0:3), P(0:3,2:5)
      complex*16 z(0:5)
      integer ttype
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) / +1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
      include 'tensor_born.inc'
      include 'tensor_real.inc'
      include '../higgs_graphs.h'

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (higgs_only) then 
         z(:) = 0d0
         return
      endif   


      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            if (ttype.eq.1) then 
               w(i,2) = wep_born(i)
               w(i,3) = wve_born(i)
               w(i,4) = wmu_born(i)
               w(i,5) = wvm_born(i)
               w(i,6) = wp_born(i)
            elseif (ttype.eq.3) then 
               w(i,2) = wep_real(i)
               w(i,3) = wve_real(i)
               w(i,4) = wmu_real(i)
               w(i,5) = wvm_real(i)
               w(i,6) = wp_real(i)
            else 
               stop 'bad ttype for fermionic tensors'
            endif
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
c
      if (.not.lswitch) then
         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(2   ),-1,W(1,2   ))
         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(3   ),+1,W(1,3   ))        
         CALL OXXXXX(P(0,5   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))        
         CALL JIOXXX(W(1,2   ),W(1,3),GWF ,WMASS,WWIDTH,W(1,6))  
      endif  
      do mu = 0,3
      CALL VCARTX(Q(0     ),ZMASS ,Zwidth,MU,-1,W(1,1   ))    
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GZU ,AMP(1   ))            
      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWZ ,WMASS   ,WWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GZD ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVOXXX(W(1,3   ),W(1,1   ),GZN ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,2   ),W(1,10  ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))            
      CALL FVIXXX(W(1,2   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,12  ))    
      CALL JIOXXX(W(1,12  ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,13  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,13  ),GWF ,AMP(5   ))

         
      Z(mu) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)-AMP(   5)
      enddo
      z(4) = dcmplx(q(0),q(3))
      z(5) = dcmplx(q(1),q(2))
c
      return
      END


c ===================================================

      subroutine AtoWW_slm(P,a,ttype)
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a -> e+ ve b t~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   4) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=  11) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      REAL*8 Q(0:3), P(0:3,2:5)
      complex*16 a(0:5)
      integer ttype
C  
C LOCAL VARIABLES 
C
      INTEGER I,J, mu
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
      INTEGER NHEL(2:5), ihel
      DATA (NHEL(IHEL),IHEL=2,5) /+1,-1,-1,+1/
      Save NHEL
c  lepton spinors and W+- polarization vectors
      include 'tensor_born.inc'
      include 'tensor_real.inc'
      include '../higgs_graphs.h'

      logical lswitch
      parameter (lswitch=.true.)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (higgs_only) then 
         a(:) = 0d0
         return
      endif   

      if (lswitch) then      ! read in lepton an W states from common block
         do i=1,6
            if (ttype.eq.1) then 
               w(i,2) = wep_born(i)
               w(i,3) = wve_born(i)
               w(i,4) = wmu_born(i)
               w(i,5) = wvm_born(i)
               w(i,6) = wp_born(i)
            elseif (ttype.eq.3) then 
               w(i,2) = wep_real(i)
               w(i,3) = wve_real(i)
               w(i,4) = wmu_real(i)
               w(i,5) = wvm_real(i)
               w(i,6) = wp_real(i)
            else 
               stop 'bad ttype for fermionic tensors'
            endif
         enddo
      endif

      do mu = 0,3
         q(mu) = p(mu,2)+p(mu,3)+p(mu,4)+p(mu,5)
      enddo
c
      if (.not.lswitch) then
         CALL IXXXXX(P(0,3   ),ZERO ,NHEL(2   ),-1,W(1,2   ))        
         CALL OXXXXX(P(0,2   ),ZERO ,NHEL(3   ),+1,W(1,3   ))        
         CALL OXXXXX(P(0,5   ),ZERO ,NHEL(4   ),+1,W(1,4   ))        
         CALL IXXXXX(P(0,4   ),ZERO ,NHEL(5   ),-1,W(1,5   ))   
     
         CALL JIOXXX(W(1,2   ),W(1,3),GWF ,WMASS,WWIDTH,W(1,6)) 
      endif

      do mu = 0,3
      CALL VCARTX(Q(0),ZERO ,ZERO, MU,-1,W(1,1   ))    
      CALL FVOXXX(W(1,4   ),W(1,6   ),GWF ,ZERO    ,ZERO    ,W(1,7   ))    
      CALL IOVXXX(W(1,5   ),W(1,7   ),W(1,1   ),GAU ,AMP(1   ))            
      CALL JVVXXX(W(1,6   ),W(1,1   ),GWWA ,WMASS   ,WWIDTH  ,W(1,         
     &     8   ))                                                          
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,8   ),GWF ,AMP(2   ))            
      CALL FVOXXX(W(1,4   ),W(1,1   ),GAD ,ZERO    ,ZERO    ,W(1,9   ))    
      CALL IOVXXX(W(1,5   ),W(1,9   ),W(1,6   ),GWF ,AMP(3   ))            
      CALL FVIXXX(W(1,2   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,10  ))    
      CALL JIOXXX(W(1,10  ),W(1,3   ),GWF ,WMASS   ,WWIDTH  ,W(1,11  ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,11  ),GWF ,AMP(4   ))
            
      a(mu) = -AMP(   1)-AMP(   2)-AMP(   3)-AMP(   4)

      enddo
      a(4) = dcmplx(q(0),q(3))
      a(5) = dcmplx(q(1),q(2))
c
      END

c=========================

      subroutine WVtoWM_slm(id,Q,v,wma,wmz,ttype)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           id = 1      Q = q1 = W- momentum
c           id = 2      Q = q2 = gamma/Z momentum
c  OUPTPUT: wma(mu,nu)  lepton tensor for w gamma--> mu- nubar
c           wmz(mu,nu)  lepton tensor for w Z    --> mu- nubar
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w- z -> b t~
C and           w- a -> b t~  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS
      PARAMETER (NWAVEFUNCS=   7)
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer id
      real*8 q(0:3), v(0:3,4)
      complex*16 wma(0:3,0:3), wmz(0:3,0:3)
      integer ttype
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, MU, NU
      real*8 q2sq, Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS), denz
c  lepton spinors and W+- polarization vectors
      include 'tensor_born.inc'
      include 'tensor_real.inc'
      include '../higgs_graphs.h'

      complex*16 wm_loc(6),wmu_loc(6),wvm_loc(6)

      logical ldebug
      parameter (ldebug=.false.)
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
C                                                                          
C ----------
C BEGIN CODE
C ----------

      if (higgs_only) then 
         wma(:,:) = 0d0
         wmz(:,:) = 0d0
         return
      endif   


      if (ttype.eq.1) then
         wm_loc(:) = wm_born(:)
         wmu_loc(:)= wmu_born(:)
         wvm_loc(:)= wvm_born(:)
      elseif (ttype.eq.3) then
         wm_loc(:) = wm_real(:)
         wmu_loc(:)= wmu_real(:)
         wvm_loc(:)= wvm_real(:)
      else 
         stop 'bad ttype for fermionic tensors'
      endif

      if (id.eq.1) then
         q2(0) = dreal(wm_loc(5))
         q2(1) = dreal(wm_loc(6))
         q2(2) = dimag(wm_loc(6))
         q2(3) = dimag(wm_loc(5))
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = q2(mu)-q(mu)
         enddo
      elseif (id.eq.2) then
         q1(0) = dreal(wm_loc(5))
         q1(1) = dreal(wm_loc(6))
         q1(2) = dimag(wm_loc(6))
         q1(3) = dimag(wm_loc(5))
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = q1(mu)-q(mu)
         enddo
      endif

      do i=1,6                  ! read lepton states from common block
         w(i,3) = wmu_loc(i)
         w(i,4) = wvm_loc(i)
      enddo

      q2sq = q2(0)**2-q2(1)**2-q2(2)**2-q2(3)**2
      denz = q2sq/dcmplx(q2sq-zmass**2,zmass*zwidth)
      DO MU = 0,3
         CALL VCARTX(Q1(0),WMASS ,Wwidth, MU,-1,W(1,1))        
         CALL FVOXXX(WMU_loc,W(1,1),GWF ,ZERO,ZERO,W(1,6))           

         DO NU = 0,3
            CALL VCARTX(Q2(0),ZERO  ,ZERO  , NU,-1,W(1,2))
       
            CALL FVOXXX(W(1,3),W(1,2),GZD ,ZERO,ZERO,W(1,5))    
            CALL IOVXXX(W(1,4),W(1,5),W(1,1),GWF ,AMP(1))
            CALL IOVXXX(W(1,4),W(1,6),W(1,2),GZU ,AMP(2)) 
            CALL JVVXXX(W(1,1),W(1,2),GWWZ ,WMASS,WWIDTH,W(1,7))
            CALL IOVXXX(W(1,4),W(1,3),W(1,7),GWF ,AMP(3))
 
            wmz(mu,nu) = (-AMP(   1)-AMP(   2)-AMP(   3))*denz
            wma(mu,nu) = -(amp(1)*gad(1)/gzd(1)+amp(2)*gau(1)/gzu(1)
     &                    +amp(3)*gwwa/gwwz)

         enddo
      enddo

      end

