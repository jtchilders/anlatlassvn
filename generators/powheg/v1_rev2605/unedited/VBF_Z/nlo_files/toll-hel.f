c ------------------------------------------------------------	

      subroutine vvtoll(idb,h,Q,v,aa,az,za,zz)
c      
c	this routine calls routines for calculating leptonic tensors
c	for V1 V2 -> l+ l- (V1 and V2 = A or Z)
c
c	IN: 
c	idb:	boson ID
c	h:	ID for lepton polarization
c	Q:	four-momentum of boson idb
c	v:	lepton momenta
c
c	OUT:
c	aa,az,za,zz: tensors for AA, AZ, ZA, ZZ -> l+l- scattering
c	
c ------------------------------------------------------------	

      IMPLICIT NONE

        integer idb,h
        real*8 q(0:3), v(0:3,4)
        complex*16 aa(0:3,0:3)
        complex*16 az(0:3,0:3)
        complex*16 za(0:3,0:3)
        complex*16 zz(0:3,0:3)
	integer lsign(2,-1:1),i,ll,mu,nu
	
	data (lsign(ll,+1),ll=1,2) / -1, -1/
	data (lsign(ll, 0),ll=1,2) /  0,  0/
	data (lsign(ll,-1),ll=1,2) / +1, +1/
	
	if (h.eq.-1)  i = -1
	if (h.eq.+1)  i = +1
	
	  call AAtoLL1(idb,Q,v,lsign(1,i),aa(0,0))
	  call AZtoLL1(idb,Q,v,lsign(1,i),az(0,0))
	  call ZAtoLL1(idb,Q,v,lsign(1,i),za(0,0)) 
	  call ZZtoLL1(idb,Q,v,lsign(1,i),zz(0,0))
			
	end
		
c ------------------------------------------------------------	
       
      subroutine AAtoLL1(idb,Q,v,lsign,aa)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c  OUPTPUT: aa(mu,nu)  lepton tensor for a a --> l+l-  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a a -> e+ e-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 aa(0:3,0:3)
      integer lsign(3:4)
C    
C LOCAL VARIABLES 
C  
      INTEGER I,J,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
      include 'tensorl-hel.inc'
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
  
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
	    q1(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      endif
	
	if (lswitch) then
	    do i = 1,6
	    w(i,3) = lep(i,-lsign(3))
	    w(i,4) = lem(i,-lsign(4))
	    enddo
	else	 
       	  CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))	     
       	  CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
	endif
	             
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero ,zero, MU,-1,W(1,1	  ))	    
      CALL VCARTX(Q2(0),zero ,zero, NU,-1,W(1,2	  )) 
 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GAL ,AMP(2   ))            
      
      aa(mu,nu) = +AMP(   1)+AMP(   2)
        
	 enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	
       
      subroutine AZtoLL1(idb,Q,v,lsign,az)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c  OUPTPUT: aa(mu,nu)  lepton tensor for a z --> l+l-  
C  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : a z -> e+ e-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 az(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
      include 'tensorl-hel.inc'
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      endif
	 
        if (lswitch) then
	    do i = 1,6
	    w(i,3) = lep(i,-lsign(3))
	    w(i,4) = lem(i,-lsign(4))
	    enddo
	else	 
       	  CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
          CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
	endif
             
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zero  ,zero, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GAL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GAL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZL ,AMP(2   ))            
      
      az(mu,nu) = +AMP(   1)+AMP(   2)
         
	 enddo !nu
      enddo !mu

      end

c ------------------------------------------------------------	
       
      subroutine ZAtoLL1(idb,Q,v,lsign,za)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c  OUPTPUT: aa(mu,nu)  lepton tensor for a z --> l+l-  
C  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z a -> e+ e-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS 
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 za(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
      include 'tensorl-hel.inc'
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C                                                                          
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      endif

	if (lswitch) then
	    do i = 1,6
	    w(i,3) = lep(i,-lsign(3))
	    w(i,4) = lem(i,-lsign(4))
	    enddo
	else	 
          CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
          CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
        endif  
	     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zmass ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zero  ,zero , NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GAL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GAL ,AMP(2   ))            
      
      za(mu,nu) = +AMP(   1)+AMP(   2)
 
 	 enddo !nu
      enddo !mu

      end



c ------------------------------------------------------------	
       
      subroutine ZZtoLL1(idb,Q,v,lsign,zz)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = A(1) momentum
c           idb = 2      Q = q2 = A(2) momentum
c  OUPTPUT: aa(mu,nu)  lepton tensor for z z --> l+l-  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : z z -> e+ e-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS 
      PARAMETER (NGRAPHS=   2) 
      INTEGER    NWAVEFUNCS   
      PARAMETER (NWAVEFUNCS=   6) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 zz(0:3,0:3)
      integer lsign(3:4)
C  
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J,mu,nu
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
C  
c  lepton spinors 
      include 'tensorl-hel.inc'
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      endif

	if (lswitch) then
	    do i = 1,6
	    w(i,3) = lep(i,-lsign(3))
	    w(i,4) = lem(i,-lsign(4))
	    enddo
	else	 
          CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
          CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   )) 
        endif
	  
	     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),zMASS ,zwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),zMASS ,zwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,2   ),GZL ,ZERO    ,ZERO    ,W(1,5   ))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,1   ),GZL ,AMP(1   ))            
      CALL FVIXXX(W(1,3   ),W(1,1   ),GZL ,ZERO    ,ZERO    ,W(1,6   ))    
      CALL IOVXXX(W(1,6   ),W(1,4   ),W(1,2   ),GZL ,AMP(2   ))            
      
      zz(mu,nu) = +AMP(   1)+AMP(   2)
        
	 enddo !nu
      enddo !mu

      end
c ------------------------------------------------------------	
c ------------------------------------------------------------	

      subroutine wwtoll(idb,h,Q,v,wll)
	
      IMPLICIT NONE

        integer idb,h
        real*8 q(0:3), v(0:3,4)
        complex*16 wll(0:3,0:3)
	integer lsign(2,-1:1),i,ll,mu,nu
      

	data (lsign(ll,+1),ll=1,2) / -1, -1/
	data (lsign(ll, 0),ll=1,2) /  0,  0/
	data (lsign(ll,-1),ll=1,2) / +1, +1/
	
	if (h.eq.-1)  i = -1
	if (h.eq.+1)  i = +1
	
	call WWtoLL1(idb,Q,v,lsign(1,i),wll(0,0))
			
	end
		
c ------------------------------------------------------------	
       
      subroutine WWtoLL1(idb,Q,v,lsign,wll)
C  Input:   Q(*)        one of the two incoming boson momenta 
c           idb = 1      Q = q1 = W+ momentum
c           idb = 2      Q = q2 = W- momentum
c  OUPTPUT: wll(mu,nu)  lepton tensor for w w--> l+l-  
C  
C Generated by MadGraph II Version 3.0. Updated 02/19/04                
C RETURNS AMPLITUDE SQUARED SUMMED/AVG OVER COLORS
C FOR THE POINT WITH EXTERNAL LINES W(0:6,NEXTERNAL)
C  
C FOR PROCESS : w+ w- -> l+ l-  
C  
      IMPLICIT NONE
C  
C CONSTANTS
C  
      INTEGER    NGRAPHS
      PARAMETER (NGRAPHS=   3) 
      INTEGER    NWAVEFUNCS  
      PARAMETER (NWAVEFUNCS=   7) 
      REAL*8     ZERO
      PARAMETER (ZERO=0D0)
C  
C ARGUMENTS 
C  
      integer idb
      real*8 q(0:3), v(0:3,4), p(0:3,3:4)
      complex*16 wll(0:3,0:3)
      integer lsign(3:4)
C  
C LOCAL VARIABLES 
C  
      INTEGER I,J, MU, NU
      real*8 Q1(0:3), Q2(0:3)
      COMPLEX*16 AMP(NGRAPHS)
      COMPLEX*16 W(6,NWAVEFUNCS)
c  lepton spinors 
      include 'tensorl-hel.inc'
C  
C GLOBAL VARIABLES
C  
      include "coupl.inc"
   
      logical lswitch
      parameter (lswitch=.true.)
C  
C ----------
C BEGIN CODE
C ----------
      
      if (idb.eq.1) then
         do mu = 0,3
            q1(mu) = q(mu)
            q2(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      elseif (idb.eq.2) then
         do mu = 0,3
            q2(mu) = q(mu)
            q1(mu) = qe(mu)-q(mu)
	    p(mu,3) = v(mu,1)
	    p(mu,4) = v(mu,2)
         enddo
      endif
      
	if (lswitch) then
	    do i = 1,6
	    w(i,3) = lep(i,-lsign(3))
	    w(i,4) = lem(i,-lsign(4))
	    enddo
	else	 
       	   CALL IXXXXX(P(0,3   ),ZERO ,-lsign(3),-1,W(1,3   ))        
       	   CALL OXXXXX(P(0,4   ),ZERO ,+lsign(4),+1,W(1,4   ))              
        endif    
		     
      DO MU = 0,3
         DO NU = 0,3
      
      CALL VCARTX(Q1(0),WMASS ,wwidth, MU,-1,W(1,1   ))        
      CALL VCARTX(Q2(0),WMASS ,wwidth, NU,-1,W(1,2   )) 
 
      CALL FVIXXX(W(1,3   ),W(1,1   ),GWF ,ZERO    ,ZERO    ,W(1,5))    
      CALL IOVXXX(W(1,5   ),W(1,4   ),W(1,2   ),GWF ,AMP(1   ))  
                
      CALL JVVXXX(W(1,1   ),W(1,2   ),GWWA ,ZERO   ,ZERO    ,W(1,6))   
      CALL IOVXXX(W(1,3   ),W(1,4   ),W(1,6   ),GAL ,AMP(2   ))           
       
      CALL JVVXXX(W(1,1   ),W(1,2   ),GWWZ ,ZMASS   ,ZWIDTH ,W(1,7))    
      CALL IOVXXX(W(1,3   ),W(1,4   ),W(1,7   ),GZL ,AMP(3   ))            
      
      
      wll(mu,nu) = +AMP(   1)+AMP(   2)+AMP(   3)
               
	 enddo !nu
      enddo !mu

      end
