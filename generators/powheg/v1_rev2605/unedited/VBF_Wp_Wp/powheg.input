!Single vector boson production parameters
idvecbos 24   ! PDG code for vector boson to be produced ( W+:24 W-:-24 )
vdecaymodew1 -11  ! PDG code for charged decay product of 1st vector boson (11:e-; -11:e+; ...)  
vdecaymodew2 -11  ! PDG code for charged decay product of 2nd vector boson (11:e-; -11:e+; ...)  
#zerowidth 0    ! default 0 (offshell Ws); if 1 generate Ws on shell
numevts 1000    ! number of events to be generated
ih1   1           ! hadron 1 (1 for protons, -1 for antiprotons)
ih2   1           ! hadron 2 (1 for protons, -1 for antiprotons)
!ndns1 131         ! pdf set for hadron 1 (mlm numbering)
!ndns2 131         ! pdf set for hadron 2 (mlm numbering)
ebeam1 3500d0     ! energy of beam 1
ebeam2 3500d0     ! energy of beam 2
! To be set only if using LHA pdfs
! 19150 cteq4m
! 19170 cteq4l
! 10050 cteq6m
! 10042 cteq6l with LO alphas (corr. to vbfnlo LO set)
! 10041 cteq6l with NLO alphas
! 21000 MSTW2008 LO
! 21100 MSTW2008 NLO
lhans1  21100     ! pdf set for hadron 1 (LHA numbering)
lhans2  21100     ! pdf set for hadron 2 (LHA numbering)
! To be set only if using different pdf sets for the two incoming hadrons
! QCDLambda5  0.25 ! for not equal pdf sets 

! Parameters to allow or not the use of stored data
use-old-grid    1 ! if 1 use old grid if file pwggrids.dat is present (<> 1 regenerate)
use-old-ubound  1 ! if 1 use norm of upper bounding function stored in pwgubound.dat, if present; <> 1 regenerate

ncall1   1000000 ! number of calls for initializing the integration grid
itmx1    10     ! number of iterations for initializing the integration grid
ncall2   5000  ! number of calls for computing the integral and finding upper bound
itmx2    1     ! number of iterations for computing the integral and finding upper bound
foldcsi   5    ! number of folds on csi integration
foldy     5     ! number of folds on  y  integration
foldphi   10     ! number of folds on phi integration
nubound 100000  ! number of bbarra calls to setup norm of upper bounding function
icsimax  1     ! <= 100, number of csi subdivision when computing the upper bounds
iymax    1     ! <= 100, number of y subdivision when computing the upper bounds
xupbound 2d0   ! increase upper bound for radiation generation

! OPTIONAL PARAMETERS

#renscfact  1d0   ! (default 1d0) ren scale factor: muren  = muref * renscfact 
#facscfact  1d0   ! (default 1d0) fac scale factor: mufact = muref * facscfact 
#ptsupp     0d0   ! (default 0d0)  mass param for Born suppression factor (generation cut) If < 0 suppfact = 1
bornonly   0      ! (default 0) if 1 do Born only
#smartsig   0      ! (default 1) remember equal amplitudes (0 do not remember)
#withsubtr  0      ! (default 1) subtract real counterterms (0 do not subtract)
withdamp    1      ! (default 0, do not use) use Born-zero damping factor
#ptsqmin    0.8    ! (default 0.8 GeV) minimum pt for generation of radiation
#charmthr   1.5    ! (default 1.5 GeV) charm treshold for gluon splitting 
#bottomthr  5.0    ! (default 5.0 GeV) bottom treshold for gluon splitting
testplots  1      ! (default 0, do not) do NLO and PWHG distributions
#hfact    100d0    ! (default no dumping factor) dump factor for high-pt radiation: > 0 dumpfac=h**2/(pt2+h**2)
#testsuda  1       ! (default 0, do not test) test Sudakov form factor
#radregion 1       ! (default all regions) only generate radiation in the selected singular region  
#charmthrpdf  1.5  ! (default 1.5 GeV) pdf charm treshold
#bottomthrpdf 5.0  ! (default 5.0 GeV) pdf bottom treshold

#iseed    12345    ! initialize random number sequence 
#rand1     -1      ! initialize random number sequence 
#rand2     -1      ! initialize random number sequence 

#iupperisr 1 ! (default 1) choice of ISR upper bounding functional form 
#iupperfsr 2 ! (default 2) choice of FSR upper bounding functional form 

! Z+jet production
#bornktmin  20d0    ! (default 0d0) kt min at Born level for jet in Z+jet 

#manyseeds  1       ! Used to perform multiple runs with different random
                   ! seeds in the same directory.
                   ! If set to 1, the program asks for an integer j;
                   ! The file pwgseeds.dat at line j is read, and the
                   ! integer at line j is used to initialize the random
                   ! sequence for the generation of the event.
                   ! The event file is called pwgevents-'j'.lhe

fakevirt 1		! uses Born for determining virt. grid

withnegweights 1

#fixedscale 80.419d0 
